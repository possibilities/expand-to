openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: with users'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                user1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    users:
                      - name: quos
                      - name: consequatur
                      - name: asperiores
                      - name: ut
                      - name: non
                      - name: quia
                      - name: illum
                      - name: nulla
                      - name: repudiandae
                      - name: suscipit
                      - name: iure
                      - name: delectus
                      - name: assumenda
                      - name: a
                      - name: delectus
                      - name: similique
                      - name: doloremque
                      - name: quidem
                      - name: repudiandae
                      - name: voluptas
                user2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    users:
                      - name: exercitationem
                      - name: fuga
                      - name: eos
                      - name: eos
                      - name: quas
                      - name: consequatur
                      - name: assumenda
                      - name: officia
                      - name: maiores
                      - name: non
                      - name: est
                      - name: ad
                      - name: laboriosam
                      - name: exercitationem
                      - name: fugit
                      - name: repellendus
                      - name: id
                      - name: quia
                      - name: laboriosam
                      - name: qui
                user3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    users:
                      - name: necessitatibus
                      - name: architecto
                      - name: et
                      - name: quis
                      - name: omnis
                      - name: sint
                      - name: architecto
                      - name: et
                      - name: aliquid
                      - name: nulla
                      - name: repudiandae
                      - name: velit
                      - name: rerum
                      - name: incidunt
                      - name: tempore
                      - name: in
                      - name: adipisci
                      - name: iste
                      - name: ut
                      - name: quasi
                user4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    users:
                      - name: ut
                      - name: illum
                      - name: aut
                      - name: sit
                      - name: ut
                      - name: rem
                      - name: dolores
                      - name: consequatur
                      - name: est
                      - name: nihil
                      - name: aut
                      - name: nulla
                      - name: et
                      - name: debitis
                      - name: impedit
                      - name: aperiam
                      - name: officia
                      - name: modi
                      - name: tempore
                      - name: voluptate
                user5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    users:
                      - name: ut
                      - name: officiis
                      - name: voluptatem
                      - name: quibusdam
                      - name: vel
                      - name: iusto
                      - name: quaerat
                      - name: et
                      - name: cum
                      - name: quibusdam
                      - name: aliquid
                      - name: sit
                      - name: illum
                      - name: soluta
                      - name: consequatur
                      - name: tempore
                      - name: est
                      - name: et
                      - name: voluptatem
                      - name: amet
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: molestiae
              user2:
                value:
                  name: similique
              user3:
                value:
                  name: amet
              user4:
                value:
                  name: et
              user5:
                value:
                  name: soluta
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: voluptatem
                user2:
                  value:
                    user:
                      name: eos
                user3:
                  value:
                    user:
                      name: omnis
                user4:
                  value:
                    user:
                      name: neque
                user5:
                  value:
                    user:
                      name: temporibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: distinctio
                user2:
                  value:
                    user:
                      name: quia
                user3:
                  value:
                    user:
                      name: est
                user4:
                  value:
                    user:
                      name: rem
                user5:
                  value:
                    user:
                      name: ipsa
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: at
              user2:
                value:
                  name: enim
              user3:
                value:
                  name: cumque
              user4:
                value:
                  name: nesciunt
              user5:
                value:
                  name: quo
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: asperiores
                user2:
                  value:
                    user:
                      name: qui
                user3:
                  value:
                    user:
                      name: aperiam
                user4:
                  value:
                    user:
                      name: autem
                user5:
                  value:
                    user:
                      name: iure
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: quaerat
              user2:
                value:
                  name: eum
              user3:
                value:
                  name: quis
              user4:
                value:
                  name: doloribus
              user5:
                value:
                  name: autem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: corporis
                user2:
                  value:
                    user:
                      name: ad
                user3:
                  value:
                    user:
                      name: necessitatibus
                user4:
                  value:
                    user:
                      name: voluptas
                user5:
                  value:
                    user:
                      name: quaerat
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: officiis
                      - name: quaerat
                      - name: blanditiis
                      - name: sequi
                      - name: similique
                      - name: atque
                      - name: et
                      - name: architecto
                      - name: reiciendis
                      - name: unde
                      - name: laudantium
                      - name: deleniti
                      - name: aut
                      - name: vero
                      - name: sapiente
                      - name: voluptatibus
                      - name: quidem
                      - name: consequatur
                      - name: iste
                      - name: aut
                pet2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: at
                      - name: nisi
                      - name: placeat
                      - name: vitae
                      - name: nisi
                      - name: quo
                      - name: repellendus
                      - name: aut
                      - name: voluptate
                      - name: et
                      - name: harum
                      - name: et
                      - name: sunt
                      - name: culpa
                      - name: ut
                      - name: iure
                      - name: consequatur
                      - name: saepe
                      - name: animi
                      - name: labore
                pet3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: suscipit
                      - name: distinctio
                      - name: eveniet
                      - name: facere
                      - name: repellendus
                      - name: autem
                      - name: esse
                      - name: quos
                      - name: dolor
                      - name: quis
                      - name: quisquam
                      - name: dolore
                      - name: hic
                      - name: sequi
                      - name: officiis
                      - name: dolor
                      - name: voluptatibus
                      - name: id
                      - name: hic
                      - name: quaerat
                pet4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: est
                      - name: explicabo
                      - name: quam
                      - name: omnis
                      - name: beatae
                      - name: ea
                      - name: explicabo
                      - name: ratione
                      - name: et
                      - name: occaecati
                      - name: omnis
                      - name: et
                      - name: et
                      - name: est
                      - name: consequatur
                      - name: sint
                      - name: voluptate
                      - name: eos
                      - name: voluptas
                      - name: in
                pet5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: autem
                      - name: vel
                      - name: aut
                      - name: libero
                      - name: a
                      - name: natus
                      - name: ullam
                      - name: doloremque
                      - name: inventore
                      - name: aperiam
                      - name: eum
                      - name: vel
                      - name: totam
                      - name: nobis
                      - name: provident
                      - name: porro
                      - name: doloremque
                      - name: quia
                      - name: sit
                      - name: quibusdam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: delectus
              pet2:
                value:
                  name: distinctio
              pet3:
                value:
                  name: in
              pet4:
                value:
                  name: saepe
              pet5:
                value:
                  name: quis
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: aliquid
                pet2:
                  value:
                    pet:
                      name: non
                pet3:
                  value:
                    pet:
                      name: ut
                pet4:
                  value:
                    pet:
                      name: soluta
                pet5:
                  value:
                    pet:
                      name: totam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quo
                pet2:
                  value:
                    pet:
                      name: quibusdam
                pet3:
                  value:
                    pet:
                      name: exercitationem
                pet4:
                  value:
                    pet:
                      name: molestias
                pet5:
                  value:
                    pet:
                      name: omnis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: reprehenderit
              pet2:
                value:
                  name: soluta
              pet3:
                value:
                  name: veritatis
              pet4:
                value:
                  name: nesciunt
              pet5:
                value:
                  name: enim
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: voluptatum
                pet2:
                  value:
                    pet:
                      name: ut
                pet3:
                  value:
                    pet:
                      name: dolorem
                pet4:
                  value:
                    pet:
                      name: minus
                pet5:
                  value:
                    pet:
                      name: sapiente
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: nemo
              pet2:
                value:
                  name: tempore
              pet3:
                value:
                  name: et
              pet4:
                value:
                  name: dolorem
              pet5:
                value:
                  name: quas
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: id
                pet2:
                  value:
                    pet:
                      name: natus
                pet3:
                  value:
                    pet:
                      name: hic
                pet4:
                  value:
                    pet:
                      name: accusamus
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: autem
                user2:
                  value:
                    user:
                      name: et
                user3:
                  value:
                    user:
                      name: vel
                user4:
                  value:
                    user:
                      name: excepturi
                user5:
                  value:
                    user:
                      name: natus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/users':
    get:
      operationId: listPetUsers
      tags:
        - Pets
      summary: List pet users
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUsers:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetUserResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                petUser1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petUsers:
                      - userId: qui
                      - userId: et
                      - userId: excepturi
                      - userId: ea
                      - userId: dolorum
                      - userId: quia
                      - userId: voluptatum
                      - userId: quibusdam
                      - userId: in
                      - userId: sit
                      - userId: aut
                      - userId: doloribus
                      - userId: inventore
                      - userId: sint
                      - userId: unde
                      - userId: et
                      - userId: assumenda
                      - userId: pariatur
                      - userId: minus
                      - userId: deserunt
                petUser2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petUsers:
                      - userId: eos
                      - userId: explicabo
                      - userId: illo
                      - userId: aperiam
                      - userId: dolores
                      - userId: voluptatem
                      - userId: et
                      - userId: ea
                      - userId: rem
                      - userId: et
                      - userId: ut
                      - userId: dolores
                      - userId: labore
                      - userId: explicabo
                      - userId: ullam
                      - userId: corporis
                      - userId: eum
                      - userId: aut
                      - userId: quo
                      - userId: dolor
                petUser3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petUsers:
                      - userId: quo
                      - userId: repellendus
                      - userId: dolore
                      - userId: nemo
                      - userId: laboriosam
                      - userId: accusantium
                      - userId: et
                      - userId: maxime
                      - userId: consequatur
                      - userId: explicabo
                      - userId: aliquam
                      - userId: qui
                      - userId: quo
                      - userId: non
                      - userId: numquam
                      - userId: sit
                      - userId: est
                      - userId: qui
                      - userId: et
                      - userId: quam
                petUser4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petUsers:
                      - userId: nulla
                      - userId: aspernatur
                      - userId: qui
                      - userId: corporis
                      - userId: dolorem
                      - userId: ex
                      - userId: dolorum
                      - userId: accusamus
                      - userId: placeat
                      - userId: facilis
                      - userId: numquam
                      - userId: totam
                      - userId: qui
                      - userId: cum
                      - userId: eum
                      - userId: exercitationem
                      - userId: nisi
                      - userId: consequatur
                      - userId: non
                      - userId: magnam
                petUser5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petUsers:
                      - userId: consequatur
                      - userId: voluptatem
                      - userId: dolorem
                      - userId: ut
                      - userId: ea
                      - userId: omnis
                      - userId: aut
                      - userId: rerum
                      - userId: sed
                      - userId: sed
                      - userId: sit
                      - userId: ut
                      - userId: dolorem
                      - userId: sed
                      - userId: numquam
                      - userId: qui
                      - userId: aut
                      - userId: rerum
                      - userId: itaque
                      - userId: doloremque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetUser
      tags:
        - Pets
      summary: Create pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUserRequest'
            examples:
              petUser1:
                value:
                  userId: ut
              petUser2:
                value:
                  userId: quis
              petUser3:
                value:
                  userId: officiis
              petUser4:
                value:
                  userId: tenetur
              petUser5:
                value:
                  userId: natus
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: corporis
                petUser2:
                  value:
                    petUser:
                      userId: aperiam
                petUser3:
                  value:
                    petUser:
                      userId: assumenda
                petUser4:
                  value:
                    petUser:
                      userId: excepturi
                petUser5:
                  value:
                    petUser:
                      userId: fugit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/users/{userId}':
    head:
      operationId: checkPetUser
      tags:
        - Pets
      summary: Check pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetUser
      tags:
        - Pets
      summary: Get pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: aliquid
                petUser2:
                  value:
                    petUser:
                      userId: nemo
                petUser3:
                  value:
                    petUser:
                      userId: expedita
                petUser4:
                  value:
                    petUser:
                      userId: sed
                petUser5:
                  value:
                    petUser:
                      userId: autem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetUser
      tags:
        - Pets
      summary: Replace pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUserRequest'
            examples:
              petUser1:
                value:
                  userId: impedit
              petUser2:
                value:
                  userId: saepe
              petUser3:
                value:
                  userId: quos
              petUser4:
                value:
                  userId: ea
              petUser5:
                value:
                  userId: ut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: debitis
                petUser2:
                  value:
                    petUser:
                      userId: pariatur
                petUser3:
                  value:
                    petUser:
                      userId: consequatur
                petUser4:
                  value:
                    petUser:
                      userId: velit
                petUser5:
                  value:
                    petUser:
                      userId: adipisci
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetUser
      tags:
        - Pets
      summary: Modify pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUserRequest'
            examples:
              petUser1:
                value:
                  userId: et
              petUser2:
                value:
                  userId: quis
              petUser3:
                value:
                  userId: magnam
              petUser4:
                value:
                  userId: repellendus
              petUser5:
                value:
                  userId: deleniti
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: ut
                petUser2:
                  value:
                    petUser:
                      userId: beatae
                petUser3:
                  value:
                    petUser:
                      userId: architecto
                petUser4:
                  value:
                    petUser:
                      userId: culpa
                petUser5:
                  value:
                    petUser:
                      userId: incidunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetUser
      tags:
        - Pets
      summary: Delete pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets:
    get:
      operationId: listPetsAsUser
      tags:
        - User
      summary: List pets for user
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: quam
                      - name: qui
                      - name: perferendis
                      - name: error
                      - name: ratione
                      - name: perferendis
                      - name: eos
                      - name: quidem
                      - name: cupiditate
                      - name: et
                      - name: unde
                      - name: ea
                      - name: harum
                      - name: non
                      - name: laboriosam
                      - name: omnis
                      - name: voluptas
                      - name: labore
                      - name: amet
                      - name: corporis
                pet2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: tenetur
                      - name: voluptatem
                      - name: nam
                      - name: doloremque
                      - name: non
                      - name: at
                      - name: nemo
                      - name: possimus
                      - name: ipsam
                      - name: voluptates
                      - name: enim
                      - name: assumenda
                      - name: omnis
                      - name: modi
                      - name: non
                      - name: et
                      - name: fuga
                      - name: amet
                      - name: dolorem
                      - name: consequatur
                pet3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: quibusdam
                      - name: repudiandae
                      - name: sint
                      - name: quam
                      - name: eius
                      - name: eligendi
                      - name: saepe
                      - name: unde
                      - name: sed
                      - name: doloremque
                      - name: eos
                      - name: et
                      - name: voluptatum
                      - name: omnis
                      - name: necessitatibus
                      - name: aut
                      - name: et
                      - name: et
                      - name: reiciendis
                      - name: consequatur
                pet4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: harum
                      - name: dolor
                      - name: molestiae
                      - name: veritatis
                      - name: ut
                      - name: repudiandae
                      - name: quos
                      - name: hic
                      - name: voluptatem
                      - name: eligendi
                      - name: expedita
                      - name: sed
                      - name: vel
                      - name: rerum
                      - name: iusto
                      - name: omnis
                      - name: quam
                      - name: maxime
                      - name: blanditiis
                      - name: dolor
                pet5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: quas
                      - name: numquam
                      - name: porro
                      - name: repellendus
                      - name: assumenda
                      - name: laborum
                      - name: sint
                      - name: nemo
                      - name: dolor
                      - name: in
                      - name: neque
                      - name: soluta
                      - name: atque
                      - name: velit
                      - name: quod
                      - name: et
                      - name: harum
                      - name: facilis
                      - name: nisi
                      - name: quis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetAsUser
      tags:
        - User
      summary: Create pet for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: debitis
              pet2:
                value:
                  name: et
              pet3:
                value:
                  name: qui
              pet4:
                value:
                  name: sequi
              pet5:
                value:
                  name: beatae
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quidem
                pet2:
                  value:
                    pet:
                      name: minus
                pet3:
                  value:
                    pet:
                      name: aut
                pet4:
                  value:
                    pet:
                      name: reiciendis
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/{petId}':
    head:
      operationId: checkPetAsUser
      tags:
        - User
      summary: Check pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetAsUser
      tags:
        - User
      summary: Get pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: ea
                pet2:
                  value:
                    pet:
                      name: eos
                pet3:
                  value:
                    pet:
                      name: exercitationem
                pet4:
                  value:
                    pet:
                      name: nobis
                pet5:
                  value:
                    pet:
                      name: eius
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetAsUser
      tags:
        - User
      summary: Replace pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: odit
              pet2:
                value:
                  name: doloremque
              pet3:
                value:
                  name: praesentium
              pet4:
                value:
                  name: autem
              pet5:
                value:
                  name: vel
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: aperiam
                pet2:
                  value:
                    pet:
                      name: recusandae
                pet3:
                  value:
                    pet:
                      name: error
                pet4:
                  value:
                    pet:
                      name: quam
                pet5:
                  value:
                    pet:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetAsUser
      tags:
        - User
      summary: Modify pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: dignissimos
              pet2:
                value:
                  name: voluptatibus
              pet3:
                value:
                  name: et
              pet4:
                value:
                  name: aliquam
              pet5:
                value:
                  name: sit
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: expedita
                pet2:
                  value:
                    pet:
                      name: eligendi
                pet3:
                  value:
                    pet:
                      name: aut
                pet4:
                  value:
                    pet:
                      name: deleniti
                pet5:
                  value:
                    pet:
                      name: voluptatem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetAsUser
      tags:
        - User
      summary: Delete pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetUserResponse:
      properties:
        userId:
          type: string
    PetUserRequest:
      properties:
        userId:
          type: string
