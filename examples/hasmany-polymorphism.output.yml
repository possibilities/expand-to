openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: hasMany polymorphism'
paths:
  /people:
    get:
      operationId: listPeople
      tags:
        - People
      summary: List people
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  people:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersonResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                person1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    people:
                      - name: et
                      - name: minima
                      - name: expedita
                      - name: dignissimos
                      - name: iste
                      - name: asperiores
                      - name: soluta
                      - name: unde
                      - name: reiciendis
                      - name: placeat
                      - name: qui
                      - name: tempora
                      - name: provident
                      - name: alias
                      - name: harum
                      - name: similique
                      - name: veritatis
                      - name: itaque
                      - name: quod
                      - name: sint
                person2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    people:
                      - name: ut
                      - name: sint
                      - name: aut
                      - name: repellat
                      - name: et
                      - name: deleniti
                      - name: iste
                      - name: corrupti
                      - name: saepe
                      - name: dolores
                      - name: error
                      - name: error
                      - name: possimus
                      - name: aliquid
                      - name: aut
                      - name: est
                      - name: temporibus
                      - name: quia
                      - name: corporis
                      - name: iste
                person3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    people:
                      - name: voluptatem
                      - name: deserunt
                      - name: impedit
                      - name: reiciendis
                      - name: excepturi
                      - name: ut
                      - name: totam
                      - name: voluptatem
                      - name: omnis
                      - name: voluptas
                      - name: ad
                      - name: praesentium
                      - name: a
                      - name: odit
                      - name: fugiat
                      - name: sit
                      - name: quibusdam
                      - name: et
                      - name: assumenda
                      - name: animi
                person4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    people:
                      - name: nam
                      - name: enim
                      - name: occaecati
                      - name: aut
                      - name: aliquam
                      - name: ut
                      - name: assumenda
                      - name: blanditiis
                      - name: accusantium
                      - name: distinctio
                      - name: suscipit
                      - name: incidunt
                      - name: facere
                      - name: non
                      - name: error
                      - name: et
                      - name: inventore
                      - name: voluptatem
                      - name: sequi
                      - name: fugiat
                person5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    people:
                      - name: tempore
                      - name: quidem
                      - name: quia
                      - name: quia
                      - name: quibusdam
                      - name: enim
                      - name: eos
                      - name: quia
                      - name: nisi
                      - name: ullam
                      - name: unde
                      - name: inventore
                      - name: alias
                      - name: et
                      - name: quasi
                      - name: sunt
                      - name: id
                      - name: dolorum
                      - name: eos
                      - name: totam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPerson
      tags:
        - People
      summary: Create person
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: incidunt
              person2:
                value:
                  name: sed
              person3:
                value:
                  name: et
              person4:
                value:
                  name: quas
              person5:
                value:
                  name: adipisci
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: nihil
                person2:
                  value:
                    person:
                      name: optio
                person3:
                  value:
                    person:
                      name: temporibus
                person4:
                  value:
                    person:
                      name: est
                person5:
                  value:
                    person:
                      name: quidem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/people/{personId}':
    head:
      operationId: checkPerson
      tags:
        - People
      summary: Check person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPerson
      tags:
        - People
      summary: Get person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: alias
                person2:
                  value:
                    person:
                      name: saepe
                person3:
                  value:
                    person:
                      name: facilis
                person4:
                  value:
                    person:
                      name: molestiae
                person5:
                  value:
                    person:
                      name: eligendi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePerson
      tags:
        - People
      summary: Replace person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: molestias
              person2:
                value:
                  name: sed
              person3:
                value:
                  name: necessitatibus
              person4:
                value:
                  name: voluptatem
              person5:
                value:
                  name: fugit
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: delectus
                person2:
                  value:
                    person:
                      name: omnis
                person3:
                  value:
                    person:
                      name: est
                person4:
                  value:
                    person:
                      name: debitis
                person5:
                  value:
                    person:
                      name: ex
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPerson
      tags:
        - People
      summary: Modify person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: aut
              person2:
                value:
                  name: assumenda
              person3:
                value:
                  name: enim
              person4:
                value:
                  name: sunt
              person5:
                value:
                  name: beatae
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: magnam
                person2:
                  value:
                    person:
                      name: qui
                person3:
                  value:
                    person:
                      name: quasi
                person4:
                  value:
                    person:
                      name: aut
                person5:
                  value:
                    person:
                      name: velit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePerson
      tags:
        - People
      summary: Delete person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: eos
                      - name: rerum
                      - name: delectus
                      - name: repellendus
                      - name: error
                      - name: aliquid
                      - name: nemo
                      - name: et
                      - name: ipsam
                      - name: aspernatur
                      - name: quam
                      - name: ab
                      - name: possimus
                      - name: enim
                      - name: eum
                      - name: quis
                      - name: voluptatem
                      - name: fugiat
                      - name: nisi
                      - name: velit
                pet2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: aliquam
                      - name: ex
                      - name: et
                      - name: facilis
                      - name: recusandae
                      - name: quia
                      - name: nihil
                      - name: enim
                      - name: inventore
                      - name: necessitatibus
                      - name: quis
                      - name: in
                      - name: occaecati
                      - name: non
                      - name: excepturi
                      - name: repudiandae
                      - name: nihil
                      - name: ex
                      - name: fuga
                      - name: et
                pet3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: culpa
                      - name: id
                      - name: recusandae
                      - name: dolores
                      - name: sequi
                      - name: et
                      - name: omnis
                      - name: blanditiis
                      - name: fuga
                      - name: veniam
                      - name: et
                      - name: sed
                      - name: omnis
                      - name: adipisci
                      - name: necessitatibus
                      - name: optio
                      - name: libero
                      - name: ea
                      - name: delectus
                      - name: ut
                pet4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: amet
                      - name: et
                      - name: numquam
                      - name: consequuntur
                      - name: dignissimos
                      - name: id
                      - name: eius
                      - name: molestiae
                      - name: nisi
                      - name: impedit
                      - name: accusamus
                      - name: omnis
                      - name: eos
                      - name: esse
                      - name: ut
                      - name: voluptatum
                      - name: in
                      - name: voluptate
                      - name: unde
                      - name: dolore
                pet5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: voluptatum
                      - name: esse
                      - name: commodi
                      - name: explicabo
                      - name: sed
                      - name: temporibus
                      - name: architecto
                      - name: blanditiis
                      - name: est
                      - name: sit
                      - name: accusantium
                      - name: repellendus
                      - name: sed
                      - name: qui
                      - name: dolore
                      - name: et
                      - name: repellat
                      - name: dolores
                      - name: magnam
                      - name: modi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: eveniet
              pet2:
                value:
                  name: similique
              pet3:
                value:
                  name: dolorem
              pet4:
                value:
                  name: temporibus
              pet5:
                value:
                  name: reprehenderit
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: doloremque
                pet2:
                  value:
                    pet:
                      name: incidunt
                pet3:
                  value:
                    pet:
                      name: delectus
                pet4:
                  value:
                    pet:
                      name: nisi
                pet5:
                  value:
                    pet:
                      name: itaque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: pariatur
                pet2:
                  value:
                    pet:
                      name: voluptas
                pet3:
                  value:
                    pet:
                      name: sed
                pet4:
                  value:
                    pet:
                      name: in
                pet5:
                  value:
                    pet:
                      name: labore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: nulla
              pet2:
                value:
                  name: asperiores
              pet3:
                value:
                  name: dolores
              pet4:
                value:
                  name: voluptas
              pet5:
                value:
                  name: quis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: rerum
                pet2:
                  value:
                    pet:
                      name: illum
                pet3:
                  value:
                    pet:
                      name: error
                pet4:
                  value:
                    pet:
                      name: expedita
                pet5:
                  value:
                    pet:
                      name: dicta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: inventore
              pet2:
                value:
                  name: facilis
              pet3:
                value:
                  name: vitae
              pet4:
                value:
                  name: ut
              pet5:
                value:
                  name: sit
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quidem
                pet2:
                  value:
                    pet:
                      name: culpa
                pet3:
                  value:
                    pet:
                      name: animi
                pet4:
                  value:
                    pet:
                      name: dolorem
                pet5:
                  value:
                    pet:
                      name: adipisci
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners':
    get:
      operationId: listPetOwners
      tags:
        - Pets
      summary: List pet owners
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwners:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetOwnerResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                petOwner1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petOwners:
                      - ownerId: et
                      - ownerId: earum
                      - ownerId: dolores
                      - ownerId: consequatur
                      - ownerId: voluptatem
                      - ownerId: esse
                      - ownerId: incidunt
                      - ownerId: accusantium
                      - ownerId: officiis
                      - ownerId: dolorem
                      - ownerId: facilis
                      - ownerId: sunt
                      - ownerId: eligendi
                      - ownerId: assumenda
                      - ownerId: autem
                      - ownerId: iste
                      - ownerId: facilis
                      - ownerId: quam
                      - ownerId: impedit
                      - ownerId: voluptas
                petOwner2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petOwners:
                      - ownerId: vitae
                      - ownerId: mollitia
                      - ownerId: ipsa
                      - ownerId: ab
                      - ownerId: nam
                      - ownerId: tenetur
                      - ownerId: aut
                      - ownerId: perferendis
                      - ownerId: autem
                      - ownerId: recusandae
                      - ownerId: provident
                      - ownerId: debitis
                      - ownerId: sed
                      - ownerId: ut
                      - ownerId: incidunt
                      - ownerId: aut
                      - ownerId: modi
                      - ownerId: dicta
                      - ownerId: fugiat
                      - ownerId: quo
                petOwner3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petOwners:
                      - ownerId: non
                      - ownerId: incidunt
                      - ownerId: non
                      - ownerId: nisi
                      - ownerId: consectetur
                      - ownerId: neque
                      - ownerId: sed
                      - ownerId: quam
                      - ownerId: neque
                      - ownerId: omnis
                      - ownerId: quae
                      - ownerId: occaecati
                      - ownerId: possimus
                      - ownerId: nobis
                      - ownerId: autem
                      - ownerId: quisquam
                      - ownerId: sunt
                      - ownerId: amet
                      - ownerId: est
                      - ownerId: impedit
                petOwner4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petOwners:
                      - ownerId: et
                      - ownerId: qui
                      - ownerId: recusandae
                      - ownerId: sint
                      - ownerId: non
                      - ownerId: non
                      - ownerId: et
                      - ownerId: non
                      - ownerId: officia
                      - ownerId: quo
                      - ownerId: corporis
                      - ownerId: aut
                      - ownerId: a
                      - ownerId: sit
                      - ownerId: ipsum
                      - ownerId: illo
                      - ownerId: accusantium
                      - ownerId: dignissimos
                      - ownerId: consequatur
                      - ownerId: ipsa
                petOwner5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petOwners:
                      - ownerId: molestiae
                      - ownerId: facere
                      - ownerId: sequi
                      - ownerId: praesentium
                      - ownerId: doloribus
                      - ownerId: officia
                      - ownerId: autem
                      - ownerId: animi
                      - ownerId: quas
                      - ownerId: tempora
                      - ownerId: velit
                      - ownerId: commodi
                      - ownerId: in
                      - ownerId: beatae
                      - ownerId: perferendis
                      - ownerId: eum
                      - ownerId: eum
                      - ownerId: beatae
                      - ownerId: accusamus
                      - ownerId: tempora
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwner
      tags:
        - Pets
      summary: Create pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: sequi
              petOwner2:
                value:
                  ownerId: est
              petOwner3:
                value:
                  ownerId: consequatur
              petOwner4:
                value:
                  ownerId: maiores
              petOwner5:
                value:
                  ownerId: veritatis
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: sit
                petOwner2:
                  value:
                    petOwner:
                      ownerId: sunt
                petOwner3:
                  value:
                    petOwner:
                      ownerId: quod
                petOwner4:
                  value:
                    petOwner:
                      ownerId: quas
                petOwner5:
                  value:
                    petOwner:
                      ownerId: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners/{ownerId}':
    head:
      operationId: checkPetOwner
      tags:
        - Pets
      summary: Check pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwner
      tags:
        - Pets
      summary: Get pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: cupiditate
                petOwner2:
                  value:
                    petOwner:
                      ownerId: molestias
                petOwner3:
                  value:
                    petOwner:
                      ownerId: ea
                petOwner4:
                  value:
                    petOwner:
                      ownerId: quia
                petOwner5:
                  value:
                    petOwner:
                      ownerId: expedita
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwner
      tags:
        - Pets
      summary: Replace pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: qui
              petOwner2:
                value:
                  ownerId: nesciunt
              petOwner3:
                value:
                  ownerId: exercitationem
              petOwner4:
                value:
                  ownerId: qui
              petOwner5:
                value:
                  ownerId: quod
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: officiis
                petOwner2:
                  value:
                    petOwner:
                      ownerId: non
                petOwner3:
                  value:
                    petOwner:
                      ownerId: corporis
                petOwner4:
                  value:
                    petOwner:
                      ownerId: praesentium
                petOwner5:
                  value:
                    petOwner:
                      ownerId: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwner
      tags:
        - Pets
      summary: Modify pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: ut
              petOwner2:
                value:
                  ownerId: voluptas
              petOwner3:
                value:
                  ownerId: assumenda
              petOwner4:
                value:
                  ownerId: sit
              petOwner5:
                value:
                  ownerId: earum
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: et
                petOwner2:
                  value:
                    petOwner:
                      ownerId: et
                petOwner3:
                  value:
                    petOwner:
                      ownerId: et
                petOwner4:
                  value:
                    petOwner:
                      ownerId: officiis
                petOwner5:
                  value:
                    petOwner:
                      ownerId: nisi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwner
      tags:
        - Pets
      summary: Delete pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors':
    get:
      operationId: listPetDoctors
      tags:
        - Pets
      summary: List pet doctors
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctors:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetDoctorResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                petDoctor1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petDoctors:
                      - doctorId: et
                      - doctorId: dolorem
                      - doctorId: corporis
                      - doctorId: velit
                      - doctorId: atque
                      - doctorId: non
                      - doctorId: porro
                      - doctorId: dicta
                      - doctorId: quo
                      - doctorId: velit
                      - doctorId: qui
                      - doctorId: vel
                      - doctorId: soluta
                      - doctorId: ut
                      - doctorId: velit
                      - doctorId: necessitatibus
                      - doctorId: natus
                      - doctorId: aperiam
                      - doctorId: qui
                      - doctorId: distinctio
                petDoctor2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petDoctors:
                      - doctorId: repellendus
                      - doctorId: ab
                      - doctorId: est
                      - doctorId: ut
                      - doctorId: voluptas
                      - doctorId: blanditiis
                      - doctorId: vero
                      - doctorId: ipsam
                      - doctorId: ad
                      - doctorId: quaerat
                      - doctorId: harum
                      - doctorId: debitis
                      - doctorId: voluptatem
                      - doctorId: possimus
                      - doctorId: unde
                      - doctorId: et
                      - doctorId: eum
                      - doctorId: ipsa
                      - doctorId: reiciendis
                      - doctorId: quia
                petDoctor3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petDoctors:
                      - doctorId: aut
                      - doctorId: necessitatibus
                      - doctorId: quo
                      - doctorId: blanditiis
                      - doctorId: laborum
                      - doctorId: ad
                      - doctorId: est
                      - doctorId: consectetur
                      - doctorId: assumenda
                      - doctorId: maxime
                      - doctorId: sit
                      - doctorId: et
                      - doctorId: distinctio
                      - doctorId: odio
                      - doctorId: consequuntur
                      - doctorId: temporibus
                      - doctorId: omnis
                      - doctorId: eum
                      - doctorId: voluptatum
                      - doctorId: incidunt
                petDoctor4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petDoctors:
                      - doctorId: aut
                      - doctorId: architecto
                      - doctorId: velit
                      - doctorId: quae
                      - doctorId: repellendus
                      - doctorId: nostrum
                      - doctorId: accusantium
                      - doctorId: rerum
                      - doctorId: modi
                      - doctorId: cumque
                      - doctorId: dolorem
                      - doctorId: possimus
                      - doctorId: sunt
                      - doctorId: incidunt
                      - doctorId: itaque
                      - doctorId: nulla
                      - doctorId: quasi
                      - doctorId: ut
                      - doctorId: nostrum
                      - doctorId: quo
                petDoctor5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    petDoctors:
                      - doctorId: quam
                      - doctorId: et
                      - doctorId: sit
                      - doctorId: distinctio
                      - doctorId: et
                      - doctorId: voluptas
                      - doctorId: vel
                      - doctorId: sint
                      - doctorId: accusamus
                      - doctorId: commodi
                      - doctorId: minima
                      - doctorId: iusto
                      - doctorId: est
                      - doctorId: voluptatem
                      - doctorId: dolores
                      - doctorId: explicabo
                      - doctorId: vel
                      - doctorId: harum
                      - doctorId: vel
                      - doctorId: a
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetDoctor
      tags:
        - Pets
      summary: Create pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: non
              petDoctor2:
                value:
                  doctorId: consectetur
              petDoctor3:
                value:
                  doctorId: distinctio
              petDoctor4:
                value:
                  doctorId: ut
              petDoctor5:
                value:
                  doctorId: quo
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: et
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: laboriosam
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: vero
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: ex
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: laudantium
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors/{doctorId}':
    head:
      operationId: checkPetDoctor
      tags:
        - Pets
      summary: Check pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetDoctor
      tags:
        - Pets
      summary: Get pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: minima
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: beatae
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: fuga
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: temporibus
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: enim
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetDoctor
      tags:
        - Pets
      summary: Replace pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: reiciendis
              petDoctor2:
                value:
                  doctorId: dolores
              petDoctor3:
                value:
                  doctorId: possimus
              petDoctor4:
                value:
                  doctorId: quis
              petDoctor5:
                value:
                  doctorId: cum
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: distinctio
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: rerum
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: libero
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: qui
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: velit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetDoctor
      tags:
        - Pets
      summary: Modify pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: rerum
              petDoctor2:
                value:
                  doctorId: corporis
              petDoctor3:
                value:
                  doctorId: nihil
              petDoctor4:
                value:
                  doctorId: sapiente
              petDoctor5:
                value:
                  doctorId: et
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: doloribus
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: quia
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: sit
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: rerum
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: maxime
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetDoctor
      tags:
        - Pets
      summary: Delete pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    PersonResponse:
      properties:
        name:
          type: string
    PersonRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetOwnerResponse:
      properties:
        ownerId:
          type: string
    PetOwnerRequest:
      properties:
        ownerId:
          type: string
    PetDoctorResponse:
      properties:
        doctorId:
          type: string
    PetDoctorRequest:
      properties:
        doctorId:
          type: string
