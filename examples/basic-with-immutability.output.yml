openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: basic with immutability'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: aedb58bb-c51d-431a-b608-f90692467272
                    pets:
                      - name: dolorem
                      - name: sed
                      - name: nisi
                      - name: molestias
                      - name: quam
                      - name: reiciendis
                      - name: consequatur
                      - name: harum
                      - name: est
                      - name: ea
                      - name: consectetur
                      - name: sed
                      - name: non
                      - name: voluptatem
                      - name: tempora
                      - name: dolor
                      - name: ut
                      - name: rerum
                      - name: laboriosam
                      - name: sit
                pet2:
                  value:
                    nextPageToken: 6fae2997-9469-48ba-ae9d-6c505ae64ac3
                    pets:
                      - name: architecto
                      - name: cupiditate
                      - name: vel
                      - name: eum
                      - name: et
                      - name: et
                      - name: voluptatem
                      - name: porro
                      - name: quia
                      - name: quisquam
                      - name: ducimus
                      - name: ratione
                      - name: ipsum
                      - name: harum
                      - name: voluptas
                      - name: suscipit
                      - name: consequuntur
                      - name: blanditiis
                      - name: maxime
                      - name: incidunt
                pet3:
                  value:
                    nextPageToken: 4e16aaf9-ae93-4a98-84dc-6ab5034b1d42
                    pets:
                      - name: totam
                      - name: incidunt
                      - name: saepe
                      - name: perferendis
                      - name: rem
                      - name: consequuntur
                      - name: modi
                      - name: fugiat
                      - name: porro
                      - name: aperiam
                      - name: cupiditate
                      - name: aut
                      - name: ut
                      - name: qui
                      - name: et
                      - name: voluptas
                      - name: rerum
                      - name: excepturi
                      - name: deleniti
                      - name: consequuntur
                pet4:
                  value:
                    nextPageToken: 20ca722f-1764-474c-987a-d3fbc4768462
                    pets:
                      - name: quam
                      - name: et
                      - name: culpa
                      - name: nobis
                      - name: ut
                      - name: perspiciatis
                      - name: porro
                      - name: soluta
                      - name: impedit
                      - name: laboriosam
                      - name: aut
                      - name: sit
                      - name: temporibus
                      - name: repudiandae
                      - name: odio
                      - name: est
                      - name: hic
                      - name: vel
                      - name: tenetur
                      - name: corrupti
                pet5:
                  value:
                    nextPageToken: b6972050-09bc-4ad6-989c-94598d8683a6
                    pets:
                      - name: rerum
                      - name: quia
                      - name: officiis
                      - name: laborum
                      - name: nemo
                      - name: aut
                      - name: consequatur
                      - name: consequatur
                      - name: impedit
                      - name: et
                      - name: eum
                      - name: distinctio
                      - name: quam
                      - name: autem
                      - name: laudantium
                      - name: perspiciatis
                      - name: facere
                      - name: molestiae
                      - name: id
                      - name: consequatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: tempore
              pet2:
                value:
                  name: molestias
              pet3:
                value:
                  name: maiores
              pet4:
                value:
                  name: incidunt
              pet5:
                value:
                  name: nostrum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: maiores
                pet2:
                  value:
                    pet:
                      name: voluptas
                pet3:
                  value:
                    pet:
                      name: sint
                pet4:
                  value:
                    pet:
                      name: iure
                pet5:
                  value:
                    pet:
                      name: quo
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quam
                pet2:
                  value:
                    pet:
                      name: aut
                pet3:
                  value:
                    pet:
                      name: aspernatur
                pet4:
                  value:
                    pet:
                      name: quae
                pet5:
                  value:
                    pet:
                      name: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
