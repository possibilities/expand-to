openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                user1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    users:
                      - name: sed
                      - name: inventore
                      - name: modi
                      - name: autem
                      - name: ad
                      - name: non
                      - name: iste
                      - name: minus
                      - name: maiores
                      - name: facere
                      - name: velit
                      - name: nulla
                      - name: ipsam
                      - name: accusamus
                      - name: natus
                      - name: aut
                      - name: tempore
                      - name: occaecati
                      - name: alias
                      - name: eaque
                user2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    users:
                      - name: vero
                      - name: non
                      - name: ut
                      - name: aut
                      - name: molestiae
                      - name: corrupti
                      - name: aut
                      - name: ea
                      - name: quo
                      - name: animi
                      - name: alias
                      - name: quis
                      - name: quibusdam
                      - name: hic
                      - name: et
                      - name: et
                      - name: repellat
                      - name: cum
                      - name: quis
                      - name: quia
                user3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    users:
                      - name: modi
                      - name: aut
                      - name: odio
                      - name: ut
                      - name: ipsum
                      - name: ipsam
                      - name: exercitationem
                      - name: molestiae
                      - name: rerum
                      - name: sed
                      - name: et
                      - name: qui
                      - name: deleniti
                      - name: officia
                      - name: qui
                      - name: dolor
                      - name: cum
                      - name: et
                      - name: aliquid
                      - name: assumenda
                user4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    users:
                      - name: vel
                      - name: placeat
                      - name: molestiae
                      - name: unde
                      - name: esse
                      - name: ex
                      - name: et
                      - name: fugit
                      - name: adipisci
                      - name: dolorem
                      - name: fugit
                      - name: eos
                      - name: ea
                      - name: omnis
                      - name: culpa
                      - name: nisi
                      - name: sapiente
                      - name: sunt
                      - name: consequatur
                      - name: explicabo
                user5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    users:
                      - name: odio
                      - name: sint
                      - name: et
                      - name: est
                      - name: maxime
                      - name: non
                      - name: deserunt
                      - name: voluptatem
                      - name: dolore
                      - name: quidem
                      - name: ipsam
                      - name: dolore
                      - name: praesentium
                      - name: delectus
                      - name: beatae
                      - name: sunt
                      - name: nulla
                      - name: rerum
                      - name: facere
                      - name: illum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: optio
              user2:
                value:
                  name: dolores
              user3:
                value:
                  name: adipisci
              user4:
                value:
                  name: ut
              user5:
                value:
                  name: excepturi
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: non
                user2:
                  value:
                    user:
                      name: distinctio
                user3:
                  value:
                    user:
                      name: et
                user4:
                  value:
                    user:
                      name: ducimus
                user5:
                  value:
                    user:
                      name: adipisci
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: et
                user2:
                  value:
                    user:
                      name: totam
                user3:
                  value:
                    user:
                      name: amet
                user4:
                  value:
                    user:
                      name: velit
                user5:
                  value:
                    user:
                      name: harum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: blanditiis
              user2:
                value:
                  name: modi
              user3:
                value:
                  name: aliquid
              user4:
                value:
                  name: omnis
              user5:
                value:
                  name: eos
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: nihil
                user2:
                  value:
                    user:
                      name: pariatur
                user3:
                  value:
                    user:
                      name: ut
                user4:
                  value:
                    user:
                      name: sint
                user5:
                  value:
                    user:
                      name: deleniti
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateUser
      tags:
        - Users
      summary: Update user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: sapiente
              user2:
                value:
                  name: fuga
              user3:
                value:
                  name: at
              user4:
                value:
                  name: adipisci
              user5:
                value:
                  name: consequatur
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: consequatur
                user2:
                  value:
                    user:
                      name: quis
                user3:
                  value:
                    user:
                      name: eligendi
                user4:
                  value:
                    user:
                      name: saepe
                user5:
                  value:
                    user:
                      name: reprehenderit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: ea
                user2:
                  value:
                    user:
                      name: quis
                user3:
                  value:
                    user:
                      name: nulla
                user4:
                  value:
                    user:
                      name: et
                user5:
                  value:
                    user:
                      name: quos
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
