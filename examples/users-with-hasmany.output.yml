openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users with hasMany'
paths:
  /courses:
    get:
      operationId: listCourses
      tags:
        - Courses
      summary: List courses
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 40d3f42a-774c-48a8-9edc-09d2e15a1569
                    courses:
                      - name: incidunt
                      - name: adipisci
                      - name: qui
                      - name: exercitationem
                      - name: perspiciatis
                      - name: qui
                      - name: cupiditate
                      - name: voluptas
                      - name: consequatur
                      - name: aut
                      - name: optio
                      - name: necessitatibus
                      - name: soluta
                      - name: quaerat
                      - name: magni
                      - name: sunt
                      - name: rerum
                      - name: ea
                      - name: odio
                      - name: eum
                course2:
                  value:
                    nextPageToken: b0d1f7a8-5a11-400c-86ca-a21a0e201a85
                    courses:
                      - name: quod
                      - name: atque
                      - name: eum
                      - name: ratione
                      - name: quisquam
                      - name: voluptas
                      - name: repellendus
                      - name: ullam
                      - name: dolore
                      - name: optio
                      - name: nesciunt
                      - name: excepturi
                      - name: deleniti
                      - name: voluptatem
                      - name: placeat
                      - name: et
                      - name: corporis
                      - name: inventore
                      - name: repudiandae
                      - name: voluptas
                course3:
                  value:
                    nextPageToken: ea059b40-be89-45cd-9403-a25242ea80ce
                    courses:
                      - name: veritatis
                      - name: pariatur
                      - name: iusto
                      - name: non
                      - name: unde
                      - name: aliquam
                      - name: qui
                      - name: vero
                      - name: doloremque
                      - name: omnis
                      - name: sint
                      - name: enim
                      - name: debitis
                      - name: quis
                      - name: ut
                      - name: dolores
                      - name: voluptatem
                      - name: et
                      - name: voluptates
                      - name: soluta
                course4:
                  value:
                    nextPageToken: 4715426a-a341-41e0-9763-0ac26a26a633
                    courses:
                      - name: doloribus
                      - name: aut
                      - name: et
                      - name: facilis
                      - name: numquam
                      - name: a
                      - name: perferendis
                      - name: nulla
                      - name: molestias
                      - name: labore
                      - name: optio
                      - name: pariatur
                      - name: ipsum
                      - name: non
                      - name: enim
                      - name: dolores
                      - name: praesentium
                      - name: quia
                      - name: in
                      - name: sunt
                course5:
                  value:
                    nextPageToken: 041dd037-eab4-4ceb-8aa3-b3222a4e1e42
                    courses:
                      - name: aut
                      - name: dolore
                      - name: excepturi
                      - name: laborum
                      - name: ullam
                      - name: sunt
                      - name: velit
                      - name: molestiae
                      - name: omnis
                      - name: sed
                      - name: et
                      - name: voluptatem
                      - name: omnis
                      - name: facilis
                      - name: nam
                      - name: sed
                      - name: et
                      - name: neque
                      - name: repudiandae
                      - name: in
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourse
      tags:
        - Courses
      summary: Create course
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: recusandae
              course2:
                value:
                  name: sequi
              course3:
                value:
                  name: iste
              course4:
                value:
                  name: quaerat
              course5:
                value:
                  name: nihil
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: labore
                course2:
                  value:
                    course:
                      name: aliquid
                course3:
                  value:
                    course:
                      name: praesentium
                course4:
                  value:
                    course:
                      name: eos
                course5:
                  value:
                    course:
                      name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/courses/{courseId}':
    head:
      operationId: checkCourse
      tags:
        - Courses
      summary: Check course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourse
      tags:
        - Courses
      summary: Get course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: soluta
                course2:
                  value:
                    course:
                      name: facere
                course3:
                  value:
                    course:
                      name: sequi
                course4:
                  value:
                    course:
                      name: consequatur
                course5:
                  value:
                    course:
                      name: deleniti
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourse
      tags:
        - Courses
      summary: Replace course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: sunt
              course2:
                value:
                  name: dolores
              course3:
                value:
                  name: alias
              course4:
                value:
                  name: est
              course5:
                value:
                  name: laudantium
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: quia
                course2:
                  value:
                    course:
                      name: modi
                course3:
                  value:
                    course:
                      name: voluptates
                course4:
                  value:
                    course:
                      name: ipsam
                course5:
                  value:
                    course:
                      name: voluptatem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourse
      tags:
        - Courses
      summary: Modify course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: saepe
              course2:
                value:
                  name: esse
              course3:
                value:
                  name: voluptatibus
              course4:
                value:
                  name: est
              course5:
                value:
                  name: voluptatum
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: aut
                course2:
                  value:
                    course:
                      name: dolorem
                course3:
                  value:
                    course:
                      name: enim
                course4:
                  value:
                    course:
                      name: voluptatem
                course5:
                  value:
                    course:
                      name: nobis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourse
      tags:
        - Courses
      summary: Delete course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: e5a438b1-7ace-4f6f-9271-227f8a4458a3
                    users:
                      - name: repudiandae
                      - name: velit
                      - name: magni
                      - name: cum
                      - name: dolore
                      - name: beatae
                      - name: sed
                      - name: laborum
                      - name: est
                      - name: suscipit
                      - name: quis
                      - name: unde
                      - name: recusandae
                      - name: necessitatibus
                      - name: commodi
                      - name: harum
                      - name: laborum
                      - name: sunt
                      - name: nobis
                      - name: doloribus
                user2:
                  value:
                    nextPageToken: 46186bb6-0b62-45b7-943e-de85a4880564
                    users:
                      - name: explicabo
                      - name: officiis
                      - name: tenetur
                      - name: omnis
                      - name: qui
                      - name: consequatur
                      - name: quam
                      - name: et
                      - name: velit
                      - name: rerum
                      - name: vel
                      - name: occaecati
                      - name: et
                      - name: incidunt
                      - name: saepe
                      - name: et
                      - name: quidem
                      - name: occaecati
                      - name: quia
                      - name: laborum
                user3:
                  value:
                    nextPageToken: 268097f6-0f73-4fa3-9f48-f29390aad914
                    users:
                      - name: eos
                      - name: dolores
                      - name: explicabo
                      - name: dolores
                      - name: ab
                      - name: qui
                      - name: dicta
                      - name: ut
                      - name: iste
                      - name: aut
                      - name: fugiat
                      - name: odio
                      - name: sit
                      - name: cumque
                      - name: laudantium
                      - name: id
                      - name: fugit
                      - name: vero
                      - name: accusamus
                      - name: reiciendis
                user4:
                  value:
                    nextPageToken: 4437e524-68fc-4ad6-b395-57578a9f52b3
                    users:
                      - name: dolorum
                      - name: earum
                      - name: aut
                      - name: minima
                      - name: necessitatibus
                      - name: minima
                      - name: dignissimos
                      - name: et
                      - name: atque
                      - name: eligendi
                      - name: alias
                      - name: impedit
                      - name: dolor
                      - name: rerum
                      - name: facere
                      - name: voluptatem
                      - name: expedita
                      - name: soluta
                      - name: ipsa
                      - name: numquam
                user5:
                  value:
                    nextPageToken: 252b7ce0-c87e-4ff7-a0cb-1807486cbf35
                    users:
                      - name: sequi
                      - name: ad
                      - name: ea
                      - name: nobis
                      - name: reiciendis
                      - name: omnis
                      - name: voluptates
                      - name: est
                      - name: libero
                      - name: sit
                      - name: enim
                      - name: maxime
                      - name: accusantium
                      - name: similique
                      - name: quasi
                      - name: rerum
                      - name: temporibus
                      - name: tempore
                      - name: harum
                      - name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: error
              user2:
                value:
                  name: corrupti
              user3:
                value:
                  name: eligendi
              user4:
                value:
                  name: nesciunt
              user5:
                value:
                  name: totam
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: dolores
                user2:
                  value:
                    user:
                      name: in
                user3:
                  value:
                    user:
                      name: aliquid
                user4:
                  value:
                    user:
                      name: officia
                user5:
                  value:
                    user:
                      name: necessitatibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: sed
                user2:
                  value:
                    user:
                      name: dicta
                user3:
                  value:
                    user:
                      name: nostrum
                user4:
                  value:
                    user:
                      name: autem
                user5:
                  value:
                    user:
                      name: pariatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: explicabo
              user2:
                value:
                  name: veritatis
              user3:
                value:
                  name: eligendi
              user4:
                value:
                  name: velit
              user5:
                value:
                  name: doloremque
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: et
                user2:
                  value:
                    user:
                      name: autem
                user3:
                  value:
                    user:
                      name: sit
                user4:
                  value:
                    user:
                      name: recusandae
                user5:
                  value:
                    user:
                      name: doloribus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: fuga
              user2:
                value:
                  name: magni
              user3:
                value:
                  name: sed
              user4:
                value:
                  name: velit
              user5:
                value:
                  name: reprehenderit
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: voluptas
                user2:
                  value:
                    user:
                      name: aperiam
                user3:
                  value:
                    user:
                      name: quibusdam
                user4:
                  value:
                    user:
                      name: vel
                user5:
                  value:
                    user:
                      name: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: quo
                user2:
                  value:
                    user:
                      name: rerum
                user3:
                  value:
                    user:
                      name: sequi
                user4:
                  value:
                    user:
                      name: consequatur
                user5:
                  value:
                    user:
                      name: suscipit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses':
    get:
      operationId: listUserCourses
      tags:
        - Users
      summary: List user courses
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      userCourses:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    nextPageToken: ea5a6c5d-637c-4056-b3d9-f9f74cec8d18
                    userCourses:
                      - courseId: saepe
                      - courseId: itaque
                      - courseId: quam
                      - courseId: quod
                      - courseId: excepturi
                      - courseId: aut
                      - courseId: tempore
                      - courseId: non
                      - courseId: quidem
                      - courseId: cumque
                      - courseId: omnis
                      - courseId: eum
                      - courseId: quia
                      - courseId: officiis
                      - courseId: vel
                      - courseId: est
                      - courseId: quisquam
                      - courseId: sunt
                      - courseId: id
                      - courseId: est
                userCourse2:
                  value:
                    nextPageToken: 1a0895e0-281e-4e85-9aa1-72bccff8a671
                    userCourses:
                      - courseId: eum
                      - courseId: earum
                      - courseId: laborum
                      - courseId: repellat
                      - courseId: esse
                      - courseId: praesentium
                      - courseId: dolore
                      - courseId: adipisci
                      - courseId: aut
                      - courseId: iste
                      - courseId: voluptatem
                      - courseId: nihil
                      - courseId: aut
                      - courseId: qui
                      - courseId: occaecati
                      - courseId: labore
                      - courseId: exercitationem
                      - courseId: dolore
                      - courseId: ut
                      - courseId: inventore
                userCourse3:
                  value:
                    nextPageToken: 9f90f1f4-211e-4475-b6a9-6c9bbcf37bcf
                    userCourses:
                      - courseId: accusamus
                      - courseId: dolores
                      - courseId: dolorum
                      - courseId: excepturi
                      - courseId: consectetur
                      - courseId: accusamus
                      - courseId: necessitatibus
                      - courseId: odio
                      - courseId: est
                      - courseId: corrupti
                      - courseId: eos
                      - courseId: consequatur
                      - courseId: et
                      - courseId: ut
                      - courseId: qui
                      - courseId: rem
                      - courseId: dolor
                      - courseId: dicta
                      - courseId: eaque
                      - courseId: reiciendis
                userCourse4:
                  value:
                    nextPageToken: e07b299c-6940-4899-a6b9-735852d99152
                    userCourses:
                      - courseId: eaque
                      - courseId: sint
                      - courseId: doloremque
                      - courseId: sed
                      - courseId: est
                      - courseId: beatae
                      - courseId: sint
                      - courseId: occaecati
                      - courseId: ea
                      - courseId: consequatur
                      - courseId: facere
                      - courseId: doloremque
                      - courseId: vero
                      - courseId: vitae
                      - courseId: suscipit
                      - courseId: maiores
                      - courseId: vero
                      - courseId: alias
                      - courseId: ex
                      - courseId: vel
                userCourse5:
                  value:
                    nextPageToken: 957a3a1b-c675-4ee7-a892-6c183fce6813
                    userCourses:
                      - courseId: soluta
                      - courseId: unde
                      - courseId: autem
                      - courseId: dolore
                      - courseId: facere
                      - courseId: quidem
                      - courseId: aliquid
                      - courseId: modi
                      - courseId: officia
                      - courseId: et
                      - courseId: totam
                      - courseId: beatae
                      - courseId: autem
                      - courseId: porro
                      - courseId: ipsa
                      - courseId: voluptatem
                      - courseId: corrupti
                      - courseId: et
                      - courseId: totam
                      - courseId: voluptas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserCourse
      tags:
        - Users
      summary: Create user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCourseRequest'
            examples:
              userCourse1:
                value:
                  courseId: expedita
              userCourse2:
                value:
                  courseId: ipsam
              userCourse3:
                value:
                  courseId: et
              userCourse4:
                value:
                  courseId: aut
              userCourse5:
                value:
                  courseId: ut
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: laboriosam
                userCourse2:
                  value:
                    userCourse:
                      courseId: possimus
                userCourse3:
                  value:
                    userCourse:
                      courseId: eum
                userCourse4:
                  value:
                    userCourse:
                      courseId: quae
                userCourse5:
                  value:
                    userCourse:
                      courseId: omnis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses/{courseId}':
    head:
      operationId: checkUserCourse
      tags:
        - Users
      summary: Check user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserCourse
      tags:
        - Users
      summary: Get user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: voluptas
                userCourse2:
                  value:
                    userCourse:
                      courseId: tenetur
                userCourse3:
                  value:
                    userCourse:
                      courseId: quae
                userCourse4:
                  value:
                    userCourse:
                      courseId: enim
                userCourse5:
                  value:
                    userCourse:
                      courseId: molestiae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserCourse
      tags:
        - Users
      summary: Replace user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCourseRequest'
            examples:
              userCourse1:
                value:
                  courseId: alias
              userCourse2:
                value:
                  courseId: culpa
              userCourse3:
                value:
                  courseId: saepe
              userCourse4:
                value:
                  courseId: et
              userCourse5:
                value:
                  courseId: ea
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: officiis
                userCourse2:
                  value:
                    userCourse:
                      courseId: et
                userCourse3:
                  value:
                    userCourse:
                      courseId: atque
                userCourse4:
                  value:
                    userCourse:
                      courseId: vero
                userCourse5:
                  value:
                    userCourse:
                      courseId: deleniti
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserCourse
      tags:
        - Users
      summary: Modify user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCourseRequest'
            examples:
              userCourse1:
                value:
                  courseId: deserunt
              userCourse2:
                value:
                  courseId: consequatur
              userCourse3:
                value:
                  courseId: laboriosam
              userCourse4:
                value:
                  courseId: quibusdam
              userCourse5:
                value:
                  courseId: voluptatem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: illum
                userCourse2:
                  value:
                    userCourse:
                      courseId: voluptatibus
                userCourse3:
                  value:
                    userCourse:
                      courseId: et
                userCourse4:
                  value:
                    userCourse:
                      courseId: velit
                userCourse5:
                  value:
                    userCourse:
                      courseId: fuga
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserCourse
      tags:
        - Users
      summary: Delete user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/courses:
    get:
      operationId: listCoursesAsUser
      tags:
        - User
      summary: List courses for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: b6d119e0-30c7-4a59-8b15-ae3fbb43029d
                    courses:
                      - name: laudantium
                      - name: ut
                      - name: qui
                      - name: soluta
                      - name: quibusdam
                      - name: ut
                      - name: commodi
                      - name: tempore
                      - name: ad
                      - name: error
                      - name: enim
                      - name: soluta
                      - name: et
                      - name: sit
                      - name: id
                      - name: eum
                      - name: sint
                      - name: et
                      - name: quas
                      - name: ut
                course2:
                  value:
                    nextPageToken: 58b129b8-b3a2-4f19-9e93-a00ad64621ee
                    courses:
                      - name: culpa
                      - name: quaerat
                      - name: maiores
                      - name: laboriosam
                      - name: nesciunt
                      - name: est
                      - name: vel
                      - name: nihil
                      - name: et
                      - name: qui
                      - name: et
                      - name: laborum
                      - name: et
                      - name: ullam
                      - name: et
                      - name: qui
                      - name: quo
                      - name: quae
                      - name: quis
                      - name: consequatur
                course3:
                  value:
                    nextPageToken: 44701d9b-473e-4bd8-8670-5a9f3fce808c
                    courses:
                      - name: unde
                      - name: animi
                      - name: fugit
                      - name: aut
                      - name: non
                      - name: cum
                      - name: atque
                      - name: aliquid
                      - name: itaque
                      - name: quam
                      - name: iusto
                      - name: aut
                      - name: odio
                      - name: ut
                      - name: libero
                      - name: quia
                      - name: a
                      - name: qui
                      - name: similique
                      - name: molestiae
                course4:
                  value:
                    nextPageToken: af3c0b63-d679-40db-8abf-4e47457e575f
                    courses:
                      - name: in
                      - name: molestiae
                      - name: vel
                      - name: et
                      - name: suscipit
                      - name: totam
                      - name: tenetur
                      - name: qui
                      - name: eos
                      - name: nostrum
                      - name: ipsam
                      - name: non
                      - name: fugiat
                      - name: rerum
                      - name: ut
                      - name: id
                      - name: voluptatem
                      - name: quia
                      - name: perspiciatis
                      - name: perferendis
                course5:
                  value:
                    nextPageToken: 53948a0f-72a2-4aae-ba88-1c6f5742c8fb
                    courses:
                      - name: assumenda
                      - name: rerum
                      - name: voluptatem
                      - name: adipisci
                      - name: sit
                      - name: nobis
                      - name: nostrum
                      - name: et
                      - name: provident
                      - name: aliquam
                      - name: eum
                      - name: ea
                      - name: aut
                      - name: ipsa
                      - name: quos
                      - name: atque
                      - name: occaecati
                      - name: reiciendis
                      - name: et
                      - name: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourseAsUser
      tags:
        - User
      summary: Create course for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: dolor
              course2:
                value:
                  name: perspiciatis
              course3:
                value:
                  name: est
              course4:
                value:
                  name: et
              course5:
                value:
                  name: laudantium
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: necessitatibus
                course2:
                  value:
                    course:
                      name: est
                course3:
                  value:
                    course:
                      name: quasi
                course4:
                  value:
                    course:
                      name: aut
                course5:
                  value:
                    course:
                      name: cumque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/courses/{courseId}':
    head:
      operationId: checkCourseAsUser
      tags:
        - User
      summary: Check course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourseAsUser
      tags:
        - User
      summary: Get course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: voluptatem
                course2:
                  value:
                    course:
                      name: qui
                course3:
                  value:
                    course:
                      name: non
                course4:
                  value:
                    course:
                      name: est
                course5:
                  value:
                    course:
                      name: eum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourseAsUser
      tags:
        - User
      summary: Replace course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: voluptatum
              course2:
                value:
                  name: et
              course3:
                value:
                  name: corrupti
              course4:
                value:
                  name: libero
              course5:
                value:
                  name: voluptatem
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: ratione
                course2:
                  value:
                    course:
                      name: et
                course3:
                  value:
                    course:
                      name: provident
                course4:
                  value:
                    course:
                      name: ratione
                course5:
                  value:
                    course:
                      name: molestias
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourseAsUser
      tags:
        - User
      summary: Modify course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: quis
              course2:
                value:
                  name: mollitia
              course3:
                value:
                  name: vel
              course4:
                value:
                  name: sunt
              course5:
                value:
                  name: ab
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: quia
                course2:
                  value:
                    course:
                      name: dolore
                course3:
                  value:
                    course:
                      name: sit
                course4:
                  value:
                    course:
                      name: sint
                course5:
                  value:
                    course:
                      name: deserunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourseAsUser
      tags:
        - User
      summary: Delete course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    CourseResponse:
      properties:
        name:
          type: string
    CourseRequest:
      properties:
        name:
          type: string
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    UserCourseResponse:
      properties:
        courseId:
          type: string
    UserCourseRequest:
      properties:
        courseId:
          type: string
