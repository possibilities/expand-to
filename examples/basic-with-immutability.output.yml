openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: basic with immutability'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: fb0942db-5eaf-4e6b-89a7-53bd604a3c2e
                    pets:
                      - name: nobis
                      - name: recusandae
                      - name: non
                      - name: et
                      - name: aperiam
                      - name: voluptas
                      - name: quidem
                      - name: minima
                      - name: aspernatur
                      - name: iste
                      - name: aliquid
                      - name: quo
                      - name: aliquid
                      - name: expedita
                      - name: est
                      - name: cumque
                      - name: et
                      - name: dolorum
                      - name: repudiandae
                      - name: magnam
                pet2:
                  value:
                    nextPageToken: dc06c653-b7d4-4ffb-9b8c-36be93ab73dd
                    pets:
                      - name: aut
                      - name: quia
                      - name: ad
                      - name: sequi
                      - name: suscipit
                      - name: sunt
                      - name: dignissimos
                      - name: soluta
                      - name: sit
                      - name: consequatur
                      - name: eveniet
                      - name: sunt
                      - name: ipsam
                      - name: dolor
                      - name: beatae
                      - name: ut
                      - name: dolore
                      - name: perspiciatis
                      - name: distinctio
                      - name: adipisci
                pet3:
                  value:
                    nextPageToken: 480b1e63-86e7-4740-926f-50319114c82d
                    pets:
                      - name: qui
                      - name: vel
                      - name: sit
                      - name: quia
                      - name: autem
                      - name: dicta
                      - name: ut
                      - name: enim
                      - name: ipsa
                      - name: quis
                      - name: et
                      - name: tempora
                      - name: mollitia
                      - name: repellendus
                      - name: quidem
                      - name: esse
                      - name: architecto
                      - name: ut
                      - name: eum
                      - name: est
                pet4:
                  value:
                    nextPageToken: 064cf542-b08a-4b02-a04d-80c94c97d8ea
                    pets:
                      - name: explicabo
                      - name: velit
                      - name: minus
                      - name: ducimus
                      - name: libero
                      - name: sunt
                      - name: quae
                      - name: quo
                      - name: dolorum
                      - name: ipsum
                      - name: est
                      - name: non
                      - name: animi
                      - name: vel
                      - name: animi
                      - name: natus
                      - name: aut
                      - name: et
                      - name: et
                      - name: recusandae
                pet5:
                  value:
                    nextPageToken: 903d2143-aa46-4803-a5fe-19a121ecf216
                    pets:
                      - name: id
                      - name: tenetur
                      - name: nostrum
                      - name: et
                      - name: voluptas
                      - name: laboriosam
                      - name: ut
                      - name: dolor
                      - name: et
                      - name: laborum
                      - name: rerum
                      - name: natus
                      - name: ut
                      - name: et
                      - name: nihil
                      - name: unde
                      - name: at
                      - name: sint
                      - name: aut
                      - name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: tempore
              pet2:
                value:
                  name: vero
              pet3:
                value:
                  name: facilis
              pet4:
                value:
                  name: amet
              pet5:
                value:
                  name: aliquid
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: laudantium
                pet2:
                  value:
                    pet:
                      name: autem
                pet3:
                  value:
                    pet:
                      name: et
                pet4:
                  value:
                    pet:
                      name: repellendus
                pet5:
                  value:
                    pet:
                      name: tempore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: autem
                pet2:
                  value:
                    pet:
                      name: voluptatem
                pet3:
                  value:
                    pet:
                      name: optio
                pet4:
                  value:
                    pet:
                      name: dolorem
                pet5:
                  value:
                    pet:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
