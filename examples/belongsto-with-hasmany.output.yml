openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: belongsTo with hasMany'
paths:
  /owners:
    get:
      operationId: listOwners
      tags:
        - Owners
      summary: List owners
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owners:
                    type: array
                    items:
                      $ref: '#/components/schemas/OwnerResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                owner1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    owners:
                      - name: voluptas
                      - name: nisi
                      - name: omnis
                      - name: suscipit
                      - name: id
                      - name: autem
                      - name: et
                      - name: non
                      - name: est
                      - name: perferendis
                      - name: ipsum
                      - name: voluptatibus
                      - name: fugit
                      - name: reprehenderit
                      - name: ut
                      - name: qui
                      - name: illo
                      - name: qui
                      - name: voluptatem
                      - name: quia
                owner2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    owners:
                      - name: sunt
                      - name: eum
                      - name: laudantium
                      - name: tempora
                      - name: et
                      - name: deleniti
                      - name: eum
                      - name: ut
                      - name: blanditiis
                      - name: hic
                      - name: nulla
                      - name: quia
                      - name: aut
                      - name: libero
                      - name: et
                      - name: sint
                      - name: nihil
                      - name: nemo
                      - name: quam
                      - name: dolorem
                owner3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    owners:
                      - name: omnis
                      - name: autem
                      - name: enim
                      - name: rem
                      - name: optio
                      - name: consequuntur
                      - name: et
                      - name: sit
                      - name: in
                      - name: repellendus
                      - name: illum
                      - name: dolore
                      - name: illum
                      - name: quia
                      - name: deserunt
                      - name: incidunt
                      - name: qui
                      - name: in
                      - name: adipisci
                      - name: aut
                owner4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    owners:
                      - name: soluta
                      - name: ut
                      - name: harum
                      - name: ut
                      - name: laudantium
                      - name: in
                      - name: quia
                      - name: corporis
                      - name: aut
                      - name: voluptatem
                      - name: quia
                      - name: error
                      - name: asperiores
                      - name: nemo
                      - name: a
                      - name: quasi
                      - name: qui
                      - name: necessitatibus
                      - name: quasi
                      - name: minima
                owner5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    owners:
                      - name: recusandae
                      - name: nihil
                      - name: aut
                      - name: esse
                      - name: est
                      - name: non
                      - name: eum
                      - name: nostrum
                      - name: officia
                      - name: ipsum
                      - name: occaecati
                      - name: quos
                      - name: enim
                      - name: laboriosam
                      - name: dolorem
                      - name: dolorem
                      - name: ut
                      - name: magnam
                      - name: deleniti
                      - name: unde
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createOwner
      tags:
        - Owners
      summary: Create owner
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
            examples:
              owner1:
                value:
                  name: eum
              owner2:
                value:
                  name: dolores
              owner3:
                value:
                  name: et
              owner4:
                value:
                  name: autem
              owner5:
                value:
                  name: assumenda
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: eligendi
                owner2:
                  value:
                    owner:
                      name: dolorum
                owner3:
                  value:
                    owner:
                      name: minus
                owner4:
                  value:
                    owner:
                      name: voluptates
                owner5:
                  value:
                    owner:
                      name: rerum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/owners/{ownerId}':
    head:
      operationId: checkOwner
      tags:
        - Owners
      summary: Check owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getOwner
      tags:
        - Owners
      summary: Get owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: ipsum
                owner2:
                  value:
                    owner:
                      name: provident
                owner3:
                  value:
                    owner:
                      name: quia
                owner4:
                  value:
                    owner:
                      name: laborum
                owner5:
                  value:
                    owner:
                      name: doloribus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceOwner
      tags:
        - Owners
      summary: Replace owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
            examples:
              owner1:
                value:
                  name: repellendus
              owner2:
                value:
                  name: rerum
              owner3:
                value:
                  name: suscipit
              owner4:
                value:
                  name: perferendis
              owner5:
                value:
                  name: minima
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: sit
                owner2:
                  value:
                    owner:
                      name: maxime
                owner3:
                  value:
                    owner:
                      name: ipsam
                owner4:
                  value:
                    owner:
                      name: ullam
                owner5:
                  value:
                    owner:
                      name: iste
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyOwner
      tags:
        - Owners
      summary: Modify owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
            examples:
              owner1:
                value:
                  name: repudiandae
              owner2:
                value:
                  name: sit
              owner3:
                value:
                  name: omnis
              owner4:
                value:
                  name: quia
              owner5:
                value:
                  name: rem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: eligendi
                owner2:
                  value:
                    owner:
                      name: vero
                owner3:
                  value:
                    owner:
                      name: nam
                owner4:
                  value:
                    owner:
                      name: fugit
                owner5:
                  value:
                    owner:
                      name: incidunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteOwner
      tags:
        - Owners
      summary: Delete owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /committers:
    get:
      operationId: listCommitters
      tags:
        - Committers
      summary: List committers
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committers:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommitterResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                committer1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    committers:
                      - name: qui
                      - name: et
                      - name: sit
                      - name: nihil
                      - name: corrupti
                      - name: aut
                      - name: amet
                      - name: expedita
                      - name: voluptas
                      - name: eveniet
                      - name: beatae
                      - name: eligendi
                      - name: exercitationem
                      - name: consectetur
                      - name: possimus
                      - name: voluptatem
                      - name: est
                      - name: quam
                      - name: earum
                      - name: inventore
                committer2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    committers:
                      - name: omnis
                      - name: et
                      - name: libero
                      - name: est
                      - name: in
                      - name: qui
                      - name: odio
                      - name: quia
                      - name: repellat
                      - name: sit
                      - name: et
                      - name: accusamus
                      - name: et
                      - name: iste
                      - name: molestias
                      - name: aliquid
                      - name: maiores
                      - name: facere
                      - name: qui
                      - name: ea
                committer3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    committers:
                      - name: expedita
                      - name: repudiandae
                      - name: voluptatum
                      - name: sint
                      - name: nihil
                      - name: ut
                      - name: enim
                      - name: nihil
                      - name: deserunt
                      - name: eveniet
                      - name: dolore
                      - name: alias
                      - name: eos
                      - name: eligendi
                      - name: earum
                      - name: veniam
                      - name: officiis
                      - name: eligendi
                      - name: tempora
                      - name: rerum
                committer4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    committers:
                      - name: possimus
                      - name: quo
                      - name: inventore
                      - name: odit
                      - name: rerum
                      - name: fugit
                      - name: sunt
                      - name: sint
                      - name: alias
                      - name: velit
                      - name: itaque
                      - name: vero
                      - name: ea
                      - name: at
                      - name: dolorem
                      - name: voluptatum
                      - name: sed
                      - name: error
                      - name: blanditiis
                      - name: amet
                committer5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    committers:
                      - name: optio
                      - name: quis
                      - name: dolores
                      - name: beatae
                      - name: culpa
                      - name: voluptatem
                      - name: aut
                      - name: natus
                      - name: quasi
                      - name: inventore
                      - name: quo
                      - name: molestias
                      - name: aut
                      - name: doloribus
                      - name: hic
                      - name: est
                      - name: odio
                      - name: reprehenderit
                      - name: quis
                      - name: possimus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCommitter
      tags:
        - Committers
      summary: Create committer
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitterRequest'
            examples:
              committer1:
                value:
                  name: in
              committer2:
                value:
                  name: dignissimos
              committer3:
                value:
                  name: reprehenderit
              committer4:
                value:
                  name: porro
              committer5:
                value:
                  name: consequatur
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: doloremque
                committer2:
                  value:
                    committer:
                      name: dolorum
                committer3:
                  value:
                    committer:
                      name: molestiae
                committer4:
                  value:
                    committer:
                      name: et
                committer5:
                  value:
                    committer:
                      name: at
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/committers/{committerId}':
    head:
      operationId: checkCommitter
      tags:
        - Committers
      summary: Check committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCommitter
      tags:
        - Committers
      summary: Get committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: dolore
                committer2:
                  value:
                    committer:
                      name: eveniet
                committer3:
                  value:
                    committer:
                      name: eum
                committer4:
                  value:
                    committer:
                      name: autem
                committer5:
                  value:
                    committer:
                      name: doloribus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCommitter
      tags:
        - Committers
      summary: Replace committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitterRequest'
            examples:
              committer1:
                value:
                  name: sit
              committer2:
                value:
                  name: sunt
              committer3:
                value:
                  name: fugit
              committer4:
                value:
                  name: veniam
              committer5:
                value:
                  name: qui
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: inventore
                committer2:
                  value:
                    committer:
                      name: eligendi
                committer3:
                  value:
                    committer:
                      name: nam
                committer4:
                  value:
                    committer:
                      name: quia
                committer5:
                  value:
                    committer:
                      name: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCommitter
      tags:
        - Committers
      summary: Modify committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitterRequest'
            examples:
              committer1:
                value:
                  name: sapiente
              committer2:
                value:
                  name: et
              committer3:
                value:
                  name: unde
              committer4:
                value:
                  name: asperiores
              committer5:
                value:
                  name: unde
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: aut
                committer2:
                  value:
                    committer:
                      name: laboriosam
                committer3:
                  value:
                    committer:
                      name: alias
                committer4:
                  value:
                    committer:
                      name: accusantium
                committer5:
                  value:
                    committer:
                      name: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCommitter
      tags:
        - Committers
      summary: Delete committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /repos:
    get:
      operationId: listRepos
      tags:
        - Repos
      summary: List repos
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repos:
                    type: array
                    items:
                      $ref: '#/components/schemas/RepoResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                repo1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repos:
                      - name: veritatis
                      - name: repellat
                      - name: magnam
                      - name: non
                      - name: ut
                      - name: tenetur
                      - name: accusantium
                      - name: accusamus
                      - name: omnis
                      - name: unde
                      - name: laudantium
                      - name: neque
                      - name: aut
                      - name: ut
                      - name: et
                      - name: consectetur
                      - name: accusamus
                      - name: similique
                      - name: assumenda
                      - name: non
                repo2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repos:
                      - name: facere
                      - name: repudiandae
                      - name: quo
                      - name: eum
                      - name: soluta
                      - name: maiores
                      - name: officiis
                      - name: laborum
                      - name: ut
                      - name: voluptas
                      - name: molestias
                      - name: quo
                      - name: suscipit
                      - name: non
                      - name: qui
                      - name: distinctio
                      - name: facilis
                      - name: asperiores
                      - name: expedita
                      - name: consequatur
                repo3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repos:
                      - name: voluptas
                      - name: quis
                      - name: quasi
                      - name: iure
                      - name: nisi
                      - name: facere
                      - name: voluptatem
                      - name: qui
                      - name: non
                      - name: nemo
                      - name: excepturi
                      - name: et
                      - name: rerum
                      - name: eaque
                      - name: voluptas
                      - name: voluptatibus
                      - name: et
                      - name: esse
                      - name: doloremque
                      - name: eos
                repo4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repos:
                      - name: voluptatem
                      - name: voluptate
                      - name: earum
                      - name: molestiae
                      - name: et
                      - name: aut
                      - name: accusantium
                      - name: nihil
                      - name: reiciendis
                      - name: aliquid
                      - name: itaque
                      - name: voluptatibus
                      - name: alias
                      - name: nostrum
                      - name: dolor
                      - name: sed
                      - name: et
                      - name: et
                      - name: ut
                      - name: aliquid
                repo5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repos:
                      - name: in
                      - name: veniam
                      - name: corporis
                      - name: reprehenderit
                      - name: omnis
                      - name: quos
                      - name: corporis
                      - name: autem
                      - name: fuga
                      - name: dolorum
                      - name: et
                      - name: beatae
                      - name: voluptate
                      - name: at
                      - name: sit
                      - name: tempore
                      - name: aut
                      - name: rem
                      - name: fugiat
                      - name: quidem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepo
      tags:
        - Repos
      summary: Create repo
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoRequest'
            examples:
              repo1:
                value:
                  name: qui
              repo2:
                value:
                  name: et
              repo3:
                value:
                  name: ut
              repo4:
                value:
                  name: fugiat
              repo5:
                value:
                  name: tempora
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: necessitatibus
                repo2:
                  value:
                    repo:
                      name: voluptatum
                repo3:
                  value:
                    repo:
                      name: et
                repo4:
                  value:
                    repo:
                      name: ipsam
                repo5:
                  value:
                    repo:
                      name: maiores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}':
    head:
      operationId: checkRepo
      tags:
        - Repos
      summary: Check repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepo
      tags:
        - Repos
      summary: Get repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: tempore
                repo2:
                  value:
                    repo:
                      name: eligendi
                repo3:
                  value:
                    repo:
                      name: tempore
                repo4:
                  value:
                    repo:
                      name: dolor
                repo5:
                  value:
                    repo:
                      name: fuga
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepo
      tags:
        - Repos
      summary: Replace repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoRequest'
            examples:
              repo1:
                value:
                  name: est
              repo2:
                value:
                  name: ut
              repo3:
                value:
                  name: qui
              repo4:
                value:
                  name: ea
              repo5:
                value:
                  name: aut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: labore
                repo2:
                  value:
                    repo:
                      name: tempora
                repo3:
                  value:
                    repo:
                      name: recusandae
                repo4:
                  value:
                    repo:
                      name: ut
                repo5:
                  value:
                    repo:
                      name: quibusdam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRepo
      tags:
        - Repos
      summary: Modify repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoRequest'
            examples:
              repo1:
                value:
                  name: ut
              repo2:
                value:
                  name: perferendis
              repo3:
                value:
                  name: qui
              repo4:
                value:
                  name: reprehenderit
              repo5:
                value:
                  name: veniam
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: omnis
                repo2:
                  value:
                    repo:
                      name: quam
                repo3:
                  value:
                    repo:
                      name: aut
                repo4:
                  value:
                    repo:
                      name: veritatis
                repo5:
                  value:
                    repo:
                      name: mollitia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepo
      tags:
        - Repos
      summary: Delete repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits':
    get:
      operationId: listRepoCommits
      tags:
        - Repos
      summary: List repo commits
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commits:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommitResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                commit1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commits:
                      - name: rerum
                      - name: doloribus
                      - name: possimus
                      - name: assumenda
                      - name: unde
                      - name: quis
                      - name: mollitia
                      - name: quasi
                      - name: magni
                      - name: alias
                      - name: quia
                      - name: tempore
                      - name: iure
                      - name: architecto
                      - name: excepturi
                      - name: blanditiis
                      - name: aut
                      - name: earum
                      - name: iste
                      - name: eius
                commit2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commits:
                      - name: adipisci
                      - name: et
                      - name: vero
                      - name: nihil
                      - name: molestiae
                      - name: voluptates
                      - name: omnis
                      - name: accusamus
                      - name: cum
                      - name: fugit
                      - name: et
                      - name: et
                      - name: consequuntur
                      - name: et
                      - name: id
                      - name: deleniti
                      - name: officia
                      - name: id
                      - name: sed
                      - name: blanditiis
                commit3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commits:
                      - name: quis
                      - name: qui
                      - name: perspiciatis
                      - name: saepe
                      - name: aut
                      - name: reprehenderit
                      - name: odit
                      - name: esse
                      - name: doloribus
                      - name: provident
                      - name: ad
                      - name: dolorem
                      - name: pariatur
                      - name: nulla
                      - name: qui
                      - name: rerum
                      - name: dolor
                      - name: distinctio
                      - name: beatae
                      - name: non
                commit4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commits:
                      - name: quia
                      - name: dolores
                      - name: eius
                      - name: dolores
                      - name: dolorum
                      - name: ut
                      - name: minima
                      - name: sapiente
                      - name: laborum
                      - name: quia
                      - name: nesciunt
                      - name: voluptatem
                      - name: magni
                      - name: quia
                      - name: enim
                      - name: praesentium
                      - name: eveniet
                      - name: eum
                      - name: soluta
                      - name: in
                commit5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commits:
                      - name: illo
                      - name: nemo
                      - name: omnis
                      - name: iure
                      - name: nulla
                      - name: at
                      - name: occaecati
                      - name: qui
                      - name: fugit
                      - name: ut
                      - name: accusantium
                      - name: rerum
                      - name: et
                      - name: iste
                      - name: assumenda
                      - name: sequi
                      - name: provident
                      - name: adipisci
                      - name: inventore
                      - name: quasi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepoCommit
      tags:
        - Repos
      summary: Create repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
            examples:
              commit1:
                value:
                  name: rerum
              commit2:
                value:
                  name: architecto
              commit3:
                value:
                  name: deserunt
              commit4:
                value:
                  name: sit
              commit5:
                value:
                  name: et
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: laborum
                commit2:
                  value:
                    commit:
                      name: in
                commit3:
                  value:
                    commit:
                      name: sunt
                commit4:
                  value:
                    commit:
                      name: aspernatur
                commit5:
                  value:
                    commit:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits/{commitId}':
    head:
      operationId: checkRepoCommit
      tags:
        - Repos
      summary: Check repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepoCommit
      tags:
        - Repos
      summary: Get repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: temporibus
                commit2:
                  value:
                    commit:
                      name: reiciendis
                commit3:
                  value:
                    commit:
                      name: tenetur
                commit4:
                  value:
                    commit:
                      name: quibusdam
                commit5:
                  value:
                    commit:
                      name: earum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepoCommit
      tags:
        - Repos
      summary: Replace repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
            examples:
              commit1:
                value:
                  name: tempore
              commit2:
                value:
                  name: blanditiis
              commit3:
                value:
                  name: provident
              commit4:
                value:
                  name: aut
              commit5:
                value:
                  name: et
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: quidem
                commit2:
                  value:
                    commit:
                      name: ut
                commit3:
                  value:
                    commit:
                      name: officiis
                commit4:
                  value:
                    commit:
                      name: maxime
                commit5:
                  value:
                    commit:
                      name: inventore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRepoCommit
      tags:
        - Repos
      summary: Modify repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
            examples:
              commit1:
                value:
                  name: dolorem
              commit2:
                value:
                  name: autem
              commit3:
                value:
                  name: consequatur
              commit4:
                value:
                  name: delectus
              commit5:
                value:
                  name: omnis
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: consequatur
                commit2:
                  value:
                    commit:
                      name: consequuntur
                commit3:
                  value:
                    commit:
                      name: sed
                commit4:
                  value:
                    commit:
                      name: asperiores
                commit5:
                  value:
                    commit:
                      name: delectus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepoCommit
      tags:
        - Repos
      summary: Delete repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/owners':
    get:
      operationId: listRepoOwners
      tags:
        - Repos
      summary: List repo owners
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwners:
                    type: array
                    items:
                      $ref: '#/components/schemas/RepoOwnerResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                repoOwner1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repoOwners:
                      - ownerId: dolore
                      - ownerId: perferendis
                      - ownerId: error
                      - ownerId: vitae
                      - ownerId: enim
                      - ownerId: harum
                      - ownerId: dolor
                      - ownerId: officiis
                      - ownerId: et
                      - ownerId: consectetur
                      - ownerId: nam
                      - ownerId: architecto
                      - ownerId: deleniti
                      - ownerId: exercitationem
                      - ownerId: autem
                      - ownerId: laboriosam
                      - ownerId: aperiam
                      - ownerId: ut
                      - ownerId: voluptatem
                      - ownerId: laboriosam
                repoOwner2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repoOwners:
                      - ownerId: provident
                      - ownerId: mollitia
                      - ownerId: aut
                      - ownerId: odit
                      - ownerId: tenetur
                      - ownerId: consectetur
                      - ownerId: cupiditate
                      - ownerId: saepe
                      - ownerId: minima
                      - ownerId: dolorem
                      - ownerId: et
                      - ownerId: delectus
                      - ownerId: sint
                      - ownerId: omnis
                      - ownerId: asperiores
                      - ownerId: veniam
                      - ownerId: error
                      - ownerId: libero
                      - ownerId: saepe
                      - ownerId: at
                repoOwner3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repoOwners:
                      - ownerId: atque
                      - ownerId: quia
                      - ownerId: iusto
                      - ownerId: quae
                      - ownerId: minus
                      - ownerId: autem
                      - ownerId: unde
                      - ownerId: accusantium
                      - ownerId: earum
                      - ownerId: ullam
                      - ownerId: illum
                      - ownerId: adipisci
                      - ownerId: quisquam
                      - ownerId: dolores
                      - ownerId: repudiandae
                      - ownerId: nihil
                      - ownerId: occaecati
                      - ownerId: est
                      - ownerId: corrupti
                      - ownerId: et
                repoOwner4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repoOwners:
                      - ownerId: asperiores
                      - ownerId: consequatur
                      - ownerId: nam
                      - ownerId: nulla
                      - ownerId: et
                      - ownerId: et
                      - ownerId: exercitationem
                      - ownerId: eligendi
                      - ownerId: et
                      - ownerId: eveniet
                      - ownerId: laboriosam
                      - ownerId: rerum
                      - ownerId: perspiciatis
                      - ownerId: repellendus
                      - ownerId: rem
                      - ownerId: numquam
                      - ownerId: optio
                      - ownerId: laborum
                      - ownerId: omnis
                      - ownerId: nisi
                repoOwner5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    repoOwners:
                      - ownerId: dolores
                      - ownerId: delectus
                      - ownerId: magnam
                      - ownerId: est
                      - ownerId: quos
                      - ownerId: tenetur
                      - ownerId: alias
                      - ownerId: sunt
                      - ownerId: dolor
                      - ownerId: ut
                      - ownerId: autem
                      - ownerId: pariatur
                      - ownerId: ea
                      - ownerId: consequuntur
                      - ownerId: porro
                      - ownerId: quas
                      - ownerId: temporibus
                      - ownerId: corporis
                      - ownerId: ipsam
                      - ownerId: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepoOwner
      tags:
        - Repos
      summary: Create repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoOwnerRequest'
            examples:
              repoOwner1:
                value:
                  ownerId: deserunt
              repoOwner2:
                value:
                  ownerId: vel
              repoOwner3:
                value:
                  ownerId: quidem
              repoOwner4:
                value:
                  ownerId: saepe
              repoOwner5:
                value:
                  ownerId: dolorem
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: molestias
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: qui
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: velit
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: vel
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: adipisci
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/owners/{ownerId}':
    head:
      operationId: checkRepoOwner
      tags:
        - Repos
      summary: Check repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepoOwner
      tags:
        - Repos
      summary: Get repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: aut
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: sequi
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: culpa
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: cum
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: recusandae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepoOwner
      tags:
        - Repos
      summary: Replace repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoOwnerRequest'
            examples:
              repoOwner1:
                value:
                  ownerId: voluptatum
              repoOwner2:
                value:
                  ownerId: magnam
              repoOwner3:
                value:
                  ownerId: quasi
              repoOwner4:
                value:
                  ownerId: ea
              repoOwner5:
                value:
                  ownerId: cumque
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: aut
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: odit
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: dolorem
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: esse
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: modi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRepoOwner
      tags:
        - Repos
      summary: Modify repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoOwnerRequest'
            examples:
              repoOwner1:
                value:
                  ownerId: odio
              repoOwner2:
                value:
                  ownerId: natus
              repoOwner3:
                value:
                  ownerId: deserunt
              repoOwner4:
                value:
                  ownerId: rerum
              repoOwner5:
                value:
                  ownerId: nisi
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: at
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: tempore
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: recusandae
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: maiores
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: fugit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepoOwner
      tags:
        - Repos
      summary: Delete repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits/{commitId}/committers':
    get:
      operationId: listRepoCommitCommitters
      tags:
        - Repos
      summary: List repo commit committers
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitters:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommitCommitterResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                commitCommitter1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commitCommitters:
                      - committerId: quia
                      - committerId: incidunt
                      - committerId: et
                      - committerId: sequi
                      - committerId: accusamus
                      - committerId: aspernatur
                      - committerId: totam
                      - committerId: magni
                      - committerId: maxime
                      - committerId: sit
                      - committerId: omnis
                      - committerId: harum
                      - committerId: vel
                      - committerId: esse
                      - committerId: facilis
                      - committerId: qui
                      - committerId: cumque
                      - committerId: quos
                      - committerId: libero
                      - committerId: doloremque
                commitCommitter2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commitCommitters:
                      - committerId: eum
                      - committerId: officia
                      - committerId: veniam
                      - committerId: id
                      - committerId: ipsum
                      - committerId: quia
                      - committerId: et
                      - committerId: reiciendis
                      - committerId: id
                      - committerId: nihil
                      - committerId: repellendus
                      - committerId: et
                      - committerId: sit
                      - committerId: sed
                      - committerId: voluptas
                      - committerId: ut
                      - committerId: aut
                      - committerId: deserunt
                      - committerId: unde
                      - committerId: non
                commitCommitter3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commitCommitters:
                      - committerId: est
                      - committerId: atque
                      - committerId: molestias
                      - committerId: quo
                      - committerId: voluptatem
                      - committerId: qui
                      - committerId: veniam
                      - committerId: odio
                      - committerId: veritatis
                      - committerId: velit
                      - committerId: qui
                      - committerId: non
                      - committerId: doloremque
                      - committerId: aperiam
                      - committerId: omnis
                      - committerId: suscipit
                      - committerId: dolorum
                      - committerId: qui
                      - committerId: eos
                      - committerId: vero
                commitCommitter4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commitCommitters:
                      - committerId: voluptatem
                      - committerId: dolorem
                      - committerId: occaecati
                      - committerId: repellendus
                      - committerId: atque
                      - committerId: sunt
                      - committerId: aliquid
                      - committerId: saepe
                      - committerId: quasi
                      - committerId: voluptas
                      - committerId: beatae
                      - committerId: pariatur
                      - committerId: recusandae
                      - committerId: est
                      - committerId: quia
                      - committerId: quia
                      - committerId: minus
                      - committerId: aut
                      - committerId: laboriosam
                      - committerId: ea
                commitCommitter5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    commitCommitters:
                      - committerId: a
                      - committerId: amet
                      - committerId: sunt
                      - committerId: ut
                      - committerId: sunt
                      - committerId: maxime
                      - committerId: voluptatum
                      - committerId: non
                      - committerId: dolorem
                      - committerId: corporis
                      - committerId: illo
                      - committerId: facere
                      - committerId: itaque
                      - committerId: et
                      - committerId: nostrum
                      - committerId: atque
                      - committerId: voluptatem
                      - committerId: qui
                      - committerId: autem
                      - committerId: hic
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepoCommitCommitter
      tags:
        - Repos
      summary: Create repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCommitterRequest'
            examples:
              commitCommitter1:
                value:
                  committerId: quia
              commitCommitter2:
                value:
                  committerId: veritatis
              commitCommitter3:
                value:
                  committerId: totam
              commitCommitter4:
                value:
                  committerId: quia
              commitCommitter5:
                value:
                  committerId: quae
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: magnam
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: dolores
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: delectus
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: aliquid
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: necessitatibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits/{commitId}/committers/{committerId}':
    head:
      operationId: checkRepoCommitCommitter
      tags:
        - Repos
      summary: Check repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepoCommitCommitter
      tags:
        - Repos
      summary: Get repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: magnam
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: dolores
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: fugit
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: et
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: necessitatibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepoCommitCommitter
      tags:
        - Repos
      summary: Replace repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCommitterRequest'
            examples:
              commitCommitter1:
                value:
                  committerId: sit
              commitCommitter2:
                value:
                  committerId: ut
              commitCommitter3:
                value:
                  committerId: perspiciatis
              commitCommitter4:
                value:
                  committerId: sed
              commitCommitter5:
                value:
                  committerId: dolore
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: voluptatem
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: nobis
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: quasi
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: velit
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: fugiat
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRepoCommitCommitter
      tags:
        - Repos
      summary: Modify repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCommitterRequest'
            examples:
              commitCommitter1:
                value:
                  committerId: sed
              commitCommitter2:
                value:
                  committerId: quod
              commitCommitter3:
                value:
                  committerId: qui
              commitCommitter4:
                value:
                  committerId: assumenda
              commitCommitter5:
                value:
                  committerId: ipsum
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: quod
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: eius
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: earum
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: odio
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: vero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepoCommitCommitter
      tags:
        - Repos
      summary: Delete repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    OwnerResponse:
      properties:
        name:
          type: string
    OwnerRequest:
      properties:
        name:
          type: string
    CommitterResponse:
      properties:
        name:
          type: string
    CommitterRequest:
      properties:
        name:
          type: string
    RepoResponse:
      properties:
        name:
          type: string
    RepoRequest:
      properties:
        name:
          type: string
    CommitResponse:
      properties:
        name:
          type: string
    CommitRequest:
      properties:
        name:
          type: string
    RepoOwnerResponse:
      properties:
        ownerId:
          type: string
    RepoOwnerRequest:
      properties:
        ownerId:
          type: string
    CommitCommitterResponse:
      properties:
        committerId:
          type: string
    CommitCommitterRequest:
      properties:
        committerId:
          type: string
