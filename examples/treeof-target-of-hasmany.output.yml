openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: treeOf target of hasMany'
paths:
  /groups:
    get:
      operationId: listGroups
      tags:
        - Groups
      summary: List groups
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      groups:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    nextPageToken: 3294c8d9-99fb-4bbe-8b8d-cd571fc3ce7b
                    groups:
                      - name: voluptate
                      - name: dicta
                      - name: at
                      - name: ut
                      - name: dicta
                      - name: minima
                      - name: et
                      - name: velit
                      - name: tempore
                      - name: quibusdam
                      - name: neque
                      - name: natus
                      - name: minima
                      - name: sed
                      - name: non
                      - name: labore
                      - name: earum
                      - name: autem
                      - name: accusantium
                      - name: non
                group2:
                  value:
                    nextPageToken: a8d4204d-ed9b-4cbe-b8ef-1c20175f72ba
                    groups:
                      - name: natus
                      - name: corporis
                      - name: excepturi
                      - name: odit
                      - name: recusandae
                      - name: quod
                      - name: sed
                      - name: quia
                      - name: sed
                      - name: impedit
                      - name: quis
                      - name: unde
                      - name: vero
                      - name: quis
                      - name: soluta
                      - name: omnis
                      - name: voluptas
                      - name: nam
                      - name: voluptates
                      - name: molestiae
                group3:
                  value:
                    nextPageToken: 1700e0ff-9fc1-43ae-8b6d-25df2efa39f5
                    groups:
                      - name: et
                      - name: ea
                      - name: culpa
                      - name: qui
                      - name: ut
                      - name: voluptatibus
                      - name: in
                      - name: excepturi
                      - name: ut
                      - name: vitae
                      - name: voluptatem
                      - name: voluptas
                      - name: repudiandae
                      - name: consequuntur
                      - name: repellat
                      - name: rem
                      - name: animi
                      - name: non
                      - name: ut
                      - name: alias
                group4:
                  value:
                    nextPageToken: 331f57ab-fce5-4909-9bb0-890759746da9
                    groups:
                      - name: officia
                      - name: et
                      - name: impedit
                      - name: sit
                      - name: fugiat
                      - name: sequi
                      - name: et
                      - name: qui
                      - name: rerum
                      - name: eos
                      - name: et
                      - name: culpa
                      - name: rerum
                      - name: necessitatibus
                      - name: atque
                      - name: adipisci
                      - name: eligendi
                      - name: dignissimos
                      - name: veniam
                      - name: culpa
                group5:
                  value:
                    nextPageToken: d39258cc-40f9-4e3b-aeab-c8e66fd832c7
                    groups:
                      - name: voluptatem
                      - name: veritatis
                      - name: doloribus
                      - name: laudantium
                      - name: repellendus
                      - name: ex
                      - name: voluptas
                      - name: neque
                      - name: dolores
                      - name: nulla
                      - name: minima
                      - name: id
                      - name: et
                      - name: eligendi
                      - name: deleniti
                      - name: nostrum
                      - name: tempora
                      - name: rerum
                      - name: saepe
                      - name: vero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroup
      tags:
        - Groups
      summary: Create group
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: ducimus
              group2:
                value:
                  name: pariatur
              group3:
                value:
                  name: nesciunt
              group4:
                value:
                  name: est
              group5:
                value:
                  name: eum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: eos
                group2:
                  value:
                    group:
                      name: sit
                group3:
                  value:
                    group:
                      name: voluptas
                group4:
                  value:
                    group:
                      name: eos
                group5:
                  value:
                    group:
                      name: id
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}':
    head:
      operationId: checkGroup
      tags:
        - Groups
      summary: Check group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroup
      tags:
        - Groups
      summary: Get group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: consequatur
                group2:
                  value:
                    group:
                      name: quia
                group3:
                  value:
                    group:
                      name: consequatur
                group4:
                  value:
                    group:
                      name: deserunt
                group5:
                  value:
                    group:
                      name: ullam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroup
      tags:
        - Groups
      summary: Replace group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: itaque
              group2:
                value:
                  name: expedita
              group3:
                value:
                  name: quo
              group4:
                value:
                  name: repudiandae
              group5:
                value:
                  name: et
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: quod
                group2:
                  value:
                    group:
                      name: unde
                group3:
                  value:
                    group:
                      name: inventore
                group4:
                  value:
                    group:
                      name: quos
                group5:
                  value:
                    group:
                      name: consequatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroup
      tags:
        - Groups
      summary: Modify group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: ex
              group2:
                value:
                  name: tempore
              group3:
                value:
                  name: nemo
              group4:
                value:
                  name: est
              group5:
                value:
                  name: unde
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: velit
                group2:
                  value:
                    group:
                      name: quos
                group3:
                  value:
                    group:
                      name: odio
                group4:
                  value:
                    group:
                      name: fugit
                group5:
                  value:
                    group:
                      name: dolor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroup
      tags:
        - Groups
      summary: Delete group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /regions:
    get:
      operationId: listRegions
      tags:
        - Regions
      summary: List regions
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      regions:
                        type: array
                        items:
                          $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    nextPageToken: f0ffad0f-4b1f-42dd-b91a-2e7291ae90c6
                    regions:
                      - name: consequatur
                      - name: voluptatem
                      - name: dolorem
                      - name: ullam
                      - name: voluptate
                      - name: reiciendis
                      - name: quis
                      - name: earum
                      - name: quidem
                      - name: repellendus
                      - name: et
                      - name: cupiditate
                      - name: id
                      - name: rem
                      - name: aperiam
                      - name: unde
                      - name: sint
                      - name: ut
                      - name: tenetur
                      - name: quisquam
                region2:
                  value:
                    nextPageToken: b4c1469c-a136-4ff9-9135-04e96fc8bb6d
                    regions:
                      - name: reiciendis
                      - name: voluptas
                      - name: odio
                      - name: et
                      - name: est
                      - name: esse
                      - name: temporibus
                      - name: doloribus
                      - name: odio
                      - name: eos
                      - name: cumque
                      - name: tempore
                      - name: id
                      - name: consequatur
                      - name: sit
                      - name: omnis
                      - name: sed
                      - name: temporibus
                      - name: exercitationem
                      - name: perspiciatis
                region3:
                  value:
                    nextPageToken: f5dca00f-ac41-4785-9b39-e3092f58f5dc
                    regions:
                      - name: quidem
                      - name: rerum
                      - name: sit
                      - name: accusantium
                      - name: odit
                      - name: aut
                      - name: sint
                      - name: pariatur
                      - name: vero
                      - name: illum
                      - name: autem
                      - name: ut
                      - name: sapiente
                      - name: ex
                      - name: perferendis
                      - name: voluptatem
                      - name: quia
                      - name: quidem
                      - name: et
                      - name: aut
                region4:
                  value:
                    nextPageToken: 00932d3e-fe0a-4a46-93bf-bace4b5cefa0
                    regions:
                      - name: assumenda
                      - name: numquam
                      - name: quasi
                      - name: voluptatem
                      - name: sit
                      - name: tempore
                      - name: ut
                      - name: quia
                      - name: vel
                      - name: aut
                      - name: non
                      - name: voluptatum
                      - name: est
                      - name: deleniti
                      - name: corrupti
                      - name: non
                      - name: non
                      - name: explicabo
                      - name: dolor
                      - name: totam
                region5:
                  value:
                    nextPageToken: 9e6c1e33-2a9c-4384-9da3-bcddbec5b5c0
                    regions:
                      - name: fugit
                      - name: in
                      - name: cum
                      - name: voluptatibus
                      - name: modi
                      - name: a
                      - name: qui
                      - name: magnam
                      - name: sint
                      - name: veritatis
                      - name: debitis
                      - name: tenetur
                      - name: quidem
                      - name: expedita
                      - name: eligendi
                      - name: ut
                      - name: sed
                      - name: porro
                      - name: a
                      - name: vitae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRegion
      tags:
        - Regions
      summary: Create region
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: unde
              region2:
                value:
                  name: qui
              region3:
                value:
                  name: repudiandae
              region4:
                value:
                  name: facere
              region5:
                value:
                  name: omnis
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: quos
                region2:
                  value:
                    region:
                      name: aut
                region3:
                  value:
                    region:
                      name: quis
                region4:
                  value:
                    region:
                      name: temporibus
                region5:
                  value:
                    region:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}':
    head:
      operationId: checkRegion
      tags:
        - Regions
      summary: Check region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRegion
      tags:
        - Regions
      summary: Get region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: molestiae
                region2:
                  value:
                    region:
                      name: suscipit
                region3:
                  value:
                    region:
                      name: deleniti
                region4:
                  value:
                    region:
                      name: et
                region5:
                  value:
                    region:
                      name: voluptas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRegion
      tags:
        - Regions
      summary: Replace region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: ipsam
              region2:
                value:
                  name: sapiente
              region3:
                value:
                  name: provident
              region4:
                value:
                  name: ducimus
              region5:
                value:
                  name: illum
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: odio
                region2:
                  value:
                    region:
                      name: quidem
                region3:
                  value:
                    region:
                      name: ut
                region4:
                  value:
                    region:
                      name: temporibus
                region5:
                  value:
                    region:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRegion
      tags:
        - Regions
      summary: Modify region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: sed
              region2:
                value:
                  name: qui
              region3:
                value:
                  name: omnis
              region4:
                value:
                  name: aliquid
              region5:
                value:
                  name: consequatur
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: voluptates
                region2:
                  value:
                    region:
                      name: exercitationem
                region3:
                  value:
                    region:
                      name: et
                region4:
                  value:
                    region:
                      name: nihil
                region5:
                  value:
                    region:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRegion
      tags:
        - Regions
      summary: Delete region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups':
    get:
      operationId: listGroupSubgroups
      tags:
        - Groups
      summary: List group subgroups
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      groups:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    nextPageToken: b0ba005d-72ee-479b-9d35-555f44d6515d
                    groups:
                      - name: sunt
                      - name: corporis
                      - name: quibusdam
                      - name: delectus
                      - name: reprehenderit
                      - name: sint
                      - name: qui
                      - name: dolorem
                      - name: eligendi
                      - name: corporis
                      - name: dolore
                      - name: et
                      - name: rerum
                      - name: eos
                      - name: molestias
                      - name: expedita
                      - name: suscipit
                      - name: perspiciatis
                      - name: velit
                      - name: qui
                group2:
                  value:
                    nextPageToken: b3163c53-139c-439e-ae29-1fc9f03527ea
                    groups:
                      - name: rerum
                      - name: aut
                      - name: officiis
                      - name: cumque
                      - name: quas
                      - name: consequatur
                      - name: odit
                      - name: nisi
                      - name: aut
                      - name: sed
                      - name: odit
                      - name: modi
                      - name: molestiae
                      - name: similique
                      - name: quibusdam
                      - name: totam
                      - name: distinctio
                      - name: repudiandae
                      - name: tempore
                      - name: ipsum
                group3:
                  value:
                    nextPageToken: 67935a80-9bd8-4b29-9f4d-1e7315754d31
                    groups:
                      - name: molestias
                      - name: vel
                      - name: alias
                      - name: qui
                      - name: at
                      - name: aut
                      - name: dolorem
                      - name: distinctio
                      - name: dolorem
                      - name: quia
                      - name: facilis
                      - name: est
                      - name: quia
                      - name: corrupti
                      - name: officiis
                      - name: maiores
                      - name: sed
                      - name: accusamus
                      - name: quos
                      - name: voluptatem
                group4:
                  value:
                    nextPageToken: 6f0fa866-e989-4387-9d57-b2ff4ed10855
                    groups:
                      - name: soluta
                      - name: eligendi
                      - name: enim
                      - name: facere
                      - name: tempore
                      - name: eaque
                      - name: ad
                      - name: quis
                      - name: itaque
                      - name: voluptatem
                      - name: nemo
                      - name: qui
                      - name: quia
                      - name: dignissimos
                      - name: et
                      - name: corporis
                      - name: ipsa
                      - name: occaecati
                      - name: quasi
                      - name: quos
                group5:
                  value:
                    nextPageToken: 9ad1b1b6-d4ca-41c0-bce9-5a1a1b4f3970
                    groups:
                      - name: et
                      - name: earum
                      - name: impedit
                      - name: qui
                      - name: et
                      - name: sed
                      - name: ut
                      - name: commodi
                      - name: rerum
                      - name: sint
                      - name: ut
                      - name: pariatur
                      - name: blanditiis
                      - name: eligendi
                      - name: veniam
                      - name: enim
                      - name: optio
                      - name: repudiandae
                      - name: sit
                      - name: optio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroupSubgroup
      tags:
        - Groups
      summary: Create group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: sit
              group2:
                value:
                  name: autem
              group3:
                value:
                  name: laboriosam
              group4:
                value:
                  name: voluptatem
              group5:
                value:
                  name: nesciunt
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: non
                group2:
                  value:
                    group:
                      name: aut
                group3:
                  value:
                    group:
                      name: non
                group4:
                  value:
                    group:
                      name: facilis
                group5:
                  value:
                    group:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups/{subgroupId}':
    head:
      operationId: checkGroupSubgroup
      tags:
        - Groups
      summary: Check group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroupSubgroup
      tags:
        - Groups
      summary: Get group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: illo
                group2:
                  value:
                    group:
                      name: voluptatem
                group3:
                  value:
                    group:
                      name: non
                group4:
                  value:
                    group:
                      name: molestias
                group5:
                  value:
                    group:
                      name: molestias
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroupSubgroup
      tags:
        - Groups
      summary: Replace group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: est
              group2:
                value:
                  name: vitae
              group3:
                value:
                  name: velit
              group4:
                value:
                  name: rem
              group5:
                value:
                  name: doloremque
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: placeat
                group2:
                  value:
                    group:
                      name: aut
                group3:
                  value:
                    group:
                      name: et
                group4:
                  value:
                    group:
                      name: excepturi
                group5:
                  value:
                    group:
                      name: provident
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroupSubgroup
      tags:
        - Groups
      summary: Modify group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: rem
              group2:
                value:
                  name: cum
              group3:
                value:
                  name: eaque
              group4:
                value:
                  name: reprehenderit
              group5:
                value:
                  name: dolorum
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: et
                group2:
                  value:
                    group:
                      name: fugiat
                group3:
                  value:
                    group:
                      name: qui
                group4:
                  value:
                    group:
                      name: eius
                group5:
                  value:
                    group:
                      name: porro
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroupSubgroup
      tags:
        - Groups
      summary: Delete group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}/groups':
    get:
      operationId: listRegionGroups
      tags:
        - Regions
      summary: List region groups
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      regionGroups:
                        type: array
                        items:
                          $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    nextPageToken: 89471f6d-e18e-4594-8843-70d78a0d5e3e
                    regionGroups:
                      - groupId: necessitatibus
                      - groupId: sed
                      - groupId: unde
                      - groupId: eum
                      - groupId: consequatur
                      - groupId: eius
                      - groupId: ipsa
                      - groupId: id
                      - groupId: et
                      - groupId: eius
                      - groupId: quaerat
                      - groupId: in
                      - groupId: culpa
                      - groupId: omnis
                      - groupId: explicabo
                      - groupId: veritatis
                      - groupId: asperiores
                      - groupId: quae
                      - groupId: est
                      - groupId: iure
                regionGroup2:
                  value:
                    nextPageToken: f2298205-68ff-49fa-a71c-9c118148d074
                    regionGroups:
                      - groupId: autem
                      - groupId: quaerat
                      - groupId: delectus
                      - groupId: rerum
                      - groupId: eaque
                      - groupId: aliquam
                      - groupId: dolorem
                      - groupId: quos
                      - groupId: assumenda
                      - groupId: cum
                      - groupId: non
                      - groupId: tenetur
                      - groupId: ipsam
                      - groupId: fugit
                      - groupId: voluptates
                      - groupId: quasi
                      - groupId: quos
                      - groupId: provident
                      - groupId: sequi
                      - groupId: dignissimos
                regionGroup3:
                  value:
                    nextPageToken: a4de2900-97bc-40c6-be05-c2c09fca3241
                    regionGroups:
                      - groupId: debitis
                      - groupId: laudantium
                      - groupId: quidem
                      - groupId: et
                      - groupId: ut
                      - groupId: sit
                      - groupId: impedit
                      - groupId: necessitatibus
                      - groupId: voluptatem
                      - groupId: omnis
                      - groupId: sequi
                      - groupId: voluptas
                      - groupId: minus
                      - groupId: et
                      - groupId: tempora
                      - groupId: ex
                      - groupId: facere
                      - groupId: molestias
                      - groupId: et
                      - groupId: eum
                regionGroup4:
                  value:
                    nextPageToken: d62fce58-6e42-4ee1-98f8-4e3aa8be7f97
                    regionGroups:
                      - groupId: suscipit
                      - groupId: soluta
                      - groupId: officia
                      - groupId: et
                      - groupId: quibusdam
                      - groupId: nam
                      - groupId: dolor
                      - groupId: rerum
                      - groupId: deleniti
                      - groupId: quas
                      - groupId: odit
                      - groupId: itaque
                      - groupId: sit
                      - groupId: provident
                      - groupId: omnis
                      - groupId: aut
                      - groupId: in
                      - groupId: sint
                      - groupId: consequatur
                      - groupId: sint
                regionGroup5:
                  value:
                    nextPageToken: 271377f9-11a9-4593-b53c-35da802f857e
                    regionGroups:
                      - groupId: dignissimos
                      - groupId: rerum
                      - groupId: ut
                      - groupId: tenetur
                      - groupId: sequi
                      - groupId: inventore
                      - groupId: consequatur
                      - groupId: sit
                      - groupId: fugiat
                      - groupId: impedit
                      - groupId: quia
                      - groupId: ex
                      - groupId: quidem
                      - groupId: sequi
                      - groupId: doloribus
                      - groupId: iure
                      - groupId: eius
                      - groupId: in
                      - groupId: dolor
                      - groupId: itaque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRegionGroup
      tags:
        - Regions
      summary: Create region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: aut
              regionGroup2:
                value:
                  groupId: quia
              regionGroup3:
                value:
                  groupId: sapiente
              regionGroup4:
                value:
                  groupId: quae
              regionGroup5:
                value:
                  groupId: explicabo
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: nisi
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: corporis
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: ea
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: aliquam
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: nostrum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}/groups/{groupId}':
    head:
      operationId: checkRegionGroup
      tags:
        - Regions
      summary: Check region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRegionGroup
      tags:
        - Regions
      summary: Get region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: suscipit
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: in
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: sunt
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: ut
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: magni
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRegionGroup
      tags:
        - Regions
      summary: Replace region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: voluptate
              regionGroup2:
                value:
                  groupId: vel
              regionGroup3:
                value:
                  groupId: mollitia
              regionGroup4:
                value:
                  groupId: sunt
              regionGroup5:
                value:
                  groupId: ut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: sapiente
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: et
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: sit
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: similique
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: quae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRegionGroup
      tags:
        - Regions
      summary: Modify region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: pariatur
              regionGroup2:
                value:
                  groupId: est
              regionGroup3:
                value:
                  groupId: atque
              regionGroup4:
                value:
                  groupId: qui
              regionGroup5:
                value:
                  groupId: aut
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: maxime
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: repellat
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: libero
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: et
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: quo
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRegionGroup
      tags:
        - Regions
      summary: Delete region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    GroupResponse:
      properties:
        name:
          type: string
    GroupRequest:
      properties:
        name:
          type: string
    RegionResponse:
      properties:
        name:
          type: string
    RegionRequest:
      properties:
        name:
          type: string
    RegionGroupResponse:
      properties:
        groupId:
          type: string
    RegionGroupRequest:
      properties:
        groupId:
          type: string
