openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: basic with immutability'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: iusto
                      - name: quibusdam
                      - name: accusamus
                      - name: aspernatur
                      - name: recusandae
                      - name: asperiores
                      - name: beatae
                      - name: aut
                      - name: ipsum
                      - name: animi
                      - name: tempora
                      - name: fugit
                      - name: velit
                      - name: mollitia
                      - name: cum
                      - name: consequuntur
                      - name: explicabo
                      - name: quasi
                      - name: et
                      - name: non
                pet2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: iste
                      - name: voluptatem
                      - name: neque
                      - name: esse
                      - name: reiciendis
                      - name: quo
                      - name: possimus
                      - name: quas
                      - name: excepturi
                      - name: eos
                      - name: aspernatur
                      - name: aperiam
                      - name: inventore
                      - name: odit
                      - name: et
                      - name: quaerat
                      - name: rem
                      - name: ut
                      - name: laudantium
                      - name: rerum
                pet3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: aut
                      - name: tenetur
                      - name: voluptatem
                      - name: rem
                      - name: doloremque
                      - name: eaque
                      - name: fuga
                      - name: enim
                      - name: maiores
                      - name: reiciendis
                      - name: unde
                      - name: maxime
                      - name: voluptatem
                      - name: omnis
                      - name: voluptatem
                      - name: dolorum
                      - name: sit
                      - name: assumenda
                      - name: et
                      - name: voluptatem
                pet4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: molestiae
                      - name: quae
                      - name: voluptatem
                      - name: in
                      - name: hic
                      - name: sit
                      - name: repellendus
                      - name: consequuntur
                      - name: ut
                      - name: maiores
                      - name: aliquam
                      - name: aliquid
                      - name: corrupti
                      - name: nostrum
                      - name: quaerat
                      - name: occaecati
                      - name: sint
                      - name: nam
                      - name: nam
                      - name: voluptatibus
                pet5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: nobis
                      - name: beatae
                      - name: ipsam
                      - name: in
                      - name: et
                      - name: qui
                      - name: ut
                      - name: repellat
                      - name: quaerat
                      - name: ipsam
                      - name: pariatur
                      - name: consequatur
                      - name: ea
                      - name: tempora
                      - name: reprehenderit
                      - name: perspiciatis
                      - name: unde
                      - name: est
                      - name: esse
                      - name: eum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: et
              pet2:
                value:
                  name: veniam
              pet3:
                value:
                  name: a
              pet4:
                value:
                  name: rerum
              pet5:
                value:
                  name: facilis
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: ipsa
                pet2:
                  value:
                    pet:
                      name: sit
                pet3:
                  value:
                    pet:
                      name: dolorem
                pet4:
                  value:
                    pet:
                      name: sunt
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: asperiores
                pet2:
                  value:
                    pet:
                      name: alias
                pet3:
                  value:
                    pet:
                      name: dolorem
                pet4:
                  value:
                    pet:
                      name: aut
                pet5:
                  value:
                    pet:
                      name: ducimus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
