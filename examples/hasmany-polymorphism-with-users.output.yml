openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: hasMany polymorphism with users'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 5ef56f63-b40a-4365-bd25-e48e44430a2e
                    users:
                      - name: quia
                      - name: nesciunt
                      - name: et
                      - name: qui
                      - name: voluptate
                      - name: quos
                      - name: beatae
                      - name: blanditiis
                      - name: eum
                      - name: omnis
                      - name: est
                      - name: quam
                      - name: sint
                      - name: doloribus
                      - name: et
                      - name: velit
                      - name: dolore
                      - name: odio
                      - name: error
                      - name: cumque
                user2:
                  value:
                    nextPageToken: 89ce2ca2-aabe-4a68-94e0-7633a3644413
                    users:
                      - name: ab
                      - name: saepe
                      - name: commodi
                      - name: ut
                      - name: in
                      - name: et
                      - name: odio
                      - name: excepturi
                      - name: nostrum
                      - name: quae
                      - name: eos
                      - name: aut
                      - name: iure
                      - name: ut
                      - name: est
                      - name: voluptate
                      - name: optio
                      - name: nobis
                      - name: cum
                      - name: pariatur
                user3:
                  value:
                    nextPageToken: 95b160e7-690c-46ca-9738-87152e8aedae
                    users:
                      - name: aperiam
                      - name: impedit
                      - name: et
                      - name: accusantium
                      - name: sit
                      - name: aliquam
                      - name: quae
                      - name: illum
                      - name: sit
                      - name: blanditiis
                      - name: ab
                      - name: nemo
                      - name: est
                      - name: officiis
                      - name: quia
                      - name: distinctio
                      - name: quis
                      - name: voluptas
                      - name: voluptatibus
                      - name: dolores
                user4:
                  value:
                    nextPageToken: 638ff995-31b5-4848-b717-524bfa82711e
                    users:
                      - name: labore
                      - name: vel
                      - name: aut
                      - name: rerum
                      - name: iure
                      - name: harum
                      - name: debitis
                      - name: autem
                      - name: voluptas
                      - name: delectus
                      - name: rem
                      - name: est
                      - name: dolor
                      - name: porro
                      - name: odit
                      - name: delectus
                      - name: dolor
                      - name: saepe
                      - name: consequuntur
                      - name: impedit
                user5:
                  value:
                    nextPageToken: e9585467-2530-4200-abf3-8d1d5806e896
                    users:
                      - name: nisi
                      - name: quam
                      - name: quo
                      - name: molestiae
                      - name: corrupti
                      - name: et
                      - name: omnis
                      - name: non
                      - name: cupiditate
                      - name: impedit
                      - name: iusto
                      - name: totam
                      - name: omnis
                      - name: dolores
                      - name: deleniti
                      - name: eius
                      - name: inventore
                      - name: nesciunt
                      - name: est
                      - name: consequatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: explicabo
              user2:
                value:
                  name: tempore
              user3:
                value:
                  name: veritatis
              user4:
                value:
                  name: praesentium
              user5:
                value:
                  name: reprehenderit
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: ut
                user2:
                  value:
                    user:
                      name: et
                user3:
                  value:
                    user:
                      name: perspiciatis
                user4:
                  value:
                    user:
                      name: non
                user5:
                  value:
                    user:
                      name: dolores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: enim
                user2:
                  value:
                    user:
                      name: non
                user3:
                  value:
                    user:
                      name: aspernatur
                user4:
                  value:
                    user:
                      name: ab
                user5:
                  value:
                    user:
                      name: unde
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: pariatur
              user2:
                value:
                  name: eaque
              user3:
                value:
                  name: dignissimos
              user4:
                value:
                  name: iure
              user5:
                value:
                  name: fugit
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: sed
                user2:
                  value:
                    user:
                      name: id
                user3:
                  value:
                    user:
                      name: earum
                user4:
                  value:
                    user:
                      name: iure
                user5:
                  value:
                    user:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: illum
              user2:
                value:
                  name: voluptatibus
              user3:
                value:
                  name: veniam
              user4:
                value:
                  name: perferendis
              user5:
                value:
                  name: sit
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: dolor
                user2:
                  value:
                    user:
                      name: animi
                user3:
                  value:
                    user:
                      name: sunt
                user4:
                  value:
                    user:
                      name: assumenda
                user5:
                  value:
                    user:
                      name: ea
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 0aa1208f-f2fd-4329-9763-e62de5653d04
                    pets:
                      - name: accusamus
                      - name: dolores
                      - name: ea
                      - name: omnis
                      - name: voluptatum
                      - name: placeat
                      - name: aperiam
                      - name: soluta
                      - name: eveniet
                      - name: aut
                      - name: laborum
                      - name: cum
                      - name: quo
                      - name: maxime
                      - name: officiis
                      - name: quas
                      - name: qui
                      - name: nihil
                      - name: et
                      - name: enim
                pet2:
                  value:
                    nextPageToken: df513135-0972-40a3-bc06-da0328933c9f
                    pets:
                      - name: autem
                      - name: aliquam
                      - name: ratione
                      - name: dolorem
                      - name: maxime
                      - name: voluptatem
                      - name: architecto
                      - name: eos
                      - name: non
                      - name: soluta
                      - name: placeat
                      - name: illum
                      - name: consequuntur
                      - name: molestiae
                      - name: labore
                      - name: facere
                      - name: dignissimos
                      - name: adipisci
                      - name: corporis
                      - name: error
                pet3:
                  value:
                    nextPageToken: d1b63ed7-f121-4e4e-a4bd-5088595c2833
                    pets:
                      - name: doloremque
                      - name: cum
                      - name: sit
                      - name: id
                      - name: cupiditate
                      - name: ut
                      - name: tempore
                      - name: quia
                      - name: et
                      - name: architecto
                      - name: et
                      - name: quo
                      - name: asperiores
                      - name: aut
                      - name: minus
                      - name: mollitia
                      - name: libero
                      - name: alias
                      - name: et
                      - name: quod
                pet4:
                  value:
                    nextPageToken: 3dad979b-faf1-4cf3-ad94-08f5e1e8a13f
                    pets:
                      - name: magni
                      - name: dolores
                      - name: vero
                      - name: quod
                      - name: inventore
                      - name: eum
                      - name: iusto
                      - name: dolore
                      - name: maiores
                      - name: dolor
                      - name: omnis
                      - name: reprehenderit
                      - name: magni
                      - name: eaque
                      - name: repellendus
                      - name: voluptas
                      - name: odio
                      - name: dolores
                      - name: eveniet
                      - name: ab
                pet5:
                  value:
                    nextPageToken: ff6b3fa8-4d47-4c6f-a1d8-c0e128232ec8
                    pets:
                      - name: ea
                      - name: voluptatem
                      - name: quos
                      - name: quia
                      - name: et
                      - name: quisquam
                      - name: iusto
                      - name: possimus
                      - name: occaecati
                      - name: sit
                      - name: sed
                      - name: ut
                      - name: ab
                      - name: eaque
                      - name: dolore
                      - name: veniam
                      - name: voluptatem
                      - name: sed
                      - name: soluta
                      - name: ea
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: molestias
              pet2:
                value:
                  name: repudiandae
              pet3:
                value:
                  name: sint
              pet4:
                value:
                  name: nobis
              pet5:
                value:
                  name: quo
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: sit
                pet2:
                  value:
                    pet:
                      name: voluptatem
                pet3:
                  value:
                    pet:
                      name: dolores
                pet4:
                  value:
                    pet:
                      name: id
                pet5:
                  value:
                    pet:
                      name: ipsum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quo
                pet2:
                  value:
                    pet:
                      name: rerum
                pet3:
                  value:
                    pet:
                      name: recusandae
                pet4:
                  value:
                    pet:
                      name: accusamus
                pet5:
                  value:
                    pet:
                      name: sunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: aspernatur
              pet2:
                value:
                  name: quis
              pet3:
                value:
                  name: consequatur
              pet4:
                value:
                  name: nihil
              pet5:
                value:
                  name: officiis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: perferendis
                pet2:
                  value:
                    pet:
                      name: aut
                pet3:
                  value:
                    pet:
                      name: ut
                pet4:
                  value:
                    pet:
                      name: qui
                pet5:
                  value:
                    pet:
                      name: odio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: voluptatem
              pet2:
                value:
                  name: ut
              pet3:
                value:
                  name: aperiam
              pet4:
                value:
                  name: iure
              pet5:
                value:
                  name: voluptatem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: ipsa
                pet2:
                  value:
                    pet:
                      name: cumque
                pet3:
                  value:
                    pet:
                      name: non
                pet4:
                  value:
                    pet:
                      name: amet
                pet5:
                  value:
                    pet:
                      name: ratione
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: et
                user2:
                  value:
                    user:
                      name: ut
                user3:
                  value:
                    user:
                      name: aut
                user4:
                  value:
                    user:
                      name: labore
                user5:
                  value:
                    user:
                      name: maxime
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners':
    get:
      operationId: listPetOwners
      tags:
        - Pets
      summary: List pet owners
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petOwners:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    nextPageToken: c26c7ffd-a9e2-4694-8bbd-e39264075b3c
                    petOwners:
                      - ownerId: voluptas
                      - ownerId: illo
                      - ownerId: quibusdam
                      - ownerId: voluptatem
                      - ownerId: nisi
                      - ownerId: minima
                      - ownerId: sit
                      - ownerId: expedita
                      - ownerId: cumque
                      - ownerId: enim
                      - ownerId: aut
                      - ownerId: et
                      - ownerId: aut
                      - ownerId: quia
                      - ownerId: ullam
                      - ownerId: sed
                      - ownerId: repellendus
                      - ownerId: est
                      - ownerId: magni
                      - ownerId: placeat
                petOwner2:
                  value:
                    nextPageToken: 11c9b1c2-5d34-4c53-bf2e-e1ade638734a
                    petOwners:
                      - ownerId: illum
                      - ownerId: aperiam
                      - ownerId: assumenda
                      - ownerId: a
                      - ownerId: culpa
                      - ownerId: qui
                      - ownerId: non
                      - ownerId: ipsum
                      - ownerId: voluptatem
                      - ownerId: sed
                      - ownerId: quam
                      - ownerId: dolore
                      - ownerId: rerum
                      - ownerId: omnis
                      - ownerId: ex
                      - ownerId: adipisci
                      - ownerId: dolorum
                      - ownerId: sit
                      - ownerId: nihil
                      - ownerId: quo
                petOwner3:
                  value:
                    nextPageToken: bbc3d6fb-f736-4998-937c-11052ffcc2b4
                    petOwners:
                      - ownerId: vitae
                      - ownerId: modi
                      - ownerId: veritatis
                      - ownerId: cum
                      - ownerId: sit
                      - ownerId: velit
                      - ownerId: et
                      - ownerId: exercitationem
                      - ownerId: ut
                      - ownerId: cumque
                      - ownerId: animi
                      - ownerId: tempora
                      - ownerId: et
                      - ownerId: vitae
                      - ownerId: sint
                      - ownerId: dolores
                      - ownerId: consequatur
                      - ownerId: temporibus
                      - ownerId: repellendus
                      - ownerId: fuga
                petOwner4:
                  value:
                    nextPageToken: 49e22715-1daa-4731-9e51-df87d28dd350
                    petOwners:
                      - ownerId: delectus
                      - ownerId: illum
                      - ownerId: nulla
                      - ownerId: officia
                      - ownerId: consequuntur
                      - ownerId: facere
                      - ownerId: iusto
                      - ownerId: est
                      - ownerId: a
                      - ownerId: qui
                      - ownerId: magnam
                      - ownerId: aut
                      - ownerId: rem
                      - ownerId: blanditiis
                      - ownerId: delectus
                      - ownerId: debitis
                      - ownerId: quaerat
                      - ownerId: adipisci
                      - ownerId: nihil
                      - ownerId: cupiditate
                petOwner5:
                  value:
                    nextPageToken: 1e4313e6-86a7-4580-a8fd-9a09bcf0544d
                    petOwners:
                      - ownerId: mollitia
                      - ownerId: labore
                      - ownerId: suscipit
                      - ownerId: consequatur
                      - ownerId: dolores
                      - ownerId: accusantium
                      - ownerId: quos
                      - ownerId: odio
                      - ownerId: non
                      - ownerId: quo
                      - ownerId: non
                      - ownerId: corporis
                      - ownerId: sequi
                      - ownerId: reprehenderit
                      - ownerId: quibusdam
                      - ownerId: consequatur
                      - ownerId: repudiandae
                      - ownerId: molestiae
                      - ownerId: iusto
                      - ownerId: at
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwner
      tags:
        - Pets
      summary: Create pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: ex
              petOwner2:
                value:
                  ownerId: blanditiis
              petOwner3:
                value:
                  ownerId: ipsa
              petOwner4:
                value:
                  ownerId: dolor
              petOwner5:
                value:
                  ownerId: voluptatem
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: molestias
                petOwner2:
                  value:
                    petOwner:
                      ownerId: laboriosam
                petOwner3:
                  value:
                    petOwner:
                      ownerId: quis
                petOwner4:
                  value:
                    petOwner:
                      ownerId: laborum
                petOwner5:
                  value:
                    petOwner:
                      ownerId: quo
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners/{ownerId}':
    head:
      operationId: checkPetOwner
      tags:
        - Pets
      summary: Check pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwner
      tags:
        - Pets
      summary: Get pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: ea
                petOwner2:
                  value:
                    petOwner:
                      ownerId: maiores
                petOwner3:
                  value:
                    petOwner:
                      ownerId: ad
                petOwner4:
                  value:
                    petOwner:
                      ownerId: iusto
                petOwner5:
                  value:
                    petOwner:
                      ownerId: sunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwner
      tags:
        - Pets
      summary: Replace pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: molestiae
              petOwner2:
                value:
                  ownerId: magnam
              petOwner3:
                value:
                  ownerId: qui
              petOwner4:
                value:
                  ownerId: eaque
              petOwner5:
                value:
                  ownerId: fugiat
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: aspernatur
                petOwner2:
                  value:
                    petOwner:
                      ownerId: eos
                petOwner3:
                  value:
                    petOwner:
                      ownerId: rerum
                petOwner4:
                  value:
                    petOwner:
                      ownerId: earum
                petOwner5:
                  value:
                    petOwner:
                      ownerId: vero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwner
      tags:
        - Pets
      summary: Modify pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: in
              petOwner2:
                value:
                  ownerId: assumenda
              petOwner3:
                value:
                  ownerId: quia
              petOwner4:
                value:
                  ownerId: et
              petOwner5:
                value:
                  ownerId: sit
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: amet
                petOwner2:
                  value:
                    petOwner:
                      ownerId: impedit
                petOwner3:
                  value:
                    petOwner:
                      ownerId: aliquid
                petOwner4:
                  value:
                    petOwner:
                      ownerId: dolor
                petOwner5:
                  value:
                    petOwner:
                      ownerId: velit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwner
      tags:
        - Pets
      summary: Delete pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets/owners:
    get:
      operationId: listPetOwnersAsUser
      tags:
        - User
      summary: List pet owners for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 15b85c3b-9efe-4504-9438-95f359c3e914
                    pets:
                      - name: velit
                      - name: et
                      - name: dolorem
                      - name: voluptate
                      - name: est
                      - name: nihil
                      - name: voluptates
                      - name: est
                      - name: pariatur
                      - name: cum
                      - name: quo
                      - name: assumenda
                      - name: sed
                      - name: sit
                      - name: et
                      - name: eos
                      - name: saepe
                      - name: aliquid
                      - name: porro
                      - name: quaerat
                pet2:
                  value:
                    nextPageToken: db4c6617-8883-4f62-aab8-ce593a747fe4
                    pets:
                      - name: explicabo
                      - name: quia
                      - name: beatae
                      - name: et
                      - name: praesentium
                      - name: qui
                      - name: est
                      - name: aliquid
                      - name: fugiat
                      - name: placeat
                      - name: quas
                      - name: aut
                      - name: et
                      - name: in
                      - name: ex
                      - name: quibusdam
                      - name: voluptatum
                      - name: a
                      - name: molestiae
                      - name: aut
                pet3:
                  value:
                    nextPageToken: cd0321ad-298f-4d33-97df-2f9aa33d1bd3
                    pets:
                      - name: laboriosam
                      - name: quasi
                      - name: quia
                      - name: quibusdam
                      - name: non
                      - name: commodi
                      - name: omnis
                      - name: quo
                      - name: asperiores
                      - name: laudantium
                      - name: possimus
                      - name: maxime
                      - name: non
                      - name: eos
                      - name: sint
                      - name: sequi
                      - name: facere
                      - name: earum
                      - name: velit
                      - name: atque
                pet4:
                  value:
                    nextPageToken: fc4ccf4e-62aa-4cf6-ba95-09725d56850b
                    pets:
                      - name: ea
                      - name: deleniti
                      - name: corrupti
                      - name: quisquam
                      - name: non
                      - name: consequatur
                      - name: ut
                      - name: dolorem
                      - name: enim
                      - name: molestiae
                      - name: ut
                      - name: ipsam
                      - name: repudiandae
                      - name: accusamus
                      - name: odit
                      - name: magni
                      - name: qui
                      - name: veritatis
                      - name: sed
                      - name: vitae
                pet5:
                  value:
                    nextPageToken: 7e1575e7-8125-452b-93e5-373c845abd64
                    pets:
                      - name: rerum
                      - name: nobis
                      - name: quia
                      - name: numquam
                      - name: suscipit
                      - name: corporis
                      - name: eligendi
                      - name: dolorum
                      - name: deleniti
                      - name: enim
                      - name: aliquam
                      - name: dolorem
                      - name: laboriosam
                      - name: dolor
                      - name: et
                      - name: debitis
                      - name: perspiciatis
                      - name: corporis
                      - name: temporibus
                      - name: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwnerAsUser
      tags:
        - User
      summary: Create pet owner for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: molestiae
              pet2:
                value:
                  name: ducimus
              pet3:
                value:
                  name: nam
              pet4:
                value:
                  name: et
              pet5:
                value:
                  name: beatae
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: magnam
                pet2:
                  value:
                    pet:
                      name: rem
                pet3:
                  value:
                    pet:
                      name: est
                pet4:
                  value:
                    pet:
                      name: temporibus
                pet5:
                  value:
                    pet:
                      name: omnis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/owners/{petId}':
    head:
      operationId: checkPetOwnerAsUser
      tags:
        - User
      summary: Check pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwnerAsUser
      tags:
        - User
      summary: Get pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: in
                pet2:
                  value:
                    pet:
                      name: non
                pet3:
                  value:
                    pet:
                      name: dolorem
                pet4:
                  value:
                    pet:
                      name: quae
                pet5:
                  value:
                    pet:
                      name: sapiente
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwnerAsUser
      tags:
        - User
      summary: Replace pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: veritatis
              pet2:
                value:
                  name: qui
              pet3:
                value:
                  name: deserunt
              pet4:
                value:
                  name: ducimus
              pet5:
                value:
                  name: fugit
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: eum
                pet2:
                  value:
                    pet:
                      name: tempore
                pet3:
                  value:
                    pet:
                      name: dolor
                pet4:
                  value:
                    pet:
                      name: est
                pet5:
                  value:
                    pet:
                      name: ea
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwnerAsUser
      tags:
        - User
      summary: Modify pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: minus
              pet2:
                value:
                  name: nemo
              pet3:
                value:
                  name: nam
              pet4:
                value:
                  name: voluptas
              pet5:
                value:
                  name: voluptas
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: et
                pet2:
                  value:
                    pet:
                      name: est
                pet3:
                  value:
                    pet:
                      name: eum
                pet4:
                  value:
                    pet:
                      name: ipsam
                pet5:
                  value:
                    pet:
                      name: atque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwnerAsUser
      tags:
        - User
      summary: Delete pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors':
    get:
      operationId: listPetDoctors
      tags:
        - Pets
      summary: List pet doctors
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petDoctors:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    nextPageToken: bcf9cb5c-e4a4-4ff4-9d7b-524a673dd0e9
                    petDoctors:
                      - doctorId: et
                      - doctorId: aut
                      - doctorId: id
                      - doctorId: saepe
                      - doctorId: aut
                      - doctorId: numquam
                      - doctorId: qui
                      - doctorId: voluptates
                      - doctorId: rerum
                      - doctorId: delectus
                      - doctorId: quam
                      - doctorId: quis
                      - doctorId: sint
                      - doctorId: labore
                      - doctorId: sit
                      - doctorId: sequi
                      - doctorId: et
                      - doctorId: ut
                      - doctorId: sapiente
                      - doctorId: et
                petDoctor2:
                  value:
                    nextPageToken: fa68edbf-55ff-4a19-840b-f5e9d46571cc
                    petDoctors:
                      - doctorId: eum
                      - doctorId: rem
                      - doctorId: cumque
                      - doctorId: doloribus
                      - doctorId: accusamus
                      - doctorId: molestiae
                      - doctorId: eos
                      - doctorId: dolore
                      - doctorId: ipsa
                      - doctorId: deleniti
                      - doctorId: alias
                      - doctorId: suscipit
                      - doctorId: eius
                      - doctorId: et
                      - doctorId: id
                      - doctorId: neque
                      - doctorId: iusto
                      - doctorId: maiores
                      - doctorId: nisi
                      - doctorId: dolores
                petDoctor3:
                  value:
                    nextPageToken: 2a4393d9-b1c9-40fc-8c21-f5e2156f9c17
                    petDoctors:
                      - doctorId: rem
                      - doctorId: non
                      - doctorId: nostrum
                      - doctorId: quasi
                      - doctorId: perspiciatis
                      - doctorId: quis
                      - doctorId: ut
                      - doctorId: saepe
                      - doctorId: ducimus
                      - doctorId: aut
                      - doctorId: commodi
                      - doctorId: dolorem
                      - doctorId: fugiat
                      - doctorId: repellendus
                      - doctorId: quia
                      - doctorId: est
                      - doctorId: facilis
                      - doctorId: qui
                      - doctorId: odit
                      - doctorId: consequatur
                petDoctor4:
                  value:
                    nextPageToken: 5a927669-5a3b-4e38-b433-3fd955ff70e3
                    petDoctors:
                      - doctorId: molestias
                      - doctorId: commodi
                      - doctorId: expedita
                      - doctorId: laborum
                      - doctorId: occaecati
                      - doctorId: placeat
                      - doctorId: beatae
                      - doctorId: similique
                      - doctorId: est
                      - doctorId: eius
                      - doctorId: consequatur
                      - doctorId: ea
                      - doctorId: optio
                      - doctorId: omnis
                      - doctorId: debitis
                      - doctorId: atque
                      - doctorId: cum
                      - doctorId: eveniet
                      - doctorId: animi
                      - doctorId: vel
                petDoctor5:
                  value:
                    nextPageToken: 225dfde6-d723-4ef8-804e-90e76c2a1860
                    petDoctors:
                      - doctorId: praesentium
                      - doctorId: velit
                      - doctorId: aut
                      - doctorId: quisquam
                      - doctorId: ab
                      - doctorId: consequatur
                      - doctorId: animi
                      - doctorId: nihil
                      - doctorId: illo
                      - doctorId: rerum
                      - doctorId: delectus
                      - doctorId: a
                      - doctorId: unde
                      - doctorId: in
                      - doctorId: enim
                      - doctorId: voluptatem
                      - doctorId: dolor
                      - doctorId: facere
                      - doctorId: porro
                      - doctorId: dicta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetDoctor
      tags:
        - Pets
      summary: Create pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: voluptatem
              petDoctor2:
                value:
                  doctorId: repellendus
              petDoctor3:
                value:
                  doctorId: officiis
              petDoctor4:
                value:
                  doctorId: dicta
              petDoctor5:
                value:
                  doctorId: est
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: rerum
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: repellat
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: possimus
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: temporibus
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: voluptate
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors/{doctorId}':
    head:
      operationId: checkPetDoctor
      tags:
        - Pets
      summary: Check pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetDoctor
      tags:
        - Pets
      summary: Get pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: fugit
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: reiciendis
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: quo
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: laboriosam
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: eaque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetDoctor
      tags:
        - Pets
      summary: Replace pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: illum
              petDoctor2:
                value:
                  doctorId: temporibus
              petDoctor3:
                value:
                  doctorId: nesciunt
              petDoctor4:
                value:
                  doctorId: et
              petDoctor5:
                value:
                  doctorId: dolorum
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: facilis
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: provident
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: porro
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: qui
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: at
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetDoctor
      tags:
        - Pets
      summary: Modify pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: id
              petDoctor2:
                value:
                  doctorId: nulla
              petDoctor3:
                value:
                  doctorId: dolorem
              petDoctor4:
                value:
                  doctorId: non
              petDoctor5:
                value:
                  doctorId: officia
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: facere
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: dolor
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: saepe
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: perferendis
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetDoctor
      tags:
        - Pets
      summary: Delete pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets/caring:
    get:
      operationId: listPetCaringAsUser
      tags:
        - User
      summary: List pet caring for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 91e7a143-4b86-4c74-82af-179a66cd8078
                    pets:
                      - name: minima
                      - name: et
                      - name: quia
                      - name: ut
                      - name: ut
                      - name: porro
                      - name: veniam
                      - name: facere
                      - name: omnis
                      - name: porro
                      - name: perspiciatis
                      - name: aut
                      - name: labore
                      - name: vel
                      - name: delectus
                      - name: debitis
                      - name: sit
                      - name: delectus
                      - name: reiciendis
                      - name: et
                pet2:
                  value:
                    nextPageToken: de1c90c1-c4af-4f6a-ab7b-af81ea0ef4b8
                    pets:
                      - name: harum
                      - name: soluta
                      - name: aut
                      - name: voluptatem
                      - name: consequatur
                      - name: alias
                      - name: iste
                      - name: consectetur
                      - name: autem
                      - name: molestiae
                      - name: nihil
                      - name: illum
                      - name: provident
                      - name: consequuntur
                      - name: delectus
                      - name: eos
                      - name: sed
                      - name: deserunt
                      - name: corrupti
                      - name: qui
                pet3:
                  value:
                    nextPageToken: b8e7a1bc-948f-4fcf-b9e1-136a9f4d6be6
                    pets:
                      - name: nemo
                      - name: aut
                      - name: omnis
                      - name: fugiat
                      - name: ducimus
                      - name: nemo
                      - name: dolorem
                      - name: porro
                      - name: vel
                      - name: dolor
                      - name: quibusdam
                      - name: corrupti
                      - name: et
                      - name: modi
                      - name: aut
                      - name: aut
                      - name: beatae
                      - name: consequatur
                      - name: aut
                      - name: tempora
                pet4:
                  value:
                    nextPageToken: ab66568f-4559-4d23-9c9b-42995b35c9e1
                    pets:
                      - name: dolorum
                      - name: quo
                      - name: ipsum
                      - name: eum
                      - name: expedita
                      - name: assumenda
                      - name: aperiam
                      - name: nobis
                      - name: sapiente
                      - name: impedit
                      - name: molestiae
                      - name: soluta
                      - name: deleniti
                      - name: id
                      - name: dolorem
                      - name: perferendis
                      - name: consequatur
                      - name: quisquam
                      - name: laboriosam
                      - name: inventore
                pet5:
                  value:
                    nextPageToken: 8d38f80d-1338-46f9-a5d4-61957ab586f8
                    pets:
                      - name: eveniet
                      - name: voluptas
                      - name: minima
                      - name: enim
                      - name: rerum
                      - name: ut
                      - name: magnam
                      - name: in
                      - name: quidem
                      - name: facere
                      - name: facilis
                      - name: exercitationem
                      - name: enim
                      - name: quo
                      - name: asperiores
                      - name: amet
                      - name: omnis
                      - name: magni
                      - name: itaque
                      - name: voluptatem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetCaringAsUser
      tags:
        - User
      summary: Create pet caring for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: est
              pet2:
                value:
                  name: est
              pet3:
                value:
                  name: enim
              pet4:
                value:
                  name: nisi
              pet5:
                value:
                  name: dolorum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quisquam
                pet2:
                  value:
                    pet:
                      name: qui
                pet3:
                  value:
                    pet:
                      name: nesciunt
                pet4:
                  value:
                    pet:
                      name: nostrum
                pet5:
                  value:
                    pet:
                      name: molestiae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/caring/{petId}':
    head:
      operationId: checkPetCaringAsUser
      tags:
        - User
      summary: Check pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetCaringAsUser
      tags:
        - User
      summary: Get pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: adipisci
                pet2:
                  value:
                    pet:
                      name: occaecati
                pet3:
                  value:
                    pet:
                      name: nam
                pet4:
                  value:
                    pet:
                      name: et
                pet5:
                  value:
                    pet:
                      name: animi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetCaringAsUser
      tags:
        - User
      summary: Replace pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: doloribus
              pet2:
                value:
                  name: similique
              pet3:
                value:
                  name: distinctio
              pet4:
                value:
                  name: ut
              pet5:
                value:
                  name: eos
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: dolor
                pet2:
                  value:
                    pet:
                      name: suscipit
                pet3:
                  value:
                    pet:
                      name: sit
                pet4:
                  value:
                    pet:
                      name: ut
                pet5:
                  value:
                    pet:
                      name: minus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetCaringAsUser
      tags:
        - User
      summary: Modify pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: debitis
              pet2:
                value:
                  name: sed
              pet3:
                value:
                  name: repellat
              pet4:
                value:
                  name: voluptas
              pet5:
                value:
                  name: quia
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: laborum
                pet2:
                  value:
                    pet:
                      name: ut
                pet3:
                  value:
                    pet:
                      name: accusamus
                pet4:
                  value:
                    pet:
                      name: quia
                pet5:
                  value:
                    pet:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetCaringAsUser
      tags:
        - User
      summary: Delete pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetOwnerResponse:
      properties:
        ownerId:
          type: string
    PetOwnerRequest:
      properties:
        ownerId:
          type: string
    PetDoctorResponse:
      properties:
        doctorId:
          type: string
    PetDoctorRequest:
      properties:
        doctorId:
          type: string
