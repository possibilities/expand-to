openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users with polymorphic hasMany'
paths:
  /courses:
    get:
      operationId: listCourses
      tags:
        - Courses
      summary: List courses
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 784ee4ef-beda-416d-a35d-f6e2b3bb78ee
                    courses:
                      - name: aperiam
                      - name: non
                      - name: voluptatem
                      - name: facilis
                      - name: repellendus
                      - name: quaerat
                      - name: mollitia
                      - name: rerum
                      - name: ut
                      - name: ut
                      - name: perferendis
                      - name: tempora
                      - name: consequatur
                      - name: debitis
                      - name: voluptas
                      - name: sit
                      - name: et
                      - name: eos
                      - name: praesentium
                      - name: similique
                course2:
                  value:
                    nextPageToken: c178583e-33a5-4843-a65d-ed23796069de
                    courses:
                      - name: consequatur
                      - name: animi
                      - name: dolorum
                      - name: quia
                      - name: reiciendis
                      - name: id
                      - name: voluptatem
                      - name: necessitatibus
                      - name: qui
                      - name: esse
                      - name: earum
                      - name: incidunt
                      - name: rerum
                      - name: reprehenderit
                      - name: quis
                      - name: eligendi
                      - name: voluptatibus
                      - name: corporis
                      - name: omnis
                      - name: inventore
                course3:
                  value:
                    nextPageToken: 72c8b788-330a-4202-80e4-4107b04cf061
                    courses:
                      - name: officia
                      - name: dolores
                      - name: molestiae
                      - name: aut
                      - name: itaque
                      - name: inventore
                      - name: rerum
                      - name: minus
                      - name: pariatur
                      - name: aspernatur
                      - name: aut
                      - name: architecto
                      - name: aut
                      - name: voluptas
                      - name: sit
                      - name: aut
                      - name: laborum
                      - name: est
                      - name: est
                      - name: veritatis
                course4:
                  value:
                    nextPageToken: d48f2689-1afd-42ad-af8a-9687b9eb9396
                    courses:
                      - name: veniam
                      - name: exercitationem
                      - name: facere
                      - name: voluptatem
                      - name: autem
                      - name: a
                      - name: ab
                      - name: rem
                      - name: quo
                      - name: iusto
                      - name: rerum
                      - name: ipsa
                      - name: non
                      - name: neque
                      - name: autem
                      - name: unde
                      - name: deserunt
                      - name: error
                      - name: laboriosam
                      - name: harum
                course5:
                  value:
                    nextPageToken: ea35530b-1614-4cff-add9-75a83d6f678d
                    courses:
                      - name: qui
                      - name: qui
                      - name: aut
                      - name: enim
                      - name: ut
                      - name: reiciendis
                      - name: asperiores
                      - name: corrupti
                      - name: dolor
                      - name: nemo
                      - name: est
                      - name: excepturi
                      - name: dignissimos
                      - name: animi
                      - name: omnis
                      - name: distinctio
                      - name: autem
                      - name: cum
                      - name: vitae
                      - name: ex
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourse
      tags:
        - Courses
      summary: Create course
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: corporis
              course2:
                value:
                  name: voluptatem
              course3:
                value:
                  name: quia
              course4:
                value:
                  name: vel
              course5:
                value:
                  name: rerum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: est
                course2:
                  value:
                    course:
                      name: maiores
                course3:
                  value:
                    course:
                      name: dolor
                course4:
                  value:
                    course:
                      name: itaque
                course5:
                  value:
                    course:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/courses/{courseId}':
    head:
      operationId: checkCourse
      tags:
        - Courses
      summary: Check course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourse
      tags:
        - Courses
      summary: Get course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: sapiente
                course2:
                  value:
                    course:
                      name: sit
                course3:
                  value:
                    course:
                      name: voluptatum
                course4:
                  value:
                    course:
                      name: vel
                course5:
                  value:
                    course:
                      name: voluptas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourse
      tags:
        - Courses
      summary: Replace course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: temporibus
              course2:
                value:
                  name: praesentium
              course3:
                value:
                  name: qui
              course4:
                value:
                  name: et
              course5:
                value:
                  name: vel
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: in
                course2:
                  value:
                    course:
                      name: natus
                course3:
                  value:
                    course:
                      name: reiciendis
                course4:
                  value:
                    course:
                      name: nemo
                course5:
                  value:
                    course:
                      name: magnam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourse
      tags:
        - Courses
      summary: Modify course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: natus
              course2:
                value:
                  name: odio
              course3:
                value:
                  name: qui
              course4:
                value:
                  name: et
              course5:
                value:
                  name: quae
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: dolor
                course2:
                  value:
                    course:
                      name: ab
                course3:
                  value:
                    course:
                      name: repellendus
                course4:
                  value:
                    course:
                      name: nostrum
                course5:
                  value:
                    course:
                      name: ipsum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourse
      tags:
        - Courses
      summary: Delete course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 13a5b79e-d359-4461-8acb-1d317c17a05a
                    users:
                      - name: ex
                      - name: ut
                      - name: et
                      - name: corrupti
                      - name: enim
                      - name: sunt
                      - name: veritatis
                      - name: dolore
                      - name: quaerat
                      - name: omnis
                      - name: est
                      - name: est
                      - name: voluptatem
                      - name: doloribus
                      - name: perferendis
                      - name: dolor
                      - name: provident
                      - name: quidem
                      - name: ipsa
                      - name: et
                user2:
                  value:
                    nextPageToken: 77ffc703-2b53-430b-93a8-44be6c36ee73
                    users:
                      - name: ex
                      - name: sit
                      - name: et
                      - name: qui
                      - name: facilis
                      - name: reprehenderit
                      - name: vel
                      - name: dolor
                      - name: sit
                      - name: aut
                      - name: rerum
                      - name: ex
                      - name: rerum
                      - name: ducimus
                      - name: illo
                      - name: eos
                      - name: porro
                      - name: ea
                      - name: voluptatem
                      - name: aliquam
                user3:
                  value:
                    nextPageToken: 31b048fe-7bdd-4382-a1d6-de91bed142b4
                    users:
                      - name: et
                      - name: provident
                      - name: et
                      - name: temporibus
                      - name: facilis
                      - name: voluptatum
                      - name: sit
                      - name: itaque
                      - name: dolore
                      - name: aut
                      - name: vel
                      - name: ex
                      - name: qui
                      - name: nesciunt
                      - name: et
                      - name: assumenda
                      - name: sit
                      - name: omnis
                      - name: magni
                      - name: non
                user4:
                  value:
                    nextPageToken: f6060a76-b657-4208-a890-ac0f2d8fc5f1
                    users:
                      - name: exercitationem
                      - name: architecto
                      - name: repellat
                      - name: ut
                      - name: illo
                      - name: necessitatibus
                      - name: quos
                      - name: ut
                      - name: magnam
                      - name: dolores
                      - name: pariatur
                      - name: aliquam
                      - name: dolorum
                      - name: a
                      - name: quia
                      - name: optio
                      - name: quaerat
                      - name: omnis
                      - name: reiciendis
                      - name: veniam
                user5:
                  value:
                    nextPageToken: bb26b3e2-af42-41a4-8b17-5ebcb657fd19
                    users:
                      - name: dolorum
                      - name: quis
                      - name: et
                      - name: molestiae
                      - name: quam
                      - name: cumque
                      - name: enim
                      - name: cupiditate
                      - name: odio
                      - name: quo
                      - name: libero
                      - name: tenetur
                      - name: saepe
                      - name: optio
                      - name: in
                      - name: laborum
                      - name: veritatis
                      - name: odio
                      - name: enim
                      - name: rerum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: qui
              user2:
                value:
                  name: beatae
              user3:
                value:
                  name: laudantium
              user4:
                value:
                  name: vitae
              user5:
                value:
                  name: necessitatibus
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: consequatur
                user2:
                  value:
                    user:
                      name: incidunt
                user3:
                  value:
                    user:
                      name: voluptatibus
                user4:
                  value:
                    user:
                      name: ducimus
                user5:
                  value:
                    user:
                      name: eaque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: hic
                user2:
                  value:
                    user:
                      name: optio
                user3:
                  value:
                    user:
                      name: praesentium
                user4:
                  value:
                    user:
                      name: provident
                user5:
                  value:
                    user:
                      name: quas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: consequatur
              user2:
                value:
                  name: quibusdam
              user3:
                value:
                  name: inventore
              user4:
                value:
                  name: quasi
              user5:
                value:
                  name: sequi
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: qui
                user2:
                  value:
                    user:
                      name: voluptatibus
                user3:
                  value:
                    user:
                      name: porro
                user4:
                  value:
                    user:
                      name: soluta
                user5:
                  value:
                    user:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: veniam
              user2:
                value:
                  name: nam
              user3:
                value:
                  name: et
              user4:
                value:
                  name: iure
              user5:
                value:
                  name: quo
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: vel
                user2:
                  value:
                    user:
                      name: eos
                user3:
                  value:
                    user:
                      name: sed
                user4:
                  value:
                    user:
                      name: quia
                user5:
                  value:
                    user:
                      name: enim
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: vel
                user2:
                  value:
                    user:
                      name: vero
                user3:
                  value:
                    user:
                      name: officia
                user4:
                  value:
                    user:
                      name: aut
                user5:
                  value:
                    user:
                      name: inventore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/contributors':
    get:
      operationId: listUserContributors
      tags:
        - Users
      summary: List user contributors
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      userContributors:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    nextPageToken: b29a7fc4-a2ea-43ea-82c5-b9483d63526e
                    userContributors:
                      - contributorId: amet
                      - contributorId: dolor
                      - contributorId: quia
                      - contributorId: reiciendis
                      - contributorId: dolor
                      - contributorId: similique
                      - contributorId: voluptatum
                      - contributorId: aut
                      - contributorId: numquam
                      - contributorId: nobis
                      - contributorId: ipsum
                      - contributorId: impedit
                      - contributorId: rerum
                      - contributorId: doloremque
                      - contributorId: sequi
                      - contributorId: eius
                      - contributorId: labore
                      - contributorId: officiis
                      - contributorId: soluta
                      - contributorId: in
                userContributor2:
                  value:
                    nextPageToken: aea8230a-d99e-4bdc-89b8-7c2be1897ebc
                    userContributors:
                      - contributorId: ut
                      - contributorId: esse
                      - contributorId: exercitationem
                      - contributorId: laudantium
                      - contributorId: accusantium
                      - contributorId: voluptatum
                      - contributorId: voluptas
                      - contributorId: dignissimos
                      - contributorId: perspiciatis
                      - contributorId: id
                      - contributorId: vitae
                      - contributorId: vero
                      - contributorId: nesciunt
                      - contributorId: modi
                      - contributorId: eveniet
                      - contributorId: dolorum
                      - contributorId: suscipit
                      - contributorId: est
                      - contributorId: adipisci
                      - contributorId: doloremque
                userContributor3:
                  value:
                    nextPageToken: f968e732-9a73-4d0c-ac78-21272c5ca5b8
                    userContributors:
                      - contributorId: eos
                      - contributorId: consequatur
                      - contributorId: itaque
                      - contributorId: aliquam
                      - contributorId: omnis
                      - contributorId: ut
                      - contributorId: vel
                      - contributorId: reiciendis
                      - contributorId: nisi
                      - contributorId: expedita
                      - contributorId: corporis
                      - contributorId: ipsa
                      - contributorId: et
                      - contributorId: corrupti
                      - contributorId: et
                      - contributorId: dolore
                      - contributorId: vero
                      - contributorId: qui
                      - contributorId: sed
                      - contributorId: rerum
                userContributor4:
                  value:
                    nextPageToken: 15b6129c-014a-4786-adf5-8e9cc8659d40
                    userContributors:
                      - contributorId: enim
                      - contributorId: ratione
                      - contributorId: et
                      - contributorId: commodi
                      - contributorId: doloribus
                      - contributorId: quae
                      - contributorId: dolores
                      - contributorId: quaerat
                      - contributorId: atque
                      - contributorId: voluptas
                      - contributorId: laboriosam
                      - contributorId: aperiam
                      - contributorId: explicabo
                      - contributorId: aut
                      - contributorId: animi
                      - contributorId: molestiae
                      - contributorId: incidunt
                      - contributorId: eligendi
                      - contributorId: veritatis
                      - contributorId: harum
                userContributor5:
                  value:
                    nextPageToken: b3545d7c-a03d-4939-a809-2cd6c9e636ed
                    userContributors:
                      - contributorId: aut
                      - contributorId: ex
                      - contributorId: dolores
                      - contributorId: ea
                      - contributorId: nostrum
                      - contributorId: cupiditate
                      - contributorId: sint
                      - contributorId: occaecati
                      - contributorId: eos
                      - contributorId: cum
                      - contributorId: in
                      - contributorId: ea
                      - contributorId: id
                      - contributorId: sed
                      - contributorId: voluptatem
                      - contributorId: quia
                      - contributorId: dolor
                      - contributorId: esse
                      - contributorId: repudiandae
                      - contributorId: voluptates
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserContributor
      tags:
        - Users
      summary: Create user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserContributorRequest'
            examples:
              userContributor1:
                value:
                  contributorId: nisi
              userContributor2:
                value:
                  contributorId: ut
              userContributor3:
                value:
                  contributorId: officia
              userContributor4:
                value:
                  contributorId: aut
              userContributor5:
                value:
                  contributorId: assumenda
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: distinctio
                userContributor2:
                  value:
                    userContributor:
                      contributorId: consequuntur
                userContributor3:
                  value:
                    userContributor:
                      contributorId: laudantium
                userContributor4:
                  value:
                    userContributor:
                      contributorId: ad
                userContributor5:
                  value:
                    userContributor:
                      contributorId: ullam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/contributors/{contributorId}':
    head:
      operationId: checkUserContributor
      tags:
        - Users
      summary: Check user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserContributor
      tags:
        - Users
      summary: Get user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: neque
                userContributor2:
                  value:
                    userContributor:
                      contributorId: ut
                userContributor3:
                  value:
                    userContributor:
                      contributorId: non
                userContributor4:
                  value:
                    userContributor:
                      contributorId: est
                userContributor5:
                  value:
                    userContributor:
                      contributorId: incidunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserContributor
      tags:
        - Users
      summary: Replace user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserContributorRequest'
            examples:
              userContributor1:
                value:
                  contributorId: debitis
              userContributor2:
                value:
                  contributorId: accusamus
              userContributor3:
                value:
                  contributorId: eum
              userContributor4:
                value:
                  contributorId: architecto
              userContributor5:
                value:
                  contributorId: nobis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: omnis
                userContributor2:
                  value:
                    userContributor:
                      contributorId: quos
                userContributor3:
                  value:
                    userContributor:
                      contributorId: quo
                userContributor4:
                  value:
                    userContributor:
                      contributorId: voluptates
                userContributor5:
                  value:
                    userContributor:
                      contributorId: tempora
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserContributor
      tags:
        - Users
      summary: Modify user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserContributorRequest'
            examples:
              userContributor1:
                value:
                  contributorId: et
              userContributor2:
                value:
                  contributorId: quia
              userContributor3:
                value:
                  contributorId: laborum
              userContributor4:
                value:
                  contributorId: ab
              userContributor5:
                value:
                  contributorId: neque
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: ut
                userContributor2:
                  value:
                    userContributor:
                      contributorId: voluptatem
                userContributor3:
                  value:
                    userContributor:
                      contributorId: earum
                userContributor4:
                  value:
                    userContributor:
                      contributorId: maxime
                userContributor5:
                  value:
                    userContributor:
                      contributorId: vel
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserContributor
      tags:
        - Users
      summary: Delete user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/contributors:
    get:
      operationId: listContributorsAsUser
      tags:
        - User
      summary: List contributors for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 9418ed37-a9de-4ba8-90cc-ec7db8949615
                    courses:
                      - name: vel
                      - name: recusandae
                      - name: totam
                      - name: fugiat
                      - name: doloribus
                      - name: quis
                      - name: illum
                      - name: quasi
                      - name: adipisci
                      - name: dolor
                      - name: et
                      - name: ea
                      - name: laborum
                      - name: saepe
                      - name: dolores
                      - name: impedit
                      - name: cupiditate
                      - name: magnam
                      - name: rerum
                      - name: deleniti
                course2:
                  value:
                    nextPageToken: 1c3a7e77-b782-4807-91c6-61bcc92760d1
                    courses:
                      - name: dicta
                      - name: cumque
                      - name: odio
                      - name: aut
                      - name: placeat
                      - name: eaque
                      - name: repellat
                      - name: sit
                      - name: excepturi
                      - name: facere
                      - name: ullam
                      - name: placeat
                      - name: id
                      - name: velit
                      - name: vitae
                      - name: illum
                      - name: ipsa
                      - name: earum
                      - name: ab
                      - name: sint
                course3:
                  value:
                    nextPageToken: 2eb35ab7-c437-4612-b56f-daaf11386a35
                    courses:
                      - name: numquam
                      - name: odit
                      - name: molestiae
                      - name: nostrum
                      - name: sequi
                      - name: totam
                      - name: eius
                      - name: repellat
                      - name: dolores
                      - name: numquam
                      - name: atque
                      - name: eum
                      - name: officiis
                      - name: aliquid
                      - name: quibusdam
                      - name: consequatur
                      - name: molestiae
                      - name: voluptatem
                      - name: veniam
                      - name: et
                course4:
                  value:
                    nextPageToken: 8811aa1d-f6d6-45ef-be32-8af79116fd38
                    courses:
                      - name: sed
                      - name: facere
                      - name: sit
                      - name: quos
                      - name: at
                      - name: dolores
                      - name: enim
                      - name: explicabo
                      - name: incidunt
                      - name: aliquid
                      - name: dicta
                      - name: commodi
                      - name: adipisci
                      - name: eligendi
                      - name: accusamus
                      - name: magni
                      - name: nemo
                      - name: doloremque
                      - name: qui
                      - name: vitae
                course5:
                  value:
                    nextPageToken: dae5b155-702b-4859-8e7f-465ee4e30e74
                    courses:
                      - name: enim
                      - name: voluptas
                      - name: aut
                      - name: ab
                      - name: aspernatur
                      - name: officiis
                      - name: minus
                      - name: fuga
                      - name: consectetur
                      - name: ex
                      - name: adipisci
                      - name: facilis
                      - name: quo
                      - name: ut
                      - name: ex
                      - name: necessitatibus
                      - name: repellendus
                      - name: doloremque
                      - name: amet
                      - name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createContributorAsUser
      tags:
        - User
      summary: Create contributor for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: accusamus
              course2:
                value:
                  name: rerum
              course3:
                value:
                  name: impedit
              course4:
                value:
                  name: aut
              course5:
                value:
                  name: vero
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: quaerat
                course2:
                  value:
                    course:
                      name: commodi
                course3:
                  value:
                    course:
                      name: autem
                course4:
                  value:
                    course:
                      name: velit
                course5:
                  value:
                    course:
                      name: labore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/contributors/{contributorId}':
    head:
      operationId: checkContributorAsUser
      tags:
        - User
      summary: Check contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getContributorAsUser
      tags:
        - User
      summary: Get contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: veritatis
                course2:
                  value:
                    course:
                      name: eligendi
                course3:
                  value:
                    course:
                      name: omnis
                course4:
                  value:
                    course:
                      name: et
                course5:
                  value:
                    course:
                      name: ea
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceContributorAsUser
      tags:
        - User
      summary: Replace contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: quo
              course2:
                value:
                  name: et
              course3:
                value:
                  name: perspiciatis
              course4:
                value:
                  name: porro
              course5:
                value:
                  name: quis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: ab
                course2:
                  value:
                    course:
                      name: sapiente
                course3:
                  value:
                    course:
                      name: velit
                course4:
                  value:
                    course:
                      name: illo
                course5:
                  value:
                    course:
                      name: cumque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyContributorAsUser
      tags:
        - User
      summary: Modify contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: et
              course2:
                value:
                  name: iusto
              course3:
                value:
                  name: quo
              course4:
                value:
                  name: itaque
              course5:
                value:
                  name: commodi
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: tenetur
                course2:
                  value:
                    course:
                      name: est
                course3:
                  value:
                    course:
                      name: ut
                course4:
                  value:
                    course:
                      name: rerum
                course5:
                  value:
                    course:
                      name: quas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteContributorAsUser
      tags:
        - User
      summary: Delete contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/learners':
    get:
      operationId: listUserLearners
      tags:
        - Users
      summary: List user learners
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      userLearners:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    nextPageToken: 364189a7-cb39-43b8-9228-69c050cf94bf
                    userLearners:
                      - learnerId: tempore
                      - learnerId: ut
                      - learnerId: quia
                      - learnerId: quis
                      - learnerId: ea
                      - learnerId: qui
                      - learnerId: quo
                      - learnerId: id
                      - learnerId: officiis
                      - learnerId: quia
                      - learnerId: cum
                      - learnerId: sed
                      - learnerId: assumenda
                      - learnerId: exercitationem
                      - learnerId: et
                      - learnerId: itaque
                      - learnerId: voluptatum
                      - learnerId: laboriosam
                      - learnerId: error
                      - learnerId: placeat
                userLearner2:
                  value:
                    nextPageToken: b30f367c-c783-4114-83d7-672b32c3fa19
                    userLearners:
                      - learnerId: rem
                      - learnerId: minus
                      - learnerId: omnis
                      - learnerId: ratione
                      - learnerId: rerum
                      - learnerId: eaque
                      - learnerId: aliquam
                      - learnerId: dolore
                      - learnerId: sed
                      - learnerId: sed
                      - learnerId: fuga
                      - learnerId: sunt
                      - learnerId: quo
                      - learnerId: odit
                      - learnerId: sed
                      - learnerId: iste
                      - learnerId: eius
                      - learnerId: qui
                      - learnerId: perspiciatis
                      - learnerId: iure
                userLearner3:
                  value:
                    nextPageToken: 7f8cc7bb-1307-4006-a223-110ae9973125
                    userLearners:
                      - learnerId: laudantium
                      - learnerId: reprehenderit
                      - learnerId: blanditiis
                      - learnerId: voluptas
                      - learnerId: magnam
                      - learnerId: nobis
                      - learnerId: ipsam
                      - learnerId: dicta
                      - learnerId: dolores
                      - learnerId: hic
                      - learnerId: consectetur
                      - learnerId: aperiam
                      - learnerId: magni
                      - learnerId: reprehenderit
                      - learnerId: eius
                      - learnerId: quis
                      - learnerId: similique
                      - learnerId: suscipit
                      - learnerId: veritatis
                      - learnerId: reiciendis
                userLearner4:
                  value:
                    nextPageToken: 9bb5d0e6-7997-4915-abb3-b1d683a12730
                    userLearners:
                      - learnerId: qui
                      - learnerId: iure
                      - learnerId: dolores
                      - learnerId: doloremque
                      - learnerId: tempore
                      - learnerId: aut
                      - learnerId: ut
                      - learnerId: dicta
                      - learnerId: explicabo
                      - learnerId: sit
                      - learnerId: ullam
                      - learnerId: sequi
                      - learnerId: dolores
                      - learnerId: ut
                      - learnerId: officia
                      - learnerId: ad
                      - learnerId: ab
                      - learnerId: tempore
                      - learnerId: nesciunt
                      - learnerId: non
                userLearner5:
                  value:
                    nextPageToken: 85372505-99d0-4874-9007-1652fa307d35
                    userLearners:
                      - learnerId: nesciunt
                      - learnerId: qui
                      - learnerId: voluptas
                      - learnerId: consectetur
                      - learnerId: omnis
                      - learnerId: officia
                      - learnerId: sunt
                      - learnerId: rerum
                      - learnerId: a
                      - learnerId: deleniti
                      - learnerId: voluptas
                      - learnerId: deleniti
                      - learnerId: et
                      - learnerId: repellat
                      - learnerId: et
                      - learnerId: quia
                      - learnerId: qui
                      - learnerId: accusantium
                      - learnerId: eveniet
                      - learnerId: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserLearner
      tags:
        - Users
      summary: Create user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLearnerRequest'
            examples:
              userLearner1:
                value:
                  learnerId: iusto
              userLearner2:
                value:
                  learnerId: dolorem
              userLearner3:
                value:
                  learnerId: doloribus
              userLearner4:
                value:
                  learnerId: velit
              userLearner5:
                value:
                  learnerId: sunt
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: ratione
                userLearner2:
                  value:
                    userLearner:
                      learnerId: est
                userLearner3:
                  value:
                    userLearner:
                      learnerId: consequuntur
                userLearner4:
                  value:
                    userLearner:
                      learnerId: officia
                userLearner5:
                  value:
                    userLearner:
                      learnerId: dolore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/learners/{learnerId}':
    head:
      operationId: checkUserLearner
      tags:
        - Users
      summary: Check user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserLearner
      tags:
        - Users
      summary: Get user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: rerum
                userLearner2:
                  value:
                    userLearner:
                      learnerId: dicta
                userLearner3:
                  value:
                    userLearner:
                      learnerId: adipisci
                userLearner4:
                  value:
                    userLearner:
                      learnerId: impedit
                userLearner5:
                  value:
                    userLearner:
                      learnerId: veritatis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserLearner
      tags:
        - Users
      summary: Replace user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLearnerRequest'
            examples:
              userLearner1:
                value:
                  learnerId: totam
              userLearner2:
                value:
                  learnerId: sed
              userLearner3:
                value:
                  learnerId: quis
              userLearner4:
                value:
                  learnerId: molestiae
              userLearner5:
                value:
                  learnerId: consequatur
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: voluptates
                userLearner2:
                  value:
                    userLearner:
                      learnerId: pariatur
                userLearner3:
                  value:
                    userLearner:
                      learnerId: explicabo
                userLearner4:
                  value:
                    userLearner:
                      learnerId: nobis
                userLearner5:
                  value:
                    userLearner:
                      learnerId: tempore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserLearner
      tags:
        - Users
      summary: Modify user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLearnerRequest'
            examples:
              userLearner1:
                value:
                  learnerId: eaque
              userLearner2:
                value:
                  learnerId: iste
              userLearner3:
                value:
                  learnerId: culpa
              userLearner4:
                value:
                  learnerId: dolor
              userLearner5:
                value:
                  learnerId: laudantium
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: cum
                userLearner2:
                  value:
                    userLearner:
                      learnerId: ipsum
                userLearner3:
                  value:
                    userLearner:
                      learnerId: incidunt
                userLearner4:
                  value:
                    userLearner:
                      learnerId: occaecati
                userLearner5:
                  value:
                    userLearner:
                      learnerId: quis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserLearner
      tags:
        - Users
      summary: Delete user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/learners:
    get:
      operationId: listLearnersAsUser
      tags:
        - User
      summary: List learners for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 9afed342-9afe-4717-87af-087a8cb18721
                    courses:
                      - name: veniam
                      - name: qui
                      - name: ducimus
                      - name: sed
                      - name: suscipit
                      - name: enim
                      - name: earum
                      - name: atque
                      - name: praesentium
                      - name: sunt
                      - name: illo
                      - name: quod
                      - name: non
                      - name: nisi
                      - name: dolorem
                      - name: iusto
                      - name: sequi
                      - name: dicta
                      - name: officiis
                      - name: minus
                course2:
                  value:
                    nextPageToken: e3734006-90c3-4da3-aee7-b0fd72c0a542
                    courses:
                      - name: non
                      - name: aut
                      - name: quos
                      - name: voluptatibus
                      - name: eos
                      - name: aut
                      - name: velit
                      - name: et
                      - name: est
                      - name: soluta
                      - name: ad
                      - name: repudiandae
                      - name: ut
                      - name: quisquam
                      - name: et
                      - name: possimus
                      - name: facere
                      - name: dolores
                      - name: iure
                      - name: culpa
                course3:
                  value:
                    nextPageToken: 60b0d5d7-31ea-4d9e-bc00-aafc19ffd2e6
                    courses:
                      - name: inventore
                      - name: vel
                      - name: est
                      - name: cupiditate
                      - name: qui
                      - name: et
                      - name: deserunt
                      - name: aut
                      - name: praesentium
                      - name: labore
                      - name: dolores
                      - name: quo
                      - name: harum
                      - name: quia
                      - name: sunt
                      - name: a
                      - name: iure
                      - name: repudiandae
                      - name: excepturi
                      - name: cumque
                course4:
                  value:
                    nextPageToken: 85cf2e3f-a4a2-4152-b3a9-7fcbe64db83c
                    courses:
                      - name: voluptas
                      - name: perspiciatis
                      - name: quia
                      - name: soluta
                      - name: commodi
                      - name: quibusdam
                      - name: commodi
                      - name: soluta
                      - name: dolorem
                      - name: saepe
                      - name: rerum
                      - name: voluptatem
                      - name: rerum
                      - name: id
                      - name: voluptas
                      - name: repellendus
                      - name: modi
                      - name: quis
                      - name: dolor
                      - name: totam
                course5:
                  value:
                    nextPageToken: 630a53cd-7687-4989-8a23-9e6f368f5eb5
                    courses:
                      - name: magni
                      - name: aut
                      - name: numquam
                      - name: id
                      - name: velit
                      - name: atque
                      - name: reiciendis
                      - name: ut
                      - name: vel
                      - name: repellat
                      - name: autem
                      - name: sed
                      - name: maiores
                      - name: nesciunt
                      - name: assumenda
                      - name: similique
                      - name: ea
                      - name: sed
                      - name: non
                      - name: corrupti
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createLearnerAsUser
      tags:
        - User
      summary: Create learner for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: molestiae
              course2:
                value:
                  name: libero
              course3:
                value:
                  name: rerum
              course4:
                value:
                  name: sint
              course5:
                value:
                  name: provident
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: quidem
                course2:
                  value:
                    course:
                      name: officiis
                course3:
                  value:
                    course:
                      name: quaerat
                course4:
                  value:
                    course:
                      name: odit
                course5:
                  value:
                    course:
                      name: ex
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/learners/{learnerId}':
    head:
      operationId: checkLearnerAsUser
      tags:
        - User
      summary: Check learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getLearnerAsUser
      tags:
        - User
      summary: Get learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: occaecati
                course2:
                  value:
                    course:
                      name: aliquid
                course3:
                  value:
                    course:
                      name: est
                course4:
                  value:
                    course:
                      name: consequatur
                course5:
                  value:
                    course:
                      name: consectetur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceLearnerAsUser
      tags:
        - User
      summary: Replace learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: sequi
              course2:
                value:
                  name: iusto
              course3:
                value:
                  name: nam
              course4:
                value:
                  name: laboriosam
              course5:
                value:
                  name: consequatur
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: harum
                course2:
                  value:
                    course:
                      name: non
                course3:
                  value:
                    course:
                      name: tempore
                course4:
                  value:
                    course:
                      name: voluptas
                course5:
                  value:
                    course:
                      name: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyLearnerAsUser
      tags:
        - User
      summary: Modify learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: fuga
              course2:
                value:
                  name: mollitia
              course3:
                value:
                  name: rerum
              course4:
                value:
                  name: magni
              course5:
                value:
                  name: est
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: illum
                course2:
                  value:
                    course:
                      name: ea
                course3:
                  value:
                    course:
                      name: eum
                course4:
                  value:
                    course:
                      name: molestiae
                course5:
                  value:
                    course:
                      name: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteLearnerAsUser
      tags:
        - User
      summary: Delete learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    CourseResponse:
      properties:
        name:
          type: string
    CourseRequest:
      properties:
        name:
          type: string
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    UserContributorResponse:
      properties:
        contributorId:
          type: string
    UserContributorRequest:
      properties:
        contributorId:
          type: string
    UserLearnerResponse:
      properties:
        learnerId:
          type: string
    UserLearnerRequest:
      properties:
        learnerId:
          type: string
