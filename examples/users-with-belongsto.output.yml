openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users with belongsTo'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: a127fae8-e4ed-4e0a-8b92-1e4d1b37bd46
                    users:
                      - name: officia
                      - name: nihil
                      - name: repudiandae
                      - name: adipisci
                      - name: tempore
                      - name: ut
                      - name: nam
                      - name: quae
                      - name: laborum
                      - name: soluta
                      - name: magnam
                      - name: in
                      - name: est
                      - name: praesentium
                      - name: est
                      - name: velit
                      - name: est
                      - name: non
                      - name: quo
                      - name: ea
                user2:
                  value:
                    nextPageToken: 274917b7-3e60-49fe-b82c-e505e93c36da
                    users:
                      - name: harum
                      - name: repudiandae
                      - name: laborum
                      - name: sit
                      - name: minus
                      - name: est
                      - name: ut
                      - name: iste
                      - name: rerum
                      - name: quibusdam
                      - name: dolorem
                      - name: est
                      - name: sed
                      - name: voluptatem
                      - name: aut
                      - name: aut
                      - name: voluptatem
                      - name: voluptatem
                      - name: laudantium
                      - name: provident
                user3:
                  value:
                    nextPageToken: 58aed5f1-3227-4f4d-8586-bffbf7b575d0
                    users:
                      - name: pariatur
                      - name: quod
                      - name: consequuntur
                      - name: quaerat
                      - name: inventore
                      - name: sit
                      - name: a
                      - name: veniam
                      - name: beatae
                      - name: rerum
                      - name: cumque
                      - name: magnam
                      - name: autem
                      - name: ea
                      - name: laboriosam
                      - name: repudiandae
                      - name: omnis
                      - name: ipsam
                      - name: molestiae
                      - name: rerum
                user4:
                  value:
                    nextPageToken: f3e5c8d3-9cb7-4a50-89bc-7e87c6f87dd2
                    users:
                      - name: dicta
                      - name: corporis
                      - name: dolorem
                      - name: optio
                      - name: repudiandae
                      - name: ut
                      - name: cumque
                      - name: sit
                      - name: explicabo
                      - name: velit
                      - name: et
                      - name: sint
                      - name: facilis
                      - name: aliquam
                      - name: corporis
                      - name: neque
                      - name: et
                      - name: laudantium
                      - name: incidunt
                      - name: consectetur
                user5:
                  value:
                    nextPageToken: f57944bb-eee4-4db8-9b3f-43a9de6829db
                    users:
                      - name: modi
                      - name: consequatur
                      - name: qui
                      - name: omnis
                      - name: ipsa
                      - name: explicabo
                      - name: rerum
                      - name: ut
                      - name: nihil
                      - name: ea
                      - name: odio
                      - name: ut
                      - name: voluptatem
                      - name: consequatur
                      - name: eveniet
                      - name: vel
                      - name: nisi
                      - name: ducimus
                      - name: molestiae
                      - name: porro
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: est
              user2:
                value:
                  name: laborum
              user3:
                value:
                  name: nostrum
              user4:
                value:
                  name: cumque
              user5:
                value:
                  name: dignissimos
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: et
                user2:
                  value:
                    user:
                      name: reprehenderit
                user3:
                  value:
                    user:
                      name: perspiciatis
                user4:
                  value:
                    user:
                      name: doloremque
                user5:
                  value:
                    user:
                      name: dicta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: fuga
                user2:
                  value:
                    user:
                      name: assumenda
                user3:
                  value:
                    user:
                      name: iusto
                user4:
                  value:
                    user:
                      name: neque
                user5:
                  value:
                    user:
                      name: quo
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: non
              user2:
                value:
                  name: non
              user3:
                value:
                  name: est
              user4:
                value:
                  name: ad
              user5:
                value:
                  name: accusamus
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: occaecati
                user2:
                  value:
                    user:
                      name: nulla
                user3:
                  value:
                    user:
                      name: veniam
                user4:
                  value:
                    user:
                      name: voluptates
                user5:
                  value:
                    user:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: voluptas
              user2:
                value:
                  name: quibusdam
              user3:
                value:
                  name: id
              user4:
                value:
                  name: aut
              user5:
                value:
                  name: voluptatum
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: libero
                user2:
                  value:
                    user:
                      name: unde
                user3:
                  value:
                    user:
                      name: recusandae
                user4:
                  value:
                    user:
                      name: quia
                user5:
                  value:
                    user:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses':
    get:
      operationId: listUserCourses
      tags:
        - Users
      summary: List user courses
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 6a31940f-cf16-4242-8e56-c6503df19975
                    courses:
                      - name: ipsam
                      - name: voluptatem
                      - name: voluptate
                      - name: voluptatem
                      - name: et
                      - name: mollitia
                      - name: ipsa
                      - name: nemo
                      - name: quis
                      - name: veniam
                      - name: et
                      - name: et
                      - name: sunt
                      - name: alias
                      - name: perferendis
                      - name: est
                      - name: nobis
                      - name: quisquam
                      - name: sit
                      - name: ducimus
                course2:
                  value:
                    nextPageToken: 714f9209-e97c-4599-9225-b2fde4c9c96c
                    courses:
                      - name: dolorum
                      - name: minus
                      - name: ab
                      - name: et
                      - name: molestiae
                      - name: quas
                      - name: dolorum
                      - name: in
                      - name: quasi
                      - name: eveniet
                      - name: atque
                      - name: qui
                      - name: hic
                      - name: rerum
                      - name: quasi
                      - name: eaque
                      - name: eveniet
                      - name: numquam
                      - name: non
                      - name: laudantium
                course3:
                  value:
                    nextPageToken: ac0652f6-81f4-4077-a5c1-893658a904f8
                    courses:
                      - name: et
                      - name: ullam
                      - name: cumque
                      - name: aut
                      - name: repellendus
                      - name: rerum
                      - name: reprehenderit
                      - name: quibusdam
                      - name: laborum
                      - name: qui
                      - name: alias
                      - name: mollitia
                      - name: et
                      - name: reprehenderit
                      - name: dolorum
                      - name: architecto
                      - name: et
                      - name: quo
                      - name: illo
                      - name: ipsa
                course4:
                  value:
                    nextPageToken: 6bd71ed2-03db-455b-9d66-5bf17b80a2f0
                    courses:
                      - name: autem
                      - name: odit
                      - name: exercitationem
                      - name: ut
                      - name: illo
                      - name: aperiam
                      - name: nihil
                      - name: minima
                      - name: pariatur
                      - name: dolores
                      - name: dolorem
                      - name: aliquam
                      - name: nihil
                      - name: ut
                      - name: et
                      - name: explicabo
                      - name: enim
                      - name: laborum
                      - name: rem
                      - name: earum
                course5:
                  value:
                    nextPageToken: 4903707f-5d78-40d1-83a0-c11bb46c5c8e
                    courses:
                      - name: non
                      - name: consequatur
                      - name: aut
                      - name: qui
                      - name: officiis
                      - name: est
                      - name: beatae
                      - name: earum
                      - name: quasi
                      - name: alias
                      - name: voluptatem
                      - name: enim
                      - name: culpa
                      - name: tempore
                      - name: ex
                      - name: rerum
                      - name: quam
                      - name: molestiae
                      - name: sint
                      - name: temporibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserCourse
      tags:
        - Users
      summary: Create user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: est
              course2:
                value:
                  name: repellendus
              course3:
                value:
                  name: aut
              course4:
                value:
                  name: numquam
              course5:
                value:
                  name: ut
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: illum
                course2:
                  value:
                    course:
                      name: non
                course3:
                  value:
                    course:
                      name: quod
                course4:
                  value:
                    course:
                      name: nostrum
                course5:
                  value:
                    course:
                      name: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses/{courseId}':
    head:
      operationId: checkUserCourse
      tags:
        - Users
      summary: Check user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserCourse
      tags:
        - Users
      summary: Get user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: in
                course2:
                  value:
                    course:
                      name: architecto
                course3:
                  value:
                    course:
                      name: ipsam
                course4:
                  value:
                    course:
                      name: reprehenderit
                course5:
                  value:
                    course:
                      name: rerum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserCourse
      tags:
        - Users
      summary: Replace user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: sed
              course2:
                value:
                  name: labore
              course3:
                value:
                  name: sequi
              course4:
                value:
                  name: aut
              course5:
                value:
                  name: corporis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: ipsum
                course2:
                  value:
                    course:
                      name: similique
                course3:
                  value:
                    course:
                      name: non
                course4:
                  value:
                    course:
                      name: corrupti
                course5:
                  value:
                    course:
                      name: rem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserCourse
      tags:
        - Users
      summary: Modify user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: rerum
              course2:
                value:
                  name: quis
              course3:
                value:
                  name: rerum
              course4:
                value:
                  name: qui
              course5:
                value:
                  name: earum
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: et
                course2:
                  value:
                    course:
                      name: reiciendis
                course3:
                  value:
                    course:
                      name: repudiandae
                course4:
                  value:
                    course:
                      name: architecto
                course5:
                  value:
                    course:
                      name: quibusdam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserCourse
      tags:
        - Users
      summary: Delete user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: modi
                user2:
                  value:
                    user:
                      name: atque
                user3:
                  value:
                    user:
                      name: temporibus
                user4:
                  value:
                    user:
                      name: fuga
                user5:
                  value:
                    user:
                      name: cum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/courses:
    get:
      operationId: listCoursesAsUser
      tags:
        - User
      summary: List courses for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 3ec4342c-faeb-40c8-80f6-1081b13f12b3
                    courses:
                      - name: aspernatur
                      - name: laudantium
                      - name: dolorem
                      - name: nulla
                      - name: vel
                      - name: eveniet
                      - name: possimus
                      - name: nam
                      - name: non
                      - name: ipsa
                      - name: voluptates
                      - name: dolores
                      - name: maiores
                      - name: enim
                      - name: fugiat
                      - name: est
                      - name: aliquid
                      - name: quisquam
                      - name: maiores
                      - name: aut
                course2:
                  value:
                    nextPageToken: d078bc03-7f9d-4787-bac7-bf02b97410bf
                    courses:
                      - name: eligendi
                      - name: et
                      - name: neque
                      - name: dolores
                      - name: voluptatem
                      - name: similique
                      - name: impedit
                      - name: omnis
                      - name: eligendi
                      - name: reiciendis
                      - name: sapiente
                      - name: ea
                      - name: voluptates
                      - name: perspiciatis
                      - name: provident
                      - name: totam
                      - name: doloribus
                      - name: nemo
                      - name: aut
                      - name: rerum
                course3:
                  value:
                    nextPageToken: 39141010-df7f-4ac6-b302-ac3dd1323a77
                    courses:
                      - name: quos
                      - name: voluptatem
                      - name: et
                      - name: voluptas
                      - name: veniam
                      - name: omnis
                      - name: nisi
                      - name: quod
                      - name: sed
                      - name: incidunt
                      - name: quia
                      - name: accusamus
                      - name: modi
                      - name: rem
                      - name: blanditiis
                      - name: perspiciatis
                      - name: cumque
                      - name: dolores
                      - name: labore
                      - name: laborum
                course4:
                  value:
                    nextPageToken: 4e683d7a-034c-44a7-9315-5f1c2bde8b64
                    courses:
                      - name: ullam
                      - name: saepe
                      - name: necessitatibus
                      - name: soluta
                      - name: totam
                      - name: nesciunt
                      - name: dolores
                      - name: accusamus
                      - name: aliquam
                      - name: rerum
                      - name: voluptatem
                      - name: dolore
                      - name: veritatis
                      - name: laudantium
                      - name: suscipit
                      - name: laboriosam
                      - name: amet
                      - name: voluptas
                      - name: sunt
                      - name: laboriosam
                course5:
                  value:
                    nextPageToken: 252cf41d-5d2e-442b-9536-d44763ad0d54
                    courses:
                      - name: maxime
                      - name: impedit
                      - name: quia
                      - name: sunt
                      - name: possimus
                      - name: facilis
                      - name: ratione
                      - name: et
                      - name: ea
                      - name: fuga
                      - name: deserunt
                      - name: sunt
                      - name: ex
                      - name: quibusdam
                      - name: qui
                      - name: qui
                      - name: magnam
                      - name: similique
                      - name: sint
                      - name: hic
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourseAsUser
      tags:
        - User
      summary: Create course for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: suscipit
              course2:
                value:
                  name: sapiente
              course3:
                value:
                  name: quae
              course4:
                value:
                  name: dicta
              course5:
                value:
                  name: qui
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: eligendi
                course2:
                  value:
                    course:
                      name: et
                course3:
                  value:
                    course:
                      name: cumque
                course4:
                  value:
                    course:
                      name: ad
                course5:
                  value:
                    course:
                      name: sed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/courses/{courseId}':
    head:
      operationId: checkCourseAsUser
      tags:
        - User
      summary: Check course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourseAsUser
      tags:
        - User
      summary: Get course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: iste
                course2:
                  value:
                    course:
                      name: voluptas
                course3:
                  value:
                    course:
                      name: qui
                course4:
                  value:
                    course:
                      name: ut
                course5:
                  value:
                    course:
                      name: mollitia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourseAsUser
      tags:
        - User
      summary: Replace course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: doloribus
              course2:
                value:
                  name: totam
              course3:
                value:
                  name: iste
              course4:
                value:
                  name: deserunt
              course5:
                value:
                  name: voluptates
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: aliquid
                course2:
                  value:
                    course:
                      name: dolorem
                course3:
                  value:
                    course:
                      name: voluptas
                course4:
                  value:
                    course:
                      name: explicabo
                course5:
                  value:
                    course:
                      name: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourseAsUser
      tags:
        - User
      summary: Modify course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: sint
              course2:
                value:
                  name: corporis
              course3:
                value:
                  name: ea
              course4:
                value:
                  name: necessitatibus
              course5:
                value:
                  name: excepturi
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: et
                course2:
                  value:
                    course:
                      name: et
                course3:
                  value:
                    course:
                      name: non
                course4:
                  value:
                    course:
                      name: hic
                course5:
                  value:
                    course:
                      name: error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourseAsUser
      tags:
        - User
      summary: Delete course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    CourseResponse:
      properties:
        name:
          type: string
    CourseRequest:
      properties:
        name:
          type: string
