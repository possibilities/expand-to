openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 5975beaa-93a5-4bfc-8c26-78ca046096e0
                    users:
                      - name: alias
                      - name: molestiae
                      - name: sit
                      - name: et
                      - name: sequi
                      - name: numquam
                      - name: quod
                      - name: pariatur
                      - name: inventore
                      - name: non
                      - name: aut
                      - name: velit
                      - name: laboriosam
                      - name: laudantium
                      - name: earum
                      - name: voluptatem
                      - name: quod
                      - name: omnis
                      - name: porro
                      - name: vel
                user2:
                  value:
                    nextPageToken: 17fa0cab-ffce-477b-9c06-d82c7c3ef95e
                    users:
                      - name: velit
                      - name: aut
                      - name: optio
                      - name: id
                      - name: tempora
                      - name: dolores
                      - name: qui
                      - name: accusantium
                      - name: quis
                      - name: quo
                      - name: incidunt
                      - name: ad
                      - name: nostrum
                      - name: quia
                      - name: ut
                      - name: eaque
                      - name: beatae
                      - name: modi
                      - name: excepturi
                      - name: omnis
                user3:
                  value:
                    nextPageToken: 19ead553-5a3e-4124-93e0-e15b746cbaf1
                    users:
                      - name: magni
                      - name: nostrum
                      - name: magni
                      - name: tempora
                      - name: maxime
                      - name: quas
                      - name: quae
                      - name: laudantium
                      - name: omnis
                      - name: molestiae
                      - name: libero
                      - name: vero
                      - name: qui
                      - name: quia
                      - name: corrupti
                      - name: animi
                      - name: eos
                      - name: culpa
                      - name: eaque
                      - name: consequatur
                user4:
                  value:
                    nextPageToken: ba0a68b8-f5ac-4946-a92d-281241eab58f
                    users:
                      - name: animi
                      - name: vero
                      - name: animi
                      - name: deleniti
                      - name: aut
                      - name: quia
                      - name: dolorem
                      - name: aut
                      - name: velit
                      - name: a
                      - name: aliquid
                      - name: voluptate
                      - name: nihil
                      - name: possimus
                      - name: neque
                      - name: aperiam
                      - name: recusandae
                      - name: voluptas
                      - name: non
                      - name: adipisci
                user5:
                  value:
                    nextPageToken: 82a50a65-538a-4b36-b3db-f36ebab273bc
                    users:
                      - name: accusantium
                      - name: quibusdam
                      - name: harum
                      - name: sunt
                      - name: praesentium
                      - name: sint
                      - name: mollitia
                      - name: ducimus
                      - name: necessitatibus
                      - name: et
                      - name: illo
                      - name: rerum
                      - name: et
                      - name: aut
                      - name: vel
                      - name: ipsum
                      - name: ipsa
                      - name: possimus
                      - name: iure
                      - name: sunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: assumenda
              user2:
                value:
                  name: facere
              user3:
                value:
                  name: est
              user4:
                value:
                  name: illum
              user5:
                value:
                  name: itaque
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: eos
                user2:
                  value:
                    user:
                      name: quis
                user3:
                  value:
                    user:
                      name: aperiam
                user4:
                  value:
                    user:
                      name: est
                user5:
                  value:
                    user:
                      name: asperiores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: est
                user2:
                  value:
                    user:
                      name: ullam
                user3:
                  value:
                    user:
                      name: eius
                user4:
                  value:
                    user:
                      name: dolorem
                user5:
                  value:
                    user:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: doloribus
              user2:
                value:
                  name: nesciunt
              user3:
                value:
                  name: sequi
              user4:
                value:
                  name: quis
              user5:
                value:
                  name: aliquid
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: deserunt
                user2:
                  value:
                    user:
                      name: autem
                user3:
                  value:
                    user:
                      name: alias
                user4:
                  value:
                    user:
                      name: quo
                user5:
                  value:
                    user:
                      name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: ad
              user2:
                value:
                  name: excepturi
              user3:
                value:
                  name: rerum
              user4:
                value:
                  name: cum
              user5:
                value:
                  name: incidunt
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: omnis
                user2:
                  value:
                    user:
                      name: est
                user3:
                  value:
                    user:
                      name: dolor
                user4:
                  value:
                    user:
                      name: sint
                user5:
                  value:
                    user:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: ad
                user2:
                  value:
                    user:
                      name: suscipit
                user3:
                  value:
                    user:
                      name: saepe
                user4:
                  value:
                    user:
                      name: quibusdam
                user5:
                  value:
                    user:
                      name: ea
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
