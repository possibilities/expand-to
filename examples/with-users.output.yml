openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: with users'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: f1d634de-af6d-428c-b72c-25909625f66c
                    users:
                      - name: exercitationem
                      - name: deleniti
                      - name: vel
                      - name: eligendi
                      - name: voluptas
                      - name: aut
                      - name: velit
                      - name: sint
                      - name: totam
                      - name: nobis
                      - name: doloribus
                      - name: voluptatem
                      - name: vero
                      - name: nulla
                      - name: voluptas
                      - name: sit
                      - name: molestiae
                      - name: nobis
                      - name: dolorum
                      - name: illo
                user2:
                  value:
                    nextPageToken: 62c7e8b4-d567-4a73-b201-95b3b91f9eb9
                    users:
                      - name: alias
                      - name: quis
                      - name: autem
                      - name: unde
                      - name: aspernatur
                      - name: veniam
                      - name: laboriosam
                      - name: vel
                      - name: voluptatem
                      - name: veritatis
                      - name: suscipit
                      - name: totam
                      - name: facilis
                      - name: ea
                      - name: sed
                      - name: et
                      - name: vitae
                      - name: voluptatem
                      - name: perferendis
                      - name: impedit
                user3:
                  value:
                    nextPageToken: 5bd706fa-4f87-468d-94b5-2e05db4a4048
                    users:
                      - name: odio
                      - name: ex
                      - name: nam
                      - name: quam
                      - name: quisquam
                      - name: illo
                      - name: sunt
                      - name: qui
                      - name: repellat
                      - name: repellat
                      - name: sapiente
                      - name: iure
                      - name: sint
                      - name: veritatis
                      - name: magnam
                      - name: saepe
                      - name: ullam
                      - name: sapiente
                      - name: reiciendis
                      - name: odit
                user4:
                  value:
                    nextPageToken: 87a0e555-09f8-4c8d-8914-e4f8d5ef22e7
                    users:
                      - name: repellat
                      - name: quasi
                      - name: magnam
                      - name: praesentium
                      - name: quidem
                      - name: dicta
                      - name: at
                      - name: reiciendis
                      - name: quia
                      - name: occaecati
                      - name: qui
                      - name: quisquam
                      - name: soluta
                      - name: nostrum
                      - name: non
                      - name: accusantium
                      - name: sunt
                      - name: rerum
                      - name: labore
                      - name: et
                user5:
                  value:
                    nextPageToken: 2476f247-b6be-4508-936f-d8450f080022
                    users:
                      - name: hic
                      - name: pariatur
                      - name: velit
                      - name: eligendi
                      - name: quo
                      - name: quia
                      - name: temporibus
                      - name: nostrum
                      - name: voluptate
                      - name: rerum
                      - name: dolores
                      - name: ut
                      - name: minima
                      - name: eos
                      - name: exercitationem
                      - name: dolor
                      - name: aut
                      - name: nihil
                      - name: hic
                      - name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: pariatur
              user2:
                value:
                  name: qui
              user3:
                value:
                  name: et
              user4:
                value:
                  name: ut
              user5:
                value:
                  name: nesciunt
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: laudantium
                user2:
                  value:
                    user:
                      name: reiciendis
                user3:
                  value:
                    user:
                      name: porro
                user4:
                  value:
                    user:
                      name: recusandae
                user5:
                  value:
                    user:
                      name: dolorum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: ea
                user2:
                  value:
                    user:
                      name: eos
                user3:
                  value:
                    user:
                      name: sunt
                user4:
                  value:
                    user:
                      name: maxime
                user5:
                  value:
                    user:
                      name: deserunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: est
              user2:
                value:
                  name: error
              user3:
                value:
                  name: corrupti
              user4:
                value:
                  name: sunt
              user5:
                value:
                  name: sit
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: distinctio
                user2:
                  value:
                    user:
                      name: nulla
                user3:
                  value:
                    user:
                      name: laudantium
                user4:
                  value:
                    user:
                      name: beatae
                user5:
                  value:
                    user:
                      name: quod
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: veniam
              user2:
                value:
                  name: qui
              user3:
                value:
                  name: et
              user4:
                value:
                  name: sed
              user5:
                value:
                  name: odit
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: blanditiis
                user2:
                  value:
                    user:
                      name: est
                user3:
                  value:
                    user:
                      name: inventore
                user4:
                  value:
                    user:
                      name: voluptatem
                user5:
                  value:
                    user:
                      name: atque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 05c884a9-20aa-4503-8fd9-3b5ba27ca999
                    pets:
                      - name: animi
                      - name: tenetur
                      - name: est
                      - name: quidem
                      - name: nihil
                      - name: ullam
                      - name: reprehenderit
                      - name: fugit
                      - name: dolor
                      - name: cupiditate
                      - name: vel
                      - name: esse
                      - name: ipsa
                      - name: inventore
                      - name: quisquam
                      - name: ut
                      - name: asperiores
                      - name: consequatur
                      - name: sint
                      - name: molestiae
                pet2:
                  value:
                    nextPageToken: 1c7330ff-49c6-41f9-8686-9911f63c3457
                    pets:
                      - name: hic
                      - name: quia
                      - name: assumenda
                      - name: neque
                      - name: vero
                      - name: omnis
                      - name: quas
                      - name: ipsa
                      - name: et
                      - name: consequuntur
                      - name: eum
                      - name: nemo
                      - name: maiores
                      - name: repellat
                      - name: libero
                      - name: qui
                      - name: quia
                      - name: rerum
                      - name: eius
                      - name: vel
                pet3:
                  value:
                    nextPageToken: 6098d386-5518-433d-b106-170252d3a538
                    pets:
                      - name: est
                      - name: libero
                      - name: et
                      - name: nesciunt
                      - name: facere
                      - name: facilis
                      - name: animi
                      - name: vitae
                      - name: ut
                      - name: itaque
                      - name: deserunt
                      - name: excepturi
                      - name: voluptatibus
                      - name: dolorem
                      - name: quia
                      - name: aut
                      - name: nulla
                      - name: fugiat
                      - name: quae
                      - name: fugit
                pet4:
                  value:
                    nextPageToken: dbb23614-c2fd-4710-a44c-6eb4e5fd0344
                    pets:
                      - name: quos
                      - name: qui
                      - name: quibusdam
                      - name: similique
                      - name: inventore
                      - name: eaque
                      - name: non
                      - name: animi
                      - name: occaecati
                      - name: sed
                      - name: culpa
                      - name: officia
                      - name: sit
                      - name: molestias
                      - name: dignissimos
                      - name: omnis
                      - name: ut
                      - name: atque
                      - name: unde
                      - name: ut
                pet5:
                  value:
                    nextPageToken: faa41406-7037-46e3-b88b-e91d12898401
                    pets:
                      - name: ipsum
                      - name: aliquam
                      - name: quis
                      - name: quibusdam
                      - name: tempora
                      - name: et
                      - name: perspiciatis
                      - name: et
                      - name: eius
                      - name: est
                      - name: maxime
                      - name: enim
                      - name: aut
                      - name: cumque
                      - name: repudiandae
                      - name: et
                      - name: labore
                      - name: dolorem
                      - name: omnis
                      - name: voluptatibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: veniam
              pet2:
                value:
                  name: consequatur
              pet3:
                value:
                  name: ullam
              pet4:
                value:
                  name: doloremque
              pet5:
                value:
                  name: distinctio
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: aperiam
                pet2:
                  value:
                    pet:
                      name: vel
                pet3:
                  value:
                    pet:
                      name: voluptas
                pet4:
                  value:
                    pet:
                      name: qui
                pet5:
                  value:
                    pet:
                      name: facere
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: aut
                pet2:
                  value:
                    pet:
                      name: repellendus
                pet3:
                  value:
                    pet:
                      name: corporis
                pet4:
                  value:
                    pet:
                      name: necessitatibus
                pet5:
                  value:
                    pet:
                      name: earum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: fuga
              pet2:
                value:
                  name: omnis
              pet3:
                value:
                  name: officia
              pet4:
                value:
                  name: autem
              pet5:
                value:
                  name: illo
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: nam
                pet2:
                  value:
                    pet:
                      name: repellat
                pet3:
                  value:
                    pet:
                      name: rerum
                pet4:
                  value:
                    pet:
                      name: delectus
                pet5:
                  value:
                    pet:
                      name: reprehenderit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: sunt
              pet2:
                value:
                  name: voluptate
              pet3:
                value:
                  name: excepturi
              pet4:
                value:
                  name: ipsam
              pet5:
                value:
                  name: vel
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: earum
                pet2:
                  value:
                    pet:
                      name: tempora
                pet3:
                  value:
                    pet:
                      name: sed
                pet4:
                  value:
                    pet:
                      name: quia
                pet5:
                  value:
                    pet:
                      name: architecto
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: magni
                user2:
                  value:
                    user:
                      name: doloribus
                user3:
                  value:
                    user:
                      name: sint
                user4:
                  value:
                    user:
                      name: sunt
                user5:
                  value:
                    user:
                      name: laborum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/users':
    get:
      operationId: listPetUsers
      tags:
        - Pets
      summary: List pet users
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petUsers:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    nextPageToken: 3a14044c-5461-42f3-b39e-9f10dac879b2
                    petUsers:
                      - userId: consequuntur
                      - userId: iure
                      - userId: enim
                      - userId: ab
                      - userId: labore
                      - userId: repellat
                      - userId: voluptas
                      - userId: enim
                      - userId: vel
                      - userId: vel
                      - userId: natus
                      - userId: odit
                      - userId: quis
                      - userId: quas
                      - userId: aperiam
                      - userId: quis
                      - userId: alias
                      - userId: commodi
                      - userId: odio
                      - userId: tempore
                petUser2:
                  value:
                    nextPageToken: ba14a225-6689-4391-a1cf-2074f8005354
                    petUsers:
                      - userId: a
                      - userId: id
                      - userId: ipsa
                      - userId: voluptatibus
                      - userId: iste
                      - userId: minima
                      - userId: sed
                      - userId: eos
                      - userId: quam
                      - userId: omnis
                      - userId: quidem
                      - userId: quo
                      - userId: asperiores
                      - userId: doloremque
                      - userId: in
                      - userId: beatae
                      - userId: aut
                      - userId: non
                      - userId: illum
                      - userId: in
                petUser3:
                  value:
                    nextPageToken: 30d6957b-331c-406c-bfc9-b0a89781bfac
                    petUsers:
                      - userId: est
                      - userId: corrupti
                      - userId: consectetur
                      - userId: quisquam
                      - userId: labore
                      - userId: est
                      - userId: voluptates
                      - userId: ut
                      - userId: aliquam
                      - userId: voluptatibus
                      - userId: sint
                      - userId: qui
                      - userId: tempore
                      - userId: quo
                      - userId: quam
                      - userId: doloremque
                      - userId: est
                      - userId: voluptatem
                      - userId: sunt
                      - userId: officiis
                petUser4:
                  value:
                    nextPageToken: 3868b471-5c6a-4042-97fa-b07038a25754
                    petUsers:
                      - userId: dolorem
                      - userId: qui
                      - userId: consequuntur
                      - userId: minus
                      - userId: neque
                      - userId: earum
                      - userId: commodi
                      - userId: illum
                      - userId: dolorem
                      - userId: ea
                      - userId: voluptas
                      - userId: sed
                      - userId: qui
                      - userId: nihil
                      - userId: reiciendis
                      - userId: id
                      - userId: dolor
                      - userId: aut
                      - userId: ea
                      - userId: voluptas
                petUser5:
                  value:
                    nextPageToken: 1385565f-f259-4a4a-8d04-14cf471444c2
                    petUsers:
                      - userId: qui
                      - userId: optio
                      - userId: eum
                      - userId: aut
                      - userId: quasi
                      - userId: at
                      - userId: sunt
                      - userId: quibusdam
                      - userId: rerum
                      - userId: quo
                      - userId: quis
                      - userId: aspernatur
                      - userId: est
                      - userId: quia
                      - userId: voluptas
                      - userId: expedita
                      - userId: eligendi
                      - userId: totam
                      - userId: saepe
                      - userId: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetUser
      tags:
        - Pets
      summary: Create pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUserRequest'
            examples:
              petUser1:
                value:
                  userId: corporis
              petUser2:
                value:
                  userId: facere
              petUser3:
                value:
                  userId: praesentium
              petUser4:
                value:
                  userId: iste
              petUser5:
                value:
                  userId: repellat
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: voluptas
                petUser2:
                  value:
                    petUser:
                      userId: omnis
                petUser3:
                  value:
                    petUser:
                      userId: aut
                petUser4:
                  value:
                    petUser:
                      userId: omnis
                petUser5:
                  value:
                    petUser:
                      userId: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/users/{userId}':
    head:
      operationId: checkPetUser
      tags:
        - Pets
      summary: Check pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetUser
      tags:
        - Pets
      summary: Get pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: aut
                petUser2:
                  value:
                    petUser:
                      userId: aut
                petUser3:
                  value:
                    petUser:
                      userId: et
                petUser4:
                  value:
                    petUser:
                      userId: aperiam
                petUser5:
                  value:
                    petUser:
                      userId: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetUser
      tags:
        - Pets
      summary: Replace pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUserRequest'
            examples:
              petUser1:
                value:
                  userId: consequuntur
              petUser2:
                value:
                  userId: voluptates
              petUser3:
                value:
                  userId: libero
              petUser4:
                value:
                  userId: quod
              petUser5:
                value:
                  userId: culpa
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: non
                petUser2:
                  value:
                    petUser:
                      userId: molestiae
                petUser3:
                  value:
                    petUser:
                      userId: inventore
                petUser4:
                  value:
                    petUser:
                      userId: libero
                petUser5:
                  value:
                    petUser:
                      userId: itaque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetUser
      tags:
        - Pets
      summary: Modify pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUserRequest'
            examples:
              petUser1:
                value:
                  userId: alias
              petUser2:
                value:
                  userId: possimus
              petUser3:
                value:
                  userId: aut
              petUser4:
                value:
                  userId: molestiae
              petUser5:
                value:
                  userId: velit
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petUser:
                    $ref: '#/components/schemas/PetUserResponse'
              examples:
                petUser1:
                  value:
                    petUser:
                      userId: ut
                petUser2:
                  value:
                    petUser:
                      userId: inventore
                petUser3:
                  value:
                    petUser:
                      userId: a
                petUser4:
                  value:
                    petUser:
                      userId: qui
                petUser5:
                  value:
                    petUser:
                      userId: officia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetUser
      tags:
        - Pets
      summary: Delete pet user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets:
    get:
      operationId: listPetsAsUser
      tags:
        - User
      summary: List pets for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 7e0bbe18-f563-49d3-9447-a4d5ab27180b
                    pets:
                      - name: earum
                      - name: vel
                      - name: amet
                      - name: dolorem
                      - name: dolorum
                      - name: quis
                      - name: natus
                      - name: vel
                      - name: ut
                      - name: accusamus
                      - name: praesentium
                      - name: et
                      - name: omnis
                      - name: id
                      - name: vero
                      - name: iusto
                      - name: rerum
                      - name: iste
                      - name: ea
                      - name: explicabo
                pet2:
                  value:
                    nextPageToken: e20d2602-cdb6-4876-9bb9-6d75b5a2338b
                    pets:
                      - name: voluptas
                      - name: est
                      - name: eum
                      - name: voluptatem
                      - name: atque
                      - name: dicta
                      - name: ex
                      - name: tempore
                      - name: laborum
                      - name: minus
                      - name: sed
                      - name: sint
                      - name: culpa
                      - name: vel
                      - name: sed
                      - name: est
                      - name: in
                      - name: consequatur
                      - name: dolorum
                      - name: animi
                pet3:
                  value:
                    nextPageToken: 3d13326e-9300-4018-96fc-430eaebcc6f5
                    pets:
                      - name: autem
                      - name: nihil
                      - name: harum
                      - name: laboriosam
                      - name: expedita
                      - name: suscipit
                      - name: corrupti
                      - name: in
                      - name: voluptate
                      - name: voluptates
                      - name: eaque
                      - name: perspiciatis
                      - name: hic
                      - name: debitis
                      - name: amet
                      - name: sunt
                      - name: blanditiis
                      - name: qui
                      - name: eos
                      - name: porro
                pet4:
                  value:
                    nextPageToken: c8538232-99c8-4cd2-b670-63f9991b3487
                    pets:
                      - name: velit
                      - name: et
                      - name: et
                      - name: repudiandae
                      - name: ut
                      - name: nobis
                      - name: quaerat
                      - name: voluptatem
                      - name: molestiae
                      - name: possimus
                      - name: repudiandae
                      - name: fugit
                      - name: accusantium
                      - name: nulla
                      - name: ea
                      - name: dolores
                      - name: dolores
                      - name: qui
                      - name: in
                      - name: assumenda
                pet5:
                  value:
                    nextPageToken: 885ccfc9-0c65-47dd-a421-0649411faf22
                    pets:
                      - name: aspernatur
                      - name: facilis
                      - name: quibusdam
                      - name: esse
                      - name: illo
                      - name: harum
                      - name: qui
                      - name: mollitia
                      - name: et
                      - name: ut
                      - name: quia
                      - name: ad
                      - name: quaerat
                      - name: iure
                      - name: tenetur
                      - name: molestiae
                      - name: est
                      - name: voluptatem
                      - name: esse
                      - name: soluta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetAsUser
      tags:
        - User
      summary: Create pet for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: optio
              pet2:
                value:
                  name: ut
              pet3:
                value:
                  name: unde
              pet4:
                value:
                  name: et
              pet5:
                value:
                  name: sint
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: repellendus
                pet2:
                  value:
                    pet:
                      name: voluptatibus
                pet3:
                  value:
                    pet:
                      name: hic
                pet4:
                  value:
                    pet:
                      name: beatae
                pet5:
                  value:
                    pet:
                      name: reiciendis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/{petId}':
    head:
      operationId: checkPetAsUser
      tags:
        - User
      summary: Check pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetAsUser
      tags:
        - User
      summary: Get pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: modi
                pet2:
                  value:
                    pet:
                      name: aspernatur
                pet3:
                  value:
                    pet:
                      name: quidem
                pet4:
                  value:
                    pet:
                      name: in
                pet5:
                  value:
                    pet:
                      name: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetAsUser
      tags:
        - User
      summary: Replace pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: qui
              pet2:
                value:
                  name: dolorum
              pet3:
                value:
                  name: animi
              pet4:
                value:
                  name: alias
              pet5:
                value:
                  name: nihil
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: ullam
                pet2:
                  value:
                    pet:
                      name: eius
                pet3:
                  value:
                    pet:
                      name: consectetur
                pet4:
                  value:
                    pet:
                      name: et
                pet5:
                  value:
                    pet:
                      name: sint
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetAsUser
      tags:
        - User
      summary: Modify pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: sunt
              pet2:
                value:
                  name: aliquam
              pet3:
                value:
                  name: enim
              pet4:
                value:
                  name: voluptatem
              pet5:
                value:
                  name: id
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quia
                pet2:
                  value:
                    pet:
                      name: voluptate
                pet3:
                  value:
                    pet:
                      name: praesentium
                pet4:
                  value:
                    pet:
                      name: ducimus
                pet5:
                  value:
                    pet:
                      name: illo
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetAsUser
      tags:
        - User
      summary: Delete pet for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetUserResponse:
      properties:
        userId:
          type: string
    PetUserRequest:
      properties:
        userId:
          type: string
