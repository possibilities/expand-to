openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: basic'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    pets:
                      - name: et
                      - name: inventore
                      - name: iure
                      - name: qui
                      - name: praesentium
                      - name: eligendi
                      - name: ipsam
                      - name: iure
                      - name: nam
                      - name: cum
                      - name: facilis
                      - name: ut
                      - name: aliquid
                      - name: impedit
                      - name: minus
                      - name: sunt
                      - name: itaque
                      - name: corporis
                      - name: et
                      - name: quia
                pet2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    pets:
                      - name: recusandae
                      - name: consequatur
                      - name: velit
                      - name: vero
                      - name: sed
                      - name: dolorem
                      - name: velit
                      - name: et
                      - name: excepturi
                      - name: expedita
                      - name: voluptate
                      - name: consequatur
                      - name: quam
                      - name: aut
                      - name: natus
                      - name: quam
                      - name: quidem
                      - name: aut
                      - name: deserunt
                      - name: qui
                pet3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    pets:
                      - name: modi
                      - name: optio
                      - name: harum
                      - name: est
                      - name: rerum
                      - name: et
                      - name: veniam
                      - name: aut
                      - name: ad
                      - name: et
                      - name: aut
                      - name: omnis
                      - name: praesentium
                      - name: est
                      - name: porro
                      - name: earum
                      - name: accusantium
                      - name: dolore
                      - name: cum
                      - name: modi
                pet4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    pets:
                      - name: et
                      - name: deserunt
                      - name: est
                      - name: ullam
                      - name: ducimus
                      - name: dolor
                      - name: quia
                      - name: et
                      - name: sed
                      - name: vel
                      - name: quod
                      - name: quidem
                      - name: ad
                      - name: dolorem
                      - name: ab
                      - name: aut
                      - name: distinctio
                      - name: natus
                      - name: quasi
                      - name: et
                pet5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    pets:
                      - name: saepe
                      - name: voluptatem
                      - name: consectetur
                      - name: cum
                      - name: fugit
                      - name: aliquam
                      - name: voluptatem
                      - name: quia
                      - name: ut
                      - name: sint
                      - name: et
                      - name: natus
                      - name: aut
                      - name: esse
                      - name: recusandae
                      - name: numquam
                      - name: quia
                      - name: repellat
                      - name: culpa
                      - name: quo
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: aut
              pet2:
                value:
                  name: voluptatem
              pet3:
                value:
                  name: molestiae
              pet4:
                value:
                  name: ad
              pet5:
                value:
                  name: at
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: eos
                pet2:
                  value:
                    pet:
                      name: voluptatem
                pet3:
                  value:
                    pet:
                      name: in
                pet4:
                  value:
                    pet:
                      name: doloremque
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: veniam
                pet2:
                  value:
                    pet:
                      name: voluptatem
                pet3:
                  value:
                    pet:
                      name: in
                pet4:
                  value:
                    pet:
                      name: et
                pet5:
                  value:
                    pet:
                      name: distinctio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: et
              pet2:
                value:
                  name: hic
              pet3:
                value:
                  name: sunt
              pet4:
                value:
                  name: eligendi
              pet5:
                value:
                  name: optio
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: qui
                pet2:
                  value:
                    pet:
                      name: dolore
                pet3:
                  value:
                    pet:
                      name: vel
                pet4:
                  value:
                    pet:
                      name: et
                pet5:
                  value:
                    pet:
                      name: soluta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updatePet
      tags:
        - Pets
      summary: Update pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: optio
              pet2:
                value:
                  name: accusantium
              pet3:
                value:
                  name: quas
              pet4:
                value:
                  name: itaque
              pet5:
                value:
                  name: voluptates
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: velit
                pet2:
                  value:
                    pet:
                      name: ex
                pet3:
                  value:
                    pet:
                      name: aut
                pet4:
                  value:
                    pet:
                      name: quasi
                pet5:
                  value:
                    pet:
                      name: rem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /stores:
    get:
      operationId: listStores
      tags:
        - Stores
      summary: List stores
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  stores:
                    type: array
                    items:
                      $ref: '#/components/schemas/StoreResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                store1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    stores:
                      - name: aut
                      - name: sint
                      - name: sit
                      - name: velit
                      - name: sit
                      - name: non
                      - name: eos
                      - name: officiis
                      - name: iusto
                      - name: cum
                      - name: ut
                      - name: quo
                      - name: reprehenderit
                      - name: laboriosam
                      - name: ut
                      - name: dolorum
                      - name: rerum
                      - name: dolore
                      - name: delectus
                      - name: odio
                store2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    stores:
                      - name: vel
                      - name: ut
                      - name: ducimus
                      - name: et
                      - name: suscipit
                      - name: necessitatibus
                      - name: sunt
                      - name: tempore
                      - name: sit
                      - name: ad
                      - name: animi
                      - name: omnis
                      - name: quae
                      - name: animi
                      - name: quidem
                      - name: qui
                      - name: repudiandae
                      - name: quia
                      - name: ab
                      - name: iste
                store3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    stores:
                      - name: eaque
                      - name: est
                      - name: deserunt
                      - name: esse
                      - name: adipisci
                      - name: repudiandae
                      - name: et
                      - name: in
                      - name: voluptatum
                      - name: et
                      - name: nostrum
                      - name: beatae
                      - name: voluptatem
                      - name: ex
                      - name: aut
                      - name: mollitia
                      - name: tempora
                      - name: nulla
                      - name: cum
                      - name: est
                store4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    stores:
                      - name: repudiandae
                      - name: aut
                      - name: delectus
                      - name: error
                      - name: minima
                      - name: autem
                      - name: accusamus
                      - name: ratione
                      - name: similique
                      - name: possimus
                      - name: enim
                      - name: eligendi
                      - name: aut
                      - name: explicabo
                      - name: tempora
                      - name: porro
                      - name: dolores
                      - name: a
                      - name: sed
                      - name: velit
                store5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    stores:
                      - name: eius
                      - name: ut
                      - name: doloremque
                      - name: vitae
                      - name: quibusdam
                      - name: eum
                      - name: commodi
                      - name: quia
                      - name: qui
                      - name: ratione
                      - name: fuga
                      - name: labore
                      - name: distinctio
                      - name: et
                      - name: non
                      - name: deleniti
                      - name: ea
                      - name: assumenda
                      - name: ullam
                      - name: ab
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createStore
      tags:
        - Stores
      summary: Create store
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreRequest'
            examples:
              store1:
                value:
                  name: culpa
              store2:
                value:
                  name: iste
              store3:
                value:
                  name: consequuntur
              store4:
                value:
                  name: assumenda
              store5:
                value:
                  name: aliquam
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  store:
                    $ref: '#/components/schemas/StoreResponse'
              examples:
                store1:
                  value:
                    store:
                      name: cum
                store2:
                  value:
                    store:
                      name: rerum
                store3:
                  value:
                    store:
                      name: mollitia
                store4:
                  value:
                    store:
                      name: consectetur
                store5:
                  value:
                    store:
                      name: odio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/stores/{storeId}':
    head:
      operationId: checkStore
      tags:
        - Stores
      summary: Check store
      parameters:
        - in: path
          required: true
          name: storeId
          schema:
            type: string
          description: Store id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getStore
      tags:
        - Stores
      summary: Get store
      parameters:
        - in: path
          required: true
          name: storeId
          schema:
            type: string
          description: Store id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  store:
                    $ref: '#/components/schemas/StoreResponse'
              examples:
                store1:
                  value:
                    store:
                      name: dolor
                store2:
                  value:
                    store:
                      name: asperiores
                store3:
                  value:
                    store:
                      name: ut
                store4:
                  value:
                    store:
                      name: voluptatem
                store5:
                  value:
                    store:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceStore
      tags:
        - Stores
      summary: Replace store
      parameters:
        - in: path
          required: true
          name: storeId
          schema:
            type: string
          description: Store id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreRequest'
            examples:
              store1:
                value:
                  name: non
              store2:
                value:
                  name: corporis
              store3:
                value:
                  name: voluptate
              store4:
                value:
                  name: similique
              store5:
                value:
                  name: natus
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  store:
                    $ref: '#/components/schemas/StoreResponse'
              examples:
                store1:
                  value:
                    store:
                      name: ipsa
                store2:
                  value:
                    store:
                      name: sunt
                store3:
                  value:
                    store:
                      name: temporibus
                store4:
                  value:
                    store:
                      name: ducimus
                store5:
                  value:
                    store:
                      name: minus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateStore
      tags:
        - Stores
      summary: Update store
      parameters:
        - in: path
          required: true
          name: storeId
          schema:
            type: string
          description: Store id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreRequest'
            examples:
              store1:
                value:
                  name: delectus
              store2:
                value:
                  name: sint
              store3:
                value:
                  name: necessitatibus
              store4:
                value:
                  name: iste
              store5:
                value:
                  name: nemo
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  store:
                    $ref: '#/components/schemas/StoreResponse'
              examples:
                store1:
                  value:
                    store:
                      name: reprehenderit
                store2:
                  value:
                    store:
                      name: atque
                store3:
                  value:
                    store:
                      name: voluptatem
                store4:
                  value:
                    store:
                      name: rerum
                store5:
                  value:
                    store:
                      name: quam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteStore
      tags:
        - Stores
      summary: Delete store
      parameters:
        - in: path
          required: true
          name: storeId
          schema:
            type: string
          description: Store id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: number
        lastPage:
          type: number
        nextPage:
          type: number
        prevPage:
          type: number
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    StoreResponse:
      properties:
        name:
          type: string
    StoreRequest:
      properties:
        name:
          type: string
