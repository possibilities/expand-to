openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users with belongsTo'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 01a4d8e5-a1d6-4e8c-b91f-77ab5c40899a
                    users:
                      - name: voluptatem
                      - name: deserunt
                      - name: sed
                      - name: quisquam
                      - name: at
                      - name: sed
                      - name: possimus
                      - name: est
                      - name: vel
                      - name: numquam
                      - name: ab
                      - name: dolorem
                      - name: ea
                      - name: velit
                      - name: rerum
                      - name: est
                      - name: autem
                      - name: id
                      - name: voluptatibus
                      - name: fugit
                user2:
                  value:
                    nextPageToken: 8bfa2464-70e2-462b-ab3a-5d7197f9510e
                    users:
                      - name: facilis
                      - name: ut
                      - name: molestiae
                      - name: harum
                      - name: facere
                      - name: placeat
                      - name: facilis
                      - name: quos
                      - name: consequatur
                      - name: nesciunt
                      - name: ut
                      - name: in
                      - name: quae
                      - name: ducimus
                      - name: ipsum
                      - name: ipsam
                      - name: libero
                      - name: doloribus
                      - name: officia
                      - name: ipsam
                user3:
                  value:
                    nextPageToken: 7231c561-de95-4035-a4f7-d9d0d98de190
                    users:
                      - name: sit
                      - name: exercitationem
                      - name: deserunt
                      - name: incidunt
                      - name: corporis
                      - name: aut
                      - name: doloribus
                      - name: ipsa
                      - name: sapiente
                      - name: fugit
                      - name: hic
                      - name: id
                      - name: facilis
                      - name: fuga
                      - name: et
                      - name: laborum
                      - name: laudantium
                      - name: dolorum
                      - name: ipsum
                      - name: omnis
                user4:
                  value:
                    nextPageToken: 63b9a9ef-af83-40e6-9972-6c93d9ec68dd
                    users:
                      - name: nihil
                      - name: neque
                      - name: quaerat
                      - name: nulla
                      - name: deleniti
                      - name: adipisci
                      - name: ea
                      - name: et
                      - name: asperiores
                      - name: amet
                      - name: nostrum
                      - name: animi
                      - name: minus
                      - name: voluptates
                      - name: dolor
                      - name: consequuntur
                      - name: totam
                      - name: quod
                      - name: quis
                      - name: voluptatem
                user5:
                  value:
                    nextPageToken: afc878cc-eb15-490e-a2e4-361df4b917e6
                    users:
                      - name: qui
                      - name: maiores
                      - name: esse
                      - name: dolores
                      - name: rem
                      - name: minus
                      - name: corporis
                      - name: necessitatibus
                      - name: inventore
                      - name: quia
                      - name: quae
                      - name: ullam
                      - name: ipsa
                      - name: nulla
                      - name: molestias
                      - name: saepe
                      - name: enim
                      - name: sed
                      - name: nobis
                      - name: mollitia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: ea
              user2:
                value:
                  name: consequuntur
              user3:
                value:
                  name: quasi
              user4:
                value:
                  name: commodi
              user5:
                value:
                  name: nobis
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: voluptatem
                user2:
                  value:
                    user:
                      name: quia
                user3:
                  value:
                    user:
                      name: rerum
                user4:
                  value:
                    user:
                      name: et
                user5:
                  value:
                    user:
                      name: consectetur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: rem
                user2:
                  value:
                    user:
                      name: assumenda
                user3:
                  value:
                    user:
                      name: voluptates
                user4:
                  value:
                    user:
                      name: et
                user5:
                  value:
                    user:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: aliquid
              user2:
                value:
                  name: cupiditate
              user3:
                value:
                  name: fugit
              user4:
                value:
                  name: ut
              user5:
                value:
                  name: voluptatem
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: aliquam
                user2:
                  value:
                    user:
                      name: est
                user3:
                  value:
                    user:
                      name: sequi
                user4:
                  value:
                    user:
                      name: in
                user5:
                  value:
                    user:
                      name: deleniti
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: quaerat
              user2:
                value:
                  name: itaque
              user3:
                value:
                  name: quis
              user4:
                value:
                  name: incidunt
              user5:
                value:
                  name: modi
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: ut
                user2:
                  value:
                    user:
                      name: magni
                user3:
                  value:
                    user:
                      name: excepturi
                user4:
                  value:
                    user:
                      name: natus
                user5:
                  value:
                    user:
                      name: non
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses':
    get:
      operationId: listUserCourses
      tags:
        - Users
      summary: List user courses
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 0979e60a-359e-4362-a0d6-56d1e3af016a
                    courses:
                      - name: reiciendis
                      - name: in
                      - name: qui
                      - name: ut
                      - name: sunt
                      - name: non
                      - name: rem
                      - name: quia
                      - name: odit
                      - name: et
                      - name: sit
                      - name: ut
                      - name: quis
                      - name: amet
                      - name: quo
                      - name: quo
                      - name: expedita
                      - name: numquam
                      - name: quia
                      - name: qui
                course2:
                  value:
                    nextPageToken: 2c536503-de1f-4088-83fa-d5299ca525c4
                    courses:
                      - name: ex
                      - name: quia
                      - name: velit
                      - name: et
                      - name: vel
                      - name: voluptates
                      - name: ut
                      - name: perspiciatis
                      - name: sed
                      - name: eligendi
                      - name: est
                      - name: nemo
                      - name: vel
                      - name: dolorem
                      - name: perspiciatis
                      - name: praesentium
                      - name: dolores
                      - name: quis
                      - name: nihil
                      - name: est
                course3:
                  value:
                    nextPageToken: ce3f7d4b-2304-46f8-98dc-68af9eb98a8f
                    courses:
                      - name: tempore
                      - name: ullam
                      - name: aut
                      - name: quos
                      - name: eos
                      - name: rem
                      - name: consequatur
                      - name: rerum
                      - name: asperiores
                      - name: odit
                      - name: soluta
                      - name: rerum
                      - name: sit
                      - name: et
                      - name: vitae
                      - name: voluptatem
                      - name: voluptatum
                      - name: recusandae
                      - name: autem
                      - name: maiores
                course4:
                  value:
                    nextPageToken: 51c2cdd1-47c6-488d-9e2f-79cfbd5da132
                    courses:
                      - name: unde
                      - name: labore
                      - name: enim
                      - name: maxime
                      - name: qui
                      - name: laboriosam
                      - name: nesciunt
                      - name: est
                      - name: eaque
                      - name: impedit
                      - name: nihil
                      - name: numquam
                      - name: beatae
                      - name: nemo
                      - name: possimus
                      - name: autem
                      - name: voluptates
                      - name: voluptatem
                      - name: laudantium
                      - name: laudantium
                course5:
                  value:
                    nextPageToken: aab410ba-dd2f-4d63-8a28-9c29bad0ef7a
                    courses:
                      - name: nobis
                      - name: itaque
                      - name: ea
                      - name: et
                      - name: totam
                      - name: tempore
                      - name: et
                      - name: perspiciatis
                      - name: molestias
                      - name: cupiditate
                      - name: excepturi
                      - name: dolore
                      - name: facilis
                      - name: autem
                      - name: qui
                      - name: a
                      - name: est
                      - name: ea
                      - name: aut
                      - name: eos
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserCourse
      tags:
        - Users
      summary: Create user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: vel
              course2:
                value:
                  name: vel
              course3:
                value:
                  name: esse
              course4:
                value:
                  name: in
              course5:
                value:
                  name: ducimus
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: ut
                course2:
                  value:
                    course:
                      name: molestiae
                course3:
                  value:
                    course:
                      name: nemo
                course4:
                  value:
                    course:
                      name: sit
                course5:
                  value:
                    course:
                      name: natus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses/{courseId}':
    head:
      operationId: checkUserCourse
      tags:
        - Users
      summary: Check user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserCourse
      tags:
        - Users
      summary: Get user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: accusamus
                course2:
                  value:
                    course:
                      name: ipsa
                course3:
                  value:
                    course:
                      name: ad
                course4:
                  value:
                    course:
                      name: minus
                course5:
                  value:
                    course:
                      name: alias
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserCourse
      tags:
        - Users
      summary: Replace user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: facere
              course2:
                value:
                  name: quis
              course3:
                value:
                  name: mollitia
              course4:
                value:
                  name: explicabo
              course5:
                value:
                  name: minima
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: maxime
                course2:
                  value:
                    course:
                      name: id
                course3:
                  value:
                    course:
                      name: voluptatum
                course4:
                  value:
                    course:
                      name: molestias
                course5:
                  value:
                    course:
                      name: dicta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserCourse
      tags:
        - Users
      summary: Modify user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: odio
              course2:
                value:
                  name: veniam
              course3:
                value:
                  name: iusto
              course4:
                value:
                  name: consequuntur
              course5:
                value:
                  name: hic
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: illum
                course2:
                  value:
                    course:
                      name: velit
                course3:
                  value:
                    course:
                      name: enim
                course4:
                  value:
                    course:
                      name: et
                course5:
                  value:
                    course:
                      name: impedit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserCourse
      tags:
        - Users
      summary: Delete user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: aspernatur
                user2:
                  value:
                    user:
                      name: nesciunt
                user3:
                  value:
                    user:
                      name: cum
                user4:
                  value:
                    user:
                      name: sed
                user5:
                  value:
                    user:
                      name: sed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/courses:
    get:
      operationId: listCoursesAsUser
      tags:
        - User
      summary: List courses for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 216317a5-a00e-46c1-b379-734a3a608e54
                    courses:
                      - name: non
                      - name: et
                      - name: dolorem
                      - name: blanditiis
                      - name: culpa
                      - name: quisquam
                      - name: placeat
                      - name: amet
                      - name: soluta
                      - name: perferendis
                      - name: et
                      - name: molestias
                      - name: delectus
                      - name: voluptatem
                      - name: quidem
                      - name: asperiores
                      - name: rerum
                      - name: incidunt
                      - name: consectetur
                      - name: officiis
                course2:
                  value:
                    nextPageToken: b05cccd9-96e1-416e-81c3-b57622051045
                    courses:
                      - name: aut
                      - name: voluptate
                      - name: eligendi
                      - name: nulla
                      - name: nemo
                      - name: quo
                      - name: sunt
                      - name: praesentium
                      - name: qui
                      - name: qui
                      - name: et
                      - name: ipsa
                      - name: numquam
                      - name: voluptatem
                      - name: et
                      - name: consequatur
                      - name: ratione
                      - name: corporis
                      - name: reiciendis
                      - name: doloremque
                course3:
                  value:
                    nextPageToken: 46ba373d-99b3-4d09-ae47-4cffc8e014e9
                    courses:
                      - name: et
                      - name: officiis
                      - name: delectus
                      - name: et
                      - name: quisquam
                      - name: nam
                      - name: consequatur
                      - name: molestiae
                      - name: amet
                      - name: dolores
                      - name: dolorem
                      - name: quam
                      - name: quae
                      - name: in
                      - name: sed
                      - name: aut
                      - name: adipisci
                      - name: reiciendis
                      - name: qui
                      - name: ea
                course4:
                  value:
                    nextPageToken: bb25e669-a997-4218-9a5e-8750cbabfb38
                    courses:
                      - name: et
                      - name: et
                      - name: qui
                      - name: porro
                      - name: hic
                      - name: voluptas
                      - name: quia
                      - name: modi
                      - name: illo
                      - name: sint
                      - name: sit
                      - name: vel
                      - name: molestias
                      - name: amet
                      - name: dolor
                      - name: sed
                      - name: et
                      - name: dolores
                      - name: odio
                      - name: quidem
                course5:
                  value:
                    nextPageToken: a814c52d-458b-4999-ba58-857ba5888927
                    courses:
                      - name: quo
                      - name: animi
                      - name: quis
                      - name: et
                      - name: et
                      - name: explicabo
                      - name: sit
                      - name: saepe
                      - name: et
                      - name: sequi
                      - name: quia
                      - name: et
                      - name: molestiae
                      - name: officia
                      - name: qui
                      - name: et
                      - name: officiis
                      - name: aut
                      - name: sed
                      - name: fugit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourseAsUser
      tags:
        - User
      summary: Create course for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: corrupti
              course2:
                value:
                  name: aut
              course3:
                value:
                  name: pariatur
              course4:
                value:
                  name: id
              course5:
                value:
                  name: occaecati
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: sint
                course2:
                  value:
                    course:
                      name: reprehenderit
                course3:
                  value:
                    course:
                      name: omnis
                course4:
                  value:
                    course:
                      name: quia
                course5:
                  value:
                    course:
                      name: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/courses/{courseId}':
    head:
      operationId: checkCourseAsUser
      tags:
        - User
      summary: Check course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourseAsUser
      tags:
        - User
      summary: Get course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: officiis
                course2:
                  value:
                    course:
                      name: adipisci
                course3:
                  value:
                    course:
                      name: modi
                course4:
                  value:
                    course:
                      name: totam
                course5:
                  value:
                    course:
                      name: distinctio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourseAsUser
      tags:
        - User
      summary: Replace course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: voluptatem
              course2:
                value:
                  name: repellendus
              course3:
                value:
                  name: ex
              course4:
                value:
                  name: expedita
              course5:
                value:
                  name: ut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: iure
                course2:
                  value:
                    course:
                      name: dolores
                course3:
                  value:
                    course:
                      name: ut
                course4:
                  value:
                    course:
                      name: eum
                course5:
                  value:
                    course:
                      name: molestiae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourseAsUser
      tags:
        - User
      summary: Modify course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: nisi
              course2:
                value:
                  name: in
              course3:
                value:
                  name: est
              course4:
                value:
                  name: soluta
              course5:
                value:
                  name: assumenda
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: odit
                course2:
                  value:
                    course:
                      name: nam
                course3:
                  value:
                    course:
                      name: ex
                course4:
                  value:
                    course:
                      name: in
                course5:
                  value:
                    course:
                      name: consequuntur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourseAsUser
      tags:
        - User
      summary: Delete course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    CourseResponse:
      properties:
        name:
          type: string
    CourseRequest:
      properties:
        name:
          type: string
