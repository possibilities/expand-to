openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users with polymorphic hasMany'
paths:
  /courses:
    get:
      operationId: listCourses
      tags:
        - Courses
      summary: List courses
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 107616fc-67ae-4879-80b9-3b8cf45d90d6
                    courses:
                      - name: est
                      - name: dicta
                      - name: corporis
                      - name: perferendis
                      - name: qui
                      - name: et
                      - name: facilis
                      - name: sunt
                      - name: amet
                      - name: omnis
                      - name: qui
                      - name: at
                      - name: fugit
                      - name: quas
                      - name: culpa
                      - name: sunt
                      - name: velit
                      - name: aut
                      - name: repellat
                      - name: laborum
                course2:
                  value:
                    nextPageToken: a5fd02cc-0248-43e9-b15c-387071a568f4
                    courses:
                      - name: est
                      - name: cumque
                      - name: illo
                      - name: eos
                      - name: a
                      - name: omnis
                      - name: ab
                      - name: eum
                      - name: sit
                      - name: accusamus
                      - name: praesentium
                      - name: distinctio
                      - name: enim
                      - name: minus
                      - name: et
                      - name: laudantium
                      - name: animi
                      - name: non
                      - name: reprehenderit
                      - name: iste
                course3:
                  value:
                    nextPageToken: 79d0e00d-ec19-4aab-85e2-46949667a825
                    courses:
                      - name: sed
                      - name: delectus
                      - name: optio
                      - name: voluptatem
                      - name: quam
                      - name: dignissimos
                      - name: blanditiis
                      - name: saepe
                      - name: praesentium
                      - name: facilis
                      - name: quasi
                      - name: fuga
                      - name: molestiae
                      - name: minima
                      - name: et
                      - name: ut
                      - name: ipsa
                      - name: at
                      - name: voluptatem
                      - name: blanditiis
                course4:
                  value:
                    nextPageToken: ebf04edd-0981-46f6-828e-7189a7b1b3a6
                    courses:
                      - name: et
                      - name: enim
                      - name: veniam
                      - name: expedita
                      - name: aspernatur
                      - name: velit
                      - name: voluptatem
                      - name: delectus
                      - name: omnis
                      - name: quaerat
                      - name: quis
                      - name: qui
                      - name: reiciendis
                      - name: aut
                      - name: est
                      - name: est
                      - name: est
                      - name: tenetur
                      - name: id
                      - name: debitis
                course5:
                  value:
                    nextPageToken: c901bd7b-7fbd-4067-a839-ec40171f0cb7
                    courses:
                      - name: dolor
                      - name: doloremque
                      - name: rerum
                      - name: assumenda
                      - name: vel
                      - name: et
                      - name: in
                      - name: recusandae
                      - name: odio
                      - name: sequi
                      - name: illo
                      - name: quae
                      - name: labore
                      - name: molestiae
                      - name: aut
                      - name: non
                      - name: debitis
                      - name: est
                      - name: ullam
                      - name: labore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourse
      tags:
        - Courses
      summary: Create course
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: et
              course2:
                value:
                  name: distinctio
              course3:
                value:
                  name: libero
              course4:
                value:
                  name: iure
              course5:
                value:
                  name: id
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: eos
                course2:
                  value:
                    course:
                      name: eaque
                course3:
                  value:
                    course:
                      name: neque
                course4:
                  value:
                    course:
                      name: omnis
                course5:
                  value:
                    course:
                      name: non
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/courses/{courseId}':
    head:
      operationId: checkCourse
      tags:
        - Courses
      summary: Check course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourse
      tags:
        - Courses
      summary: Get course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: consequatur
                course2:
                  value:
                    course:
                      name: ad
                course3:
                  value:
                    course:
                      name: sit
                course4:
                  value:
                    course:
                      name: est
                course5:
                  value:
                    course:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourse
      tags:
        - Courses
      summary: Replace course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: aut
              course2:
                value:
                  name: autem
              course3:
                value:
                  name: facilis
              course4:
                value:
                  name: assumenda
              course5:
                value:
                  name: aut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: et
                course2:
                  value:
                    course:
                      name: sequi
                course3:
                  value:
                    course:
                      name: mollitia
                course4:
                  value:
                    course:
                      name: repellat
                course5:
                  value:
                    course:
                      name: voluptate
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourse
      tags:
        - Courses
      summary: Modify course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: dignissimos
              course2:
                value:
                  name: excepturi
              course3:
                value:
                  name: autem
              course4:
                value:
                  name: voluptatem
              course5:
                value:
                  name: voluptatem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: sunt
                course2:
                  value:
                    course:
                      name: eum
                course3:
                  value:
                    course:
                      name: ea
                course4:
                  value:
                    course:
                      name: repellat
                course5:
                  value:
                    course:
                      name: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourse
      tags:
        - Courses
      summary: Delete course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 0bcd8073-5195-4fe6-b50a-7adf08d0f2c1
                    users:
                      - name: explicabo
                      - name: asperiores
                      - name: non
                      - name: vero
                      - name: velit
                      - name: est
                      - name: nostrum
                      - name: modi
                      - name: ullam
                      - name: doloribus
                      - name: soluta
                      - name: autem
                      - name: odio
                      - name: et
                      - name: asperiores
                      - name: nulla
                      - name: aut
                      - name: mollitia
                      - name: quae
                      - name: at
                user2:
                  value:
                    nextPageToken: 216d50a2-c052-427d-9a86-2ae9448f50fd
                    users:
                      - name: reprehenderit
                      - name: aut
                      - name: quas
                      - name: dicta
                      - name: blanditiis
                      - name: consequatur
                      - name: voluptatem
                      - name: ea
                      - name: ut
                      - name: nostrum
                      - name: qui
                      - name: aliquid
                      - name: vitae
                      - name: ad
                      - name: qui
                      - name: occaecati
                      - name: suscipit
                      - name: quidem
                      - name: illo
                      - name: illo
                user3:
                  value:
                    nextPageToken: 822d3c0b-0fda-45b6-9e61-6952f02f7d44
                    users:
                      - name: facilis
                      - name: architecto
                      - name: qui
                      - name: dolorem
                      - name: ullam
                      - name: hic
                      - name: repellendus
                      - name: ipsum
                      - name: voluptatem
                      - name: sit
                      - name: voluptates
                      - name: nemo
                      - name: corporis
                      - name: quo
                      - name: rerum
                      - name: blanditiis
                      - name: vel
                      - name: saepe
                      - name: in
                      - name: veritatis
                user4:
                  value:
                    nextPageToken: 66d31bb1-664a-4ba4-9b22-2dc9e95ed71f
                    users:
                      - name: asperiores
                      - name: aut
                      - name: in
                      - name: deserunt
                      - name: quos
                      - name: hic
                      - name: animi
                      - name: distinctio
                      - name: et
                      - name: tempora
                      - name: perferendis
                      - name: sint
                      - name: fugit
                      - name: amet
                      - name: at
                      - name: distinctio
                      - name: ut
                      - name: voluptates
                      - name: ut
                      - name: magni
                user5:
                  value:
                    nextPageToken: 9893ee60-ac13-4cbd-80db-b9532488dcd6
                    users:
                      - name: minus
                      - name: omnis
                      - name: atque
                      - name: atque
                      - name: nihil
                      - name: aut
                      - name: aut
                      - name: placeat
                      - name: aut
                      - name: assumenda
                      - name: suscipit
                      - name: commodi
                      - name: deserunt
                      - name: sapiente
                      - name: impedit
                      - name: voluptas
                      - name: vel
                      - name: pariatur
                      - name: laudantium
                      - name: rerum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: est
              user2:
                value:
                  name: pariatur
              user3:
                value:
                  name: est
              user4:
                value:
                  name: aliquam
              user5:
                value:
                  name: et
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: voluptatem
                user2:
                  value:
                    user:
                      name: aliquid
                user3:
                  value:
                    user:
                      name: sint
                user4:
                  value:
                    user:
                      name: quasi
                user5:
                  value:
                    user:
                      name: vitae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: iusto
                user2:
                  value:
                    user:
                      name: ut
                user3:
                  value:
                    user:
                      name: aut
                user4:
                  value:
                    user:
                      name: perspiciatis
                user5:
                  value:
                    user:
                      name: consequatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: aut
              user2:
                value:
                  name: doloremque
              user3:
                value:
                  name: eum
              user4:
                value:
                  name: aut
              user5:
                value:
                  name: aliquam
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: et
                user2:
                  value:
                    user:
                      name: ducimus
                user3:
                  value:
                    user:
                      name: in
                user4:
                  value:
                    user:
                      name: non
                user5:
                  value:
                    user:
                      name: reprehenderit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: quisquam
              user2:
                value:
                  name: quia
              user3:
                value:
                  name: aspernatur
              user4:
                value:
                  name: expedita
              user5:
                value:
                  name: molestiae
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: ullam
                user2:
                  value:
                    user:
                      name: repellendus
                user3:
                  value:
                    user:
                      name: fugit
                user4:
                  value:
                    user:
                      name: aut
                user5:
                  value:
                    user:
                      name: ex
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: deserunt
                user2:
                  value:
                    user:
                      name: aliquid
                user3:
                  value:
                    user:
                      name: molestiae
                user4:
                  value:
                    user:
                      name: in
                user5:
                  value:
                    user:
                      name: voluptatibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/contributors':
    get:
      operationId: listUserContributors
      tags:
        - Users
      summary: List user contributors
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      userContributors:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    nextPageToken: 6b01e32d-2af6-4a88-acb8-6cd213c3fc8a
                    userContributors:
                      - contributorId: quo
                      - contributorId: ad
                      - contributorId: iste
                      - contributorId: suscipit
                      - contributorId: consequuntur
                      - contributorId: animi
                      - contributorId: ut
                      - contributorId: cupiditate
                      - contributorId: quod
                      - contributorId: nam
                      - contributorId: et
                      - contributorId: facilis
                      - contributorId: aut
                      - contributorId: ab
                      - contributorId: sint
                      - contributorId: et
                      - contributorId: rerum
                      - contributorId: alias
                      - contributorId: quae
                      - contributorId: accusamus
                userContributor2:
                  value:
                    nextPageToken: 4d36d121-f5d7-4dbe-a8c1-d87ce66beb29
                    userContributors:
                      - contributorId: ex
                      - contributorId: tempore
                      - contributorId: perferendis
                      - contributorId: eius
                      - contributorId: illo
                      - contributorId: aliquid
                      - contributorId: vel
                      - contributorId: assumenda
                      - contributorId: minima
                      - contributorId: dolores
                      - contributorId: voluptates
                      - contributorId: eum
                      - contributorId: minima
                      - contributorId: incidunt
                      - contributorId: aliquid
                      - contributorId: id
                      - contributorId: adipisci
                      - contributorId: delectus
                      - contributorId: est
                      - contributorId: qui
                userContributor3:
                  value:
                    nextPageToken: a773a489-b650-407f-8a15-b1cfb6384641
                    userContributors:
                      - contributorId: culpa
                      - contributorId: quaerat
                      - contributorId: veritatis
                      - contributorId: sit
                      - contributorId: mollitia
                      - contributorId: officiis
                      - contributorId: voluptates
                      - contributorId: consectetur
                      - contributorId: tempora
                      - contributorId: accusantium
                      - contributorId: dolorem
                      - contributorId: hic
                      - contributorId: aut
                      - contributorId: excepturi
                      - contributorId: est
                      - contributorId: aut
                      - contributorId: quis
                      - contributorId: aut
                      - contributorId: quidem
                      - contributorId: ipsum
                userContributor4:
                  value:
                    nextPageToken: a4d90353-6d46-4011-a344-5fc616445115
                    userContributors:
                      - contributorId: doloremque
                      - contributorId: a
                      - contributorId: architecto
                      - contributorId: vel
                      - contributorId: labore
                      - contributorId: ratione
                      - contributorId: maxime
                      - contributorId: ipsum
                      - contributorId: vitae
                      - contributorId: optio
                      - contributorId: eum
                      - contributorId: veritatis
                      - contributorId: voluptatem
                      - contributorId: facilis
                      - contributorId: sit
                      - contributorId: consequatur
                      - contributorId: et
                      - contributorId: error
                      - contributorId: fugiat
                      - contributorId: nihil
                userContributor5:
                  value:
                    nextPageToken: a9b264b5-388e-4991-ba75-d80be236af83
                    userContributors:
                      - contributorId: repellendus
                      - contributorId: quis
                      - contributorId: nemo
                      - contributorId: voluptatem
                      - contributorId: soluta
                      - contributorId: et
                      - contributorId: dolorem
                      - contributorId: neque
                      - contributorId: illum
                      - contributorId: architecto
                      - contributorId: labore
                      - contributorId: ad
                      - contributorId: ut
                      - contributorId: sint
                      - contributorId: illum
                      - contributorId: autem
                      - contributorId: iusto
                      - contributorId: id
                      - contributorId: cum
                      - contributorId: hic
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserContributor
      tags:
        - Users
      summary: Create user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserContributorRequest'
            examples:
              userContributor1:
                value:
                  contributorId: quis
              userContributor2:
                value:
                  contributorId: similique
              userContributor3:
                value:
                  contributorId: eum
              userContributor4:
                value:
                  contributorId: voluptatem
              userContributor5:
                value:
                  contributorId: et
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: est
                userContributor2:
                  value:
                    userContributor:
                      contributorId: eligendi
                userContributor3:
                  value:
                    userContributor:
                      contributorId: laudantium
                userContributor4:
                  value:
                    userContributor:
                      contributorId: ullam
                userContributor5:
                  value:
                    userContributor:
                      contributorId: illum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/contributors/{contributorId}':
    head:
      operationId: checkUserContributor
      tags:
        - Users
      summary: Check user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserContributor
      tags:
        - Users
      summary: Get user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: nulla
                userContributor2:
                  value:
                    userContributor:
                      contributorId: et
                userContributor3:
                  value:
                    userContributor:
                      contributorId: est
                userContributor4:
                  value:
                    userContributor:
                      contributorId: aperiam
                userContributor5:
                  value:
                    userContributor:
                      contributorId: ullam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserContributor
      tags:
        - Users
      summary: Replace user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserContributorRequest'
            examples:
              userContributor1:
                value:
                  contributorId: id
              userContributor2:
                value:
                  contributorId: id
              userContributor3:
                value:
                  contributorId: fuga
              userContributor4:
                value:
                  contributorId: est
              userContributor5:
                value:
                  contributorId: esse
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: nobis
                userContributor2:
                  value:
                    userContributor:
                      contributorId: iste
                userContributor3:
                  value:
                    userContributor:
                      contributorId: voluptas
                userContributor4:
                  value:
                    userContributor:
                      contributorId: velit
                userContributor5:
                  value:
                    userContributor:
                      contributorId: non
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserContributor
      tags:
        - Users
      summary: Modify user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserContributorRequest'
            examples:
              userContributor1:
                value:
                  contributorId: quae
              userContributor2:
                value:
                  contributorId: qui
              userContributor3:
                value:
                  contributorId: consectetur
              userContributor4:
                value:
                  contributorId: commodi
              userContributor5:
                value:
                  contributorId: non
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userContributor:
                    $ref: '#/components/schemas/UserContributorResponse'
              examples:
                userContributor1:
                  value:
                    userContributor:
                      contributorId: saepe
                userContributor2:
                  value:
                    userContributor:
                      contributorId: quae
                userContributor3:
                  value:
                    userContributor:
                      contributorId: asperiores
                userContributor4:
                  value:
                    userContributor:
                      contributorId: est
                userContributor5:
                  value:
                    userContributor:
                      contributorId: laudantium
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserContributor
      tags:
        - Users
      summary: Delete user contributor
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/contributors:
    get:
      operationId: listContributorsAsUser
      tags:
        - User
      summary: List contributors for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 9aa4a066-e27b-45d0-883a-4a9acd7b9213
                    courses:
                      - name: eius
                      - name: sit
                      - name: eligendi
                      - name: numquam
                      - name: atque
                      - name: illum
                      - name: nihil
                      - name: vero
                      - name: aut
                      - name: suscipit
                      - name: soluta
                      - name: est
                      - name: molestiae
                      - name: quos
                      - name: iusto
                      - name: rerum
                      - name: officiis
                      - name: officia
                      - name: qui
                      - name: impedit
                course2:
                  value:
                    nextPageToken: 3ffec240-abcc-41df-8fbb-c57a347753e9
                    courses:
                      - name: dolorum
                      - name: voluptas
                      - name: ducimus
                      - name: similique
                      - name: aut
                      - name: neque
                      - name: laborum
                      - name: odit
                      - name: dolores
                      - name: dolorem
                      - name: voluptate
                      - name: quae
                      - name: sint
                      - name: recusandae
                      - name: dolorum
                      - name: natus
                      - name: omnis
                      - name: consequuntur
                      - name: maiores
                      - name: voluptates
                course3:
                  value:
                    nextPageToken: 93d12791-a204-4c19-af30-e30e330190de
                    courses:
                      - name: consequatur
                      - name: illum
                      - name: consequatur
                      - name: nihil
                      - name: sit
                      - name: dignissimos
                      - name: sed
                      - name: molestiae
                      - name: explicabo
                      - name: explicabo
                      - name: perspiciatis
                      - name: quia
                      - name: ad
                      - name: qui
                      - name: dolores
                      - name: qui
                      - name: voluptatum
                      - name: odio
                      - name: temporibus
                      - name: quod
                course4:
                  value:
                    nextPageToken: 5f28ef07-d6cb-458a-8a84-0b9f711cc326
                    courses:
                      - name: ab
                      - name: corporis
                      - name: consequuntur
                      - name: corrupti
                      - name: explicabo
                      - name: ut
                      - name: reiciendis
                      - name: corporis
                      - name: est
                      - name: incidunt
                      - name: consectetur
                      - name: ut
                      - name: quaerat
                      - name: ea
                      - name: quae
                      - name: ut
                      - name: praesentium
                      - name: sapiente
                      - name: sapiente
                      - name: nulla
                course5:
                  value:
                    nextPageToken: 8b5eb152-d990-43cf-be0e-6a2807c58818
                    courses:
                      - name: suscipit
                      - name: sapiente
                      - name: eum
                      - name: debitis
                      - name: esse
                      - name: dolor
                      - name: enim
                      - name: ab
                      - name: quia
                      - name: quos
                      - name: animi
                      - name: amet
                      - name: corrupti
                      - name: quae
                      - name: est
                      - name: non
                      - name: et
                      - name: quo
                      - name: et
                      - name: unde
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createContributorAsUser
      tags:
        - User
      summary: Create contributor for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: et
              course2:
                value:
                  name: ut
              course3:
                value:
                  name: incidunt
              course4:
                value:
                  name: aut
              course5:
                value:
                  name: sint
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: aliquam
                course2:
                  value:
                    course:
                      name: aut
                course3:
                  value:
                    course:
                      name: dolor
                course4:
                  value:
                    course:
                      name: velit
                course5:
                  value:
                    course:
                      name: accusamus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/contributors/{contributorId}':
    head:
      operationId: checkContributorAsUser
      tags:
        - User
      summary: Check contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getContributorAsUser
      tags:
        - User
      summary: Get contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: animi
                course2:
                  value:
                    course:
                      name: alias
                course3:
                  value:
                    course:
                      name: velit
                course4:
                  value:
                    course:
                      name: quo
                course5:
                  value:
                    course:
                      name: rerum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceContributorAsUser
      tags:
        - User
      summary: Replace contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: tempora
              course2:
                value:
                  name: impedit
              course3:
                value:
                  name: et
              course4:
                value:
                  name: quibusdam
              course5:
                value:
                  name: mollitia
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: deleniti
                course2:
                  value:
                    course:
                      name: debitis
                course3:
                  value:
                    course:
                      name: recusandae
                course4:
                  value:
                    course:
                      name: molestiae
                course5:
                  value:
                    course:
                      name: consequuntur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyContributorAsUser
      tags:
        - User
      summary: Modify contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: rerum
              course2:
                value:
                  name: alias
              course3:
                value:
                  name: occaecati
              course4:
                value:
                  name: occaecati
              course5:
                value:
                  name: esse
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: officia
                course2:
                  value:
                    course:
                      name: libero
                course3:
                  value:
                    course:
                      name: est
                course4:
                  value:
                    course:
                      name: eos
                course5:
                  value:
                    course:
                      name: perferendis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteContributorAsUser
      tags:
        - User
      summary: Delete contributor for user
      parameters:
        - in: path
          required: true
          name: contributorId
          schema:
            type: string
          description: Contributor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/learners':
    get:
      operationId: listUserLearners
      tags:
        - Users
      summary: List user learners
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      userLearners:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    nextPageToken: 352e4366-4aed-4477-847a-8798bc0b2aec
                    userLearners:
                      - learnerId: quia
                      - learnerId: placeat
                      - learnerId: tenetur
                      - learnerId: optio
                      - learnerId: et
                      - learnerId: illum
                      - learnerId: quam
                      - learnerId: eligendi
                      - learnerId: aperiam
                      - learnerId: iure
                      - learnerId: aspernatur
                      - learnerId: fugiat
                      - learnerId: iste
                      - learnerId: officia
                      - learnerId: molestiae
                      - learnerId: quia
                      - learnerId: eum
                      - learnerId: modi
                      - learnerId: vitae
                      - learnerId: minus
                userLearner2:
                  value:
                    nextPageToken: 8ddc2761-e922-4df6-86d1-efc57c9158ab
                    userLearners:
                      - learnerId: sed
                      - learnerId: repudiandae
                      - learnerId: est
                      - learnerId: voluptatum
                      - learnerId: tenetur
                      - learnerId: veritatis
                      - learnerId: et
                      - learnerId: illum
                      - learnerId: et
                      - learnerId: aliquid
                      - learnerId: aut
                      - learnerId: ut
                      - learnerId: incidunt
                      - learnerId: magni
                      - learnerId: quisquam
                      - learnerId: autem
                      - learnerId: veniam
                      - learnerId: sit
                      - learnerId: et
                      - learnerId: saepe
                userLearner3:
                  value:
                    nextPageToken: 88d5c2c9-015b-48e1-b9f9-e0ae586123c1
                    userLearners:
                      - learnerId: quo
                      - learnerId: vel
                      - learnerId: sunt
                      - learnerId: quidem
                      - learnerId: aliquam
                      - learnerId: nobis
                      - learnerId: ipsum
                      - learnerId: reprehenderit
                      - learnerId: aut
                      - learnerId: delectus
                      - learnerId: velit
                      - learnerId: et
                      - learnerId: in
                      - learnerId: ipsam
                      - learnerId: aspernatur
                      - learnerId: quis
                      - learnerId: pariatur
                      - learnerId: doloremque
                      - learnerId: eos
                      - learnerId: quos
                userLearner4:
                  value:
                    nextPageToken: 9a7c5b23-e816-44a5-b2df-8cda61632b5e
                    userLearners:
                      - learnerId: temporibus
                      - learnerId: dolores
                      - learnerId: alias
                      - learnerId: aut
                      - learnerId: asperiores
                      - learnerId: hic
                      - learnerId: placeat
                      - learnerId: molestiae
                      - learnerId: in
                      - learnerId: labore
                      - learnerId: aspernatur
                      - learnerId: sit
                      - learnerId: vitae
                      - learnerId: et
                      - learnerId: natus
                      - learnerId: quam
                      - learnerId: porro
                      - learnerId: corporis
                      - learnerId: ratione
                      - learnerId: earum
                userLearner5:
                  value:
                    nextPageToken: 93da3f4b-4a6d-4edd-a8bf-0db464f8d85e
                    userLearners:
                      - learnerId: omnis
                      - learnerId: quia
                      - learnerId: porro
                      - learnerId: rerum
                      - learnerId: optio
                      - learnerId: vel
                      - learnerId: necessitatibus
                      - learnerId: amet
                      - learnerId: ut
                      - learnerId: quaerat
                      - learnerId: animi
                      - learnerId: magni
                      - learnerId: quasi
                      - learnerId: sed
                      - learnerId: dolore
                      - learnerId: eos
                      - learnerId: officiis
                      - learnerId: exercitationem
                      - learnerId: incidunt
                      - learnerId: architecto
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserLearner
      tags:
        - Users
      summary: Create user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLearnerRequest'
            examples:
              userLearner1:
                value:
                  learnerId: voluptates
              userLearner2:
                value:
                  learnerId: blanditiis
              userLearner3:
                value:
                  learnerId: consequatur
              userLearner4:
                value:
                  learnerId: sit
              userLearner5:
                value:
                  learnerId: eveniet
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: ipsam
                userLearner2:
                  value:
                    userLearner:
                      learnerId: magnam
                userLearner3:
                  value:
                    userLearner:
                      learnerId: facilis
                userLearner4:
                  value:
                    userLearner:
                      learnerId: commodi
                userLearner5:
                  value:
                    userLearner:
                      learnerId: quod
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/learners/{learnerId}':
    head:
      operationId: checkUserLearner
      tags:
        - Users
      summary: Check user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserLearner
      tags:
        - Users
      summary: Get user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: quasi
                userLearner2:
                  value:
                    userLearner:
                      learnerId: voluptas
                userLearner3:
                  value:
                    userLearner:
                      learnerId: ut
                userLearner4:
                  value:
                    userLearner:
                      learnerId: earum
                userLearner5:
                  value:
                    userLearner:
                      learnerId: blanditiis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserLearner
      tags:
        - Users
      summary: Replace user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLearnerRequest'
            examples:
              userLearner1:
                value:
                  learnerId: quam
              userLearner2:
                value:
                  learnerId: qui
              userLearner3:
                value:
                  learnerId: at
              userLearner4:
                value:
                  learnerId: quae
              userLearner5:
                value:
                  learnerId: est
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: non
                userLearner2:
                  value:
                    userLearner:
                      learnerId: veniam
                userLearner3:
                  value:
                    userLearner:
                      learnerId: et
                userLearner4:
                  value:
                    userLearner:
                      learnerId: tempora
                userLearner5:
                  value:
                    userLearner:
                      learnerId: repudiandae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserLearner
      tags:
        - Users
      summary: Modify user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLearnerRequest'
            examples:
              userLearner1:
                value:
                  learnerId: inventore
              userLearner2:
                value:
                  learnerId: unde
              userLearner3:
                value:
                  learnerId: esse
              userLearner4:
                value:
                  learnerId: et
              userLearner5:
                value:
                  learnerId: aut
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userLearner:
                    $ref: '#/components/schemas/UserLearnerResponse'
              examples:
                userLearner1:
                  value:
                    userLearner:
                      learnerId: autem
                userLearner2:
                  value:
                    userLearner:
                      learnerId: omnis
                userLearner3:
                  value:
                    userLearner:
                      learnerId: non
                userLearner4:
                  value:
                    userLearner:
                      learnerId: vitae
                userLearner5:
                  value:
                    userLearner:
                      learnerId: dolor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserLearner
      tags:
        - Users
      summary: Delete user learner
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/learners:
    get:
      operationId: listLearnersAsUser
      tags:
        - User
      summary: List learners for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: bef321b0-9340-412b-a8c6-f72794c7cf43
                    courses:
                      - name: et
                      - name: repellendus
                      - name: fugiat
                      - name: inventore
                      - name: perspiciatis
                      - name: quis
                      - name: quia
                      - name: et
                      - name: non
                      - name: totam
                      - name: est
                      - name: placeat
                      - name: nemo
                      - name: quia
                      - name: cupiditate
                      - name: beatae
                      - name: reprehenderit
                      - name: voluptatem
                      - name: quia
                      - name: ex
                course2:
                  value:
                    nextPageToken: b21b1d66-f985-4fa2-9318-b99eaf4864fd
                    courses:
                      - name: est
                      - name: maiores
                      - name: est
                      - name: provident
                      - name: quo
                      - name: et
                      - name: autem
                      - name: tempora
                      - name: dolorum
                      - name: consequuntur
                      - name: eos
                      - name: est
                      - name: esse
                      - name: eos
                      - name: aut
                      - name: magni
                      - name: distinctio
                      - name: harum
                      - name: veniam
                      - name: ut
                course3:
                  value:
                    nextPageToken: 349a06c9-ee14-43d0-b817-626034e0bbb7
                    courses:
                      - name: repudiandae
                      - name: sequi
                      - name: ea
                      - name: recusandae
                      - name: autem
                      - name: qui
                      - name: sunt
                      - name: eos
                      - name: accusamus
                      - name: laborum
                      - name: enim
                      - name: esse
                      - name: velit
                      - name: totam
                      - name: laboriosam
                      - name: est
                      - name: sint
                      - name: nemo
                      - name: sit
                      - name: voluptatem
                course4:
                  value:
                    nextPageToken: 074498e9-389f-4813-ab15-733aea8b6063
                    courses:
                      - name: quod
                      - name: odit
                      - name: earum
                      - name: atque
                      - name: consequatur
                      - name: perspiciatis
                      - name: dicta
                      - name: totam
                      - name: animi
                      - name: quasi
                      - name: et
                      - name: harum
                      - name: sit
                      - name: in
                      - name: dolor
                      - name: eius
                      - name: aperiam
                      - name: saepe
                      - name: rerum
                      - name: aliquid
                course5:
                  value:
                    nextPageToken: 93bea2cb-26a6-46fa-a6db-f25516bbfe53
                    courses:
                      - name: porro
                      - name: reiciendis
                      - name: eius
                      - name: error
                      - name: dolorum
                      - name: earum
                      - name: distinctio
                      - name: quia
                      - name: fugit
                      - name: tempora
                      - name: maiores
                      - name: porro
                      - name: dolor
                      - name: dignissimos
                      - name: qui
                      - name: autem
                      - name: sapiente
                      - name: qui
                      - name: sint
                      - name: quisquam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createLearnerAsUser
      tags:
        - User
      summary: Create learner for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: maxime
              course2:
                value:
                  name: rem
              course3:
                value:
                  name: et
              course4:
                value:
                  name: quia
              course5:
                value:
                  name: expedita
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: aut
                course2:
                  value:
                    course:
                      name: ad
                course3:
                  value:
                    course:
                      name: nam
                course4:
                  value:
                    course:
                      name: quos
                course5:
                  value:
                    course:
                      name: non
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/learners/{learnerId}':
    head:
      operationId: checkLearnerAsUser
      tags:
        - User
      summary: Check learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getLearnerAsUser
      tags:
        - User
      summary: Get learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: enim
                course2:
                  value:
                    course:
                      name: beatae
                course3:
                  value:
                    course:
                      name: commodi
                course4:
                  value:
                    course:
                      name: in
                course5:
                  value:
                    course:
                      name: quasi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceLearnerAsUser
      tags:
        - User
      summary: Replace learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: nihil
              course2:
                value:
                  name: corrupti
              course3:
                value:
                  name: aut
              course4:
                value:
                  name: culpa
              course5:
                value:
                  name: reiciendis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: esse
                course2:
                  value:
                    course:
                      name: nulla
                course3:
                  value:
                    course:
                      name: ipsum
                course4:
                  value:
                    course:
                      name: tempora
                course5:
                  value:
                    course:
                      name: aperiam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyLearnerAsUser
      tags:
        - User
      summary: Modify learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: ut
              course2:
                value:
                  name: sapiente
              course3:
                value:
                  name: numquam
              course4:
                value:
                  name: mollitia
              course5:
                value:
                  name: esse
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: illo
                course2:
                  value:
                    course:
                      name: optio
                course3:
                  value:
                    course:
                      name: eaque
                course4:
                  value:
                    course:
                      name: quam
                course5:
                  value:
                    course:
                      name: magni
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteLearnerAsUser
      tags:
        - User
      summary: Delete learner for user
      parameters:
        - in: path
          required: true
          name: learnerId
          schema:
            type: string
          description: Learner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    CourseResponse:
      properties:
        name:
          type: string
    CourseRequest:
      properties:
        name:
          type: string
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    UserContributorResponse:
      properties:
        contributorId:
          type: string
    UserContributorRequest:
      properties:
        contributorId:
          type: string
    UserLearnerResponse:
      properties:
        learnerId:
          type: string
    UserLearnerRequest:
      properties:
        learnerId:
          type: string
