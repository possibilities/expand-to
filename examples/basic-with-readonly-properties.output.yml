openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: basic with readOnly properties'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: fugit
                        fieldThatIsReadOnly: eos
                      - name: unde
                        fieldThatIsReadOnly: aspernatur
                      - name: qui
                        fieldThatIsReadOnly: vitae
                      - name: dicta
                        fieldThatIsReadOnly: vitae
                      - name: aut
                        fieldThatIsReadOnly: iste
                      - name: omnis
                        fieldThatIsReadOnly: et
                      - name: dolor
                        fieldThatIsReadOnly: ducimus
                      - name: consequatur
                        fieldThatIsReadOnly: molestias
                      - name: sit
                        fieldThatIsReadOnly: eaque
                      - name: aspernatur
                        fieldThatIsReadOnly: sit
                      - name: nobis
                        fieldThatIsReadOnly: in
                      - name: quia
                        fieldThatIsReadOnly: sunt
                      - name: dolorem
                        fieldThatIsReadOnly: id
                      - name: mollitia
                        fieldThatIsReadOnly: accusamus
                      - name: fuga
                        fieldThatIsReadOnly: veritatis
                      - name: dignissimos
                        fieldThatIsReadOnly: veritatis
                      - name: officia
                        fieldThatIsReadOnly: et
                      - name: aut
                        fieldThatIsReadOnly: iure
                      - name: quaerat
                        fieldThatIsReadOnly: asperiores
                      - name: quod
                        fieldThatIsReadOnly: repellendus
                pet2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: nesciunt
                        fieldThatIsReadOnly: ipsa
                      - name: atque
                        fieldThatIsReadOnly: non
                      - name: minima
                        fieldThatIsReadOnly: iure
                      - name: aliquid
                        fieldThatIsReadOnly: aperiam
                      - name: consequatur
                        fieldThatIsReadOnly: doloribus
                      - name: praesentium
                        fieldThatIsReadOnly: quia
                      - name: dolorem
                        fieldThatIsReadOnly: dolores
                      - name: distinctio
                        fieldThatIsReadOnly: non
                      - name: voluptas
                        fieldThatIsReadOnly: doloremque
                      - name: sapiente
                        fieldThatIsReadOnly: dolores
                      - name: quibusdam
                        fieldThatIsReadOnly: ad
                      - name: ut
                        fieldThatIsReadOnly: aliquid
                      - name: et
                        fieldThatIsReadOnly: magni
                      - name: ut
                        fieldThatIsReadOnly: molestiae
                      - name: maiores
                        fieldThatIsReadOnly: totam
                      - name: sit
                        fieldThatIsReadOnly: officia
                      - name: ut
                        fieldThatIsReadOnly: temporibus
                      - name: cupiditate
                        fieldThatIsReadOnly: vero
                      - name: temporibus
                        fieldThatIsReadOnly: unde
                      - name: qui
                        fieldThatIsReadOnly: ex
                pet3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: nesciunt
                        fieldThatIsReadOnly: et
                      - name: pariatur
                        fieldThatIsReadOnly: voluptate
                      - name: dignissimos
                        fieldThatIsReadOnly: inventore
                      - name: minima
                        fieldThatIsReadOnly: in
                      - name: odit
                        fieldThatIsReadOnly: sit
                      - name: et
                        fieldThatIsReadOnly: dolorem
                      - name: repudiandae
                        fieldThatIsReadOnly: nisi
                      - name: reiciendis
                        fieldThatIsReadOnly: qui
                      - name: in
                        fieldThatIsReadOnly: animi
                      - name: est
                        fieldThatIsReadOnly: explicabo
                      - name: eveniet
                        fieldThatIsReadOnly: magni
                      - name: saepe
                        fieldThatIsReadOnly: dignissimos
                      - name: quos
                        fieldThatIsReadOnly: repellendus
                      - name: rerum
                        fieldThatIsReadOnly: molestiae
                      - name: sit
                        fieldThatIsReadOnly: exercitationem
                      - name: voluptatem
                        fieldThatIsReadOnly: ea
                      - name: occaecati
                        fieldThatIsReadOnly: et
                      - name: deleniti
                        fieldThatIsReadOnly: ut
                      - name: numquam
                        fieldThatIsReadOnly: nam
                      - name: eum
                        fieldThatIsReadOnly: quos
                pet4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: laboriosam
                        fieldThatIsReadOnly: dolores
                      - name: perspiciatis
                        fieldThatIsReadOnly: explicabo
                      - name: occaecati
                        fieldThatIsReadOnly: quasi
                      - name: autem
                        fieldThatIsReadOnly: totam
                      - name: qui
                        fieldThatIsReadOnly: ratione
                      - name: magni
                        fieldThatIsReadOnly: ab
                      - name: neque
                        fieldThatIsReadOnly: esse
                      - name: soluta
                        fieldThatIsReadOnly: rerum
                      - name: eum
                        fieldThatIsReadOnly: voluptatem
                      - name: tempora
                        fieldThatIsReadOnly: omnis
                      - name: et
                        fieldThatIsReadOnly: quia
                      - name: dolor
                        fieldThatIsReadOnly: debitis
                      - name: minus
                        fieldThatIsReadOnly: cupiditate
                      - name: blanditiis
                        fieldThatIsReadOnly: vitae
                      - name: est
                        fieldThatIsReadOnly: non
                      - name: dolore
                        fieldThatIsReadOnly: natus
                      - name: esse
                        fieldThatIsReadOnly: nemo
                      - name: voluptatem
                        fieldThatIsReadOnly: sequi
                      - name: quia
                        fieldThatIsReadOnly: fugit
                      - name: mollitia
                        fieldThatIsReadOnly: nemo
                pet5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: rerum
                        fieldThatIsReadOnly: quibusdam
                      - name: non
                        fieldThatIsReadOnly: incidunt
                      - name: et
                        fieldThatIsReadOnly: praesentium
                      - name: qui
                        fieldThatIsReadOnly: assumenda
                      - name: nemo
                        fieldThatIsReadOnly: nisi
                      - name: et
                        fieldThatIsReadOnly: laboriosam
                      - name: ut
                        fieldThatIsReadOnly: sunt
                      - name: molestias
                        fieldThatIsReadOnly: dolores
                      - name: sit
                        fieldThatIsReadOnly: sed
                      - name: praesentium
                        fieldThatIsReadOnly: ipsa
                      - name: quas
                        fieldThatIsReadOnly: expedita
                      - name: ea
                        fieldThatIsReadOnly: rerum
                      - name: id
                        fieldThatIsReadOnly: ea
                      - name: facilis
                        fieldThatIsReadOnly: est
                      - name: exercitationem
                        fieldThatIsReadOnly: exercitationem
                      - name: et
                        fieldThatIsReadOnly: eveniet
                      - name: quis
                        fieldThatIsReadOnly: quod
                      - name: perspiciatis
                        fieldThatIsReadOnly: maiores
                      - name: laudantium
                        fieldThatIsReadOnly: est
                      - name: nisi
                        fieldThatIsReadOnly: deleniti
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: qui
              pet2:
                value:
                  name: molestiae
              pet3:
                value:
                  name: quo
              pet4:
                value:
                  name: perferendis
              pet5:
                value:
                  name: minima
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: adipisci
                      fieldThatIsReadOnly: eum
                pet2:
                  value:
                    pet:
                      name: suscipit
                      fieldThatIsReadOnly: vitae
                pet3:
                  value:
                    pet:
                      name: officia
                      fieldThatIsReadOnly: accusamus
                pet4:
                  value:
                    pet:
                      name: labore
                      fieldThatIsReadOnly: dolore
                pet5:
                  value:
                    pet:
                      name: fuga
                      fieldThatIsReadOnly: ea
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: culpa
                      fieldThatIsReadOnly: non
                pet2:
                  value:
                    pet:
                      name: rem
                      fieldThatIsReadOnly: voluptatem
                pet3:
                  value:
                    pet:
                      name: eum
                      fieldThatIsReadOnly: quasi
                pet4:
                  value:
                    pet:
                      name: est
                      fieldThatIsReadOnly: at
                pet5:
                  value:
                    pet:
                      name: dolores
                      fieldThatIsReadOnly: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: eum
              pet2:
                value:
                  name: minima
              pet3:
                value:
                  name: dolores
              pet4:
                value:
                  name: ut
              pet5:
                value:
                  name: sint
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: tenetur
                      fieldThatIsReadOnly: quam
                pet2:
                  value:
                    pet:
                      name: aut
                      fieldThatIsReadOnly: minus
                pet3:
                  value:
                    pet:
                      name: magnam
                      fieldThatIsReadOnly: occaecati
                pet4:
                  value:
                    pet:
                      name: cumque
                      fieldThatIsReadOnly: commodi
                pet5:
                  value:
                    pet:
                      name: omnis
                      fieldThatIsReadOnly: sed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: corrupti
              pet2:
                value:
                  name: in
              pet3:
                value:
                  name: ratione
              pet4:
                value:
                  name: natus
              pet5:
                value:
                  name: sint
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: molestias
                      fieldThatIsReadOnly: dolore
                pet2:
                  value:
                    pet:
                      name: dolor
                      fieldThatIsReadOnly: assumenda
                pet3:
                  value:
                    pet:
                      name: eius
                      fieldThatIsReadOnly: harum
                pet4:
                  value:
                    pet:
                      name: qui
                      fieldThatIsReadOnly: id
                pet5:
                  value:
                    pet:
                      name: aut
                      fieldThatIsReadOnly: repudiandae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    PetResponse:
      properties:
        name:
          type: string
        fieldThatIsReadOnly:
          type: string
          readOnly: true
    PetRequest:
      properties:
        name:
          type: string
