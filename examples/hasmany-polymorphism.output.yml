openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: hasMany polymorphism'
paths:
  /people:
    get:
      operationId: listPeople
      tags:
        - People
      summary: List people
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      people:
                        type: array
                        items:
                          $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    nextPageToken: 8d1dbe49-0fb6-4bcf-9a52-1bfd6e6c7506
                    people:
                      - name: explicabo
                      - name: illo
                      - name: repudiandae
                      - name: quis
                      - name: corporis
                      - name: inventore
                      - name: temporibus
                      - name: dicta
                      - name: deserunt
                      - name: quia
                      - name: inventore
                      - name: aliquid
                      - name: qui
                      - name: eos
                      - name: sed
                      - name: placeat
                      - name: debitis
                      - name: consequatur
                      - name: consequatur
                      - name: at
                person2:
                  value:
                    nextPageToken: 99e51dd4-7449-4557-871f-e32d710263ec
                    people:
                      - name: adipisci
                      - name: reiciendis
                      - name: numquam
                      - name: et
                      - name: similique
                      - name: non
                      - name: voluptas
                      - name: quo
                      - name: et
                      - name: culpa
                      - name: quidem
                      - name: est
                      - name: beatae
                      - name: dolorem
                      - name: laborum
                      - name: nihil
                      - name: optio
                      - name: consequatur
                      - name: suscipit
                      - name: pariatur
                person3:
                  value:
                    nextPageToken: a6565cc8-57c9-4e2c-9d23-13534df3d8c2
                    people:
                      - name: sed
                      - name: sint
                      - name: earum
                      - name: blanditiis
                      - name: veniam
                      - name: ipsum
                      - name: dolorem
                      - name: quo
                      - name: rem
                      - name: hic
                      - name: numquam
                      - name: tempore
                      - name: quasi
                      - name: facilis
                      - name: ratione
                      - name: non
                      - name: repellendus
                      - name: nulla
                      - name: magni
                      - name: illo
                person4:
                  value:
                    nextPageToken: 292a7b98-4af1-4de2-973e-2739493e89e5
                    people:
                      - name: est
                      - name: fugit
                      - name: in
                      - name: ea
                      - name: ipsam
                      - name: ex
                      - name: aut
                      - name: ducimus
                      - name: aut
                      - name: soluta
                      - name: quos
                      - name: et
                      - name: eaque
                      - name: eum
                      - name: error
                      - name: illo
                      - name: quasi
                      - name: eos
                      - name: necessitatibus
                      - name: cum
                person5:
                  value:
                    nextPageToken: 48fcc887-83db-42e2-92b7-83355879ff82
                    people:
                      - name: quaerat
                      - name: consequatur
                      - name: voluptas
                      - name: cupiditate
                      - name: maiores
                      - name: omnis
                      - name: fuga
                      - name: voluptatem
                      - name: cum
                      - name: dolorum
                      - name: rerum
                      - name: rerum
                      - name: quia
                      - name: saepe
                      - name: quisquam
                      - name: ipsam
                      - name: sunt
                      - name: molestiae
                      - name: alias
                      - name: consequatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPerson
      tags:
        - People
      summary: Create person
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: consequatur
              person2:
                value:
                  name: optio
              person3:
                value:
                  name: est
              person4:
                value:
                  name: velit
              person5:
                value:
                  name: nulla
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: labore
                person2:
                  value:
                    person:
                      name: minima
                person3:
                  value:
                    person:
                      name: velit
                person4:
                  value:
                    person:
                      name: consequatur
                person5:
                  value:
                    person:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/people/{personId}':
    head:
      operationId: checkPerson
      tags:
        - People
      summary: Check person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPerson
      tags:
        - People
      summary: Get person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: voluptatibus
                person2:
                  value:
                    person:
                      name: error
                person3:
                  value:
                    person:
                      name: porro
                person4:
                  value:
                    person:
                      name: in
                person5:
                  value:
                    person:
                      name: exercitationem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePerson
      tags:
        - People
      summary: Replace person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: asperiores
              person2:
                value:
                  name: omnis
              person3:
                value:
                  name: odit
              person4:
                value:
                  name: unde
              person5:
                value:
                  name: rerum
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: fugit
                person2:
                  value:
                    person:
                      name: aspernatur
                person3:
                  value:
                    person:
                      name: voluptas
                person4:
                  value:
                    person:
                      name: dolorem
                person5:
                  value:
                    person:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPerson
      tags:
        - People
      summary: Modify person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: et
              person2:
                value:
                  name: error
              person3:
                value:
                  name: ut
              person4:
                value:
                  name: unde
              person5:
                value:
                  name: cumque
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: atque
                person2:
                  value:
                    person:
                      name: voluptas
                person3:
                  value:
                    person:
                      name: alias
                person4:
                  value:
                    person:
                      name: omnis
                person5:
                  value:
                    person:
                      name: autem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePerson
      tags:
        - People
      summary: Delete person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: c0fc77b4-f5b3-463c-b7f3-9003e5ca5a62
                    pets:
                      - name: voluptas
                      - name: et
                      - name: autem
                      - name: aut
                      - name: numquam
                      - name: maiores
                      - name: doloribus
                      - name: enim
                      - name: recusandae
                      - name: cum
                      - name: eos
                      - name: quas
                      - name: saepe
                      - name: aspernatur
                      - name: eos
                      - name: totam
                      - name: veritatis
                      - name: nam
                      - name: nulla
                      - name: eaque
                pet2:
                  value:
                    nextPageToken: 3f00fb1c-dfa2-4fb0-abde-f6b1d1e66263
                    pets:
                      - name: quaerat
                      - name: et
                      - name: quia
                      - name: et
                      - name: ea
                      - name: laboriosam
                      - name: et
                      - name: sit
                      - name: aut
                      - name: qui
                      - name: explicabo
                      - name: deserunt
                      - name: tenetur
                      - name: voluptas
                      - name: quas
                      - name: qui
                      - name: est
                      - name: natus
                      - name: neque
                      - name: nobis
                pet3:
                  value:
                    nextPageToken: e7524099-c713-4212-8d91-b912103f9912
                    pets:
                      - name: porro
                      - name: est
                      - name: quis
                      - name: quo
                      - name: voluptates
                      - name: qui
                      - name: odio
                      - name: repellat
                      - name: laudantium
                      - name: ratione
                      - name: non
                      - name: architecto
                      - name: ut
                      - name: id
                      - name: cumque
                      - name: quia
                      - name: omnis
                      - name: rerum
                      - name: id
                      - name: quo
                pet4:
                  value:
                    nextPageToken: 435a36f9-1df9-4cc5-b6a9-fffc5e32a2db
                    pets:
                      - name: quia
                      - name: eos
                      - name: laudantium
                      - name: optio
                      - name: incidunt
                      - name: maxime
                      - name: quae
                      - name: voluptatum
                      - name: commodi
                      - name: earum
                      - name: enim
                      - name: sed
                      - name: cupiditate
                      - name: quo
                      - name: sequi
                      - name: voluptatem
                      - name: occaecati
                      - name: et
                      - name: maiores
                      - name: cupiditate
                pet5:
                  value:
                    nextPageToken: 60d02b47-5ad5-4543-b5ae-72351ffcebf8
                    pets:
                      - name: dolor
                      - name: illo
                      - name: aut
                      - name: assumenda
                      - name: quod
                      - name: et
                      - name: repellendus
                      - name: labore
                      - name: voluptate
                      - name: voluptatum
                      - name: error
                      - name: amet
                      - name: ipsam
                      - name: dicta
                      - name: vel
                      - name: error
                      - name: eos
                      - name: quam
                      - name: officiis
                      - name: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: quae
              pet2:
                value:
                  name: nulla
              pet3:
                value:
                  name: neque
              pet4:
                value:
                  name: qui
              pet5:
                value:
                  name: vitae
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: sit
                pet2:
                  value:
                    pet:
                      name: odio
                pet3:
                  value:
                    pet:
                      name: ipsum
                pet4:
                  value:
                    pet:
                      name: corporis
                pet5:
                  value:
                    pet:
                      name: sed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: aut
                pet2:
                  value:
                    pet:
                      name: sit
                pet3:
                  value:
                    pet:
                      name: nobis
                pet4:
                  value:
                    pet:
                      name: cupiditate
                pet5:
                  value:
                    pet:
                      name: quos
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: aut
              pet2:
                value:
                  name: aperiam
              pet3:
                value:
                  name: laboriosam
              pet4:
                value:
                  name: nulla
              pet5:
                value:
                  name: molestiae
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: sunt
                pet2:
                  value:
                    pet:
                      name: omnis
                pet3:
                  value:
                    pet:
                      name: cum
                pet4:
                  value:
                    pet:
                      name: numquam
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: dolorem
              pet2:
                value:
                  name: ea
              pet3:
                value:
                  name: accusantium
              pet4:
                value:
                  name: minus
              pet5:
                value:
                  name: quam
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: dolor
                pet2:
                  value:
                    pet:
                      name: quos
                pet3:
                  value:
                    pet:
                      name: qui
                pet4:
                  value:
                    pet:
                      name: esse
                pet5:
                  value:
                    pet:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners':
    get:
      operationId: listPetOwners
      tags:
        - Pets
      summary: List pet owners
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petOwners:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    nextPageToken: 71fc3e21-1b2c-4d57-af27-750fa6cffd19
                    petOwners:
                      - ownerId: nisi
                      - ownerId: natus
                      - ownerId: optio
                      - ownerId: aut
                      - ownerId: architecto
                      - ownerId: et
                      - ownerId: veritatis
                      - ownerId: eum
                      - ownerId: aperiam
                      - ownerId: repellendus
                      - ownerId: consequatur
                      - ownerId: esse
                      - ownerId: tempore
                      - ownerId: hic
                      - ownerId: quis
                      - ownerId: magni
                      - ownerId: consequatur
                      - ownerId: dolores
                      - ownerId: deserunt
                      - ownerId: consequatur
                petOwner2:
                  value:
                    nextPageToken: 0f854bc4-e726-4344-9b35-57e7adf837a9
                    petOwners:
                      - ownerId: quo
                      - ownerId: dolore
                      - ownerId: et
                      - ownerId: nisi
                      - ownerId: quae
                      - ownerId: quas
                      - ownerId: consequatur
                      - ownerId: nobis
                      - ownerId: nulla
                      - ownerId: iure
                      - ownerId: enim
                      - ownerId: deleniti
                      - ownerId: sed
                      - ownerId: sit
                      - ownerId: veniam
                      - ownerId: aut
                      - ownerId: quos
                      - ownerId: nesciunt
                      - ownerId: aspernatur
                      - ownerId: recusandae
                petOwner3:
                  value:
                    nextPageToken: 21e80364-da5b-483b-923b-57786ffe383a
                    petOwners:
                      - ownerId: error
                      - ownerId: omnis
                      - ownerId: fugiat
                      - ownerId: cumque
                      - ownerId: sed
                      - ownerId: expedita
                      - ownerId: sed
                      - ownerId: pariatur
                      - ownerId: omnis
                      - ownerId: hic
                      - ownerId: amet
                      - ownerId: sapiente
                      - ownerId: autem
                      - ownerId: reiciendis
                      - ownerId: eius
                      - ownerId: est
                      - ownerId: explicabo
                      - ownerId: exercitationem
                      - ownerId: hic
                      - ownerId: qui
                petOwner4:
                  value:
                    nextPageToken: 1f1c8072-c5ef-4afa-a3ae-054b2080ffd8
                    petOwners:
                      - ownerId: tempore
                      - ownerId: beatae
                      - ownerId: quae
                      - ownerId: voluptatem
                      - ownerId: quae
                      - ownerId: dolore
                      - ownerId: illum
                      - ownerId: dolor
                      - ownerId: voluptas
                      - ownerId: voluptates
                      - ownerId: itaque
                      - ownerId: vel
                      - ownerId: quidem
                      - ownerId: aperiam
                      - ownerId: qui
                      - ownerId: explicabo
                      - ownerId: sit
                      - ownerId: sit
                      - ownerId: ad
                      - ownerId: laudantium
                petOwner5:
                  value:
                    nextPageToken: d2653e73-109b-42cd-8531-5f5406c6f4ec
                    petOwners:
                      - ownerId: vero
                      - ownerId: id
                      - ownerId: repellat
                      - ownerId: numquam
                      - ownerId: ea
                      - ownerId: eligendi
                      - ownerId: omnis
                      - ownerId: eum
                      - ownerId: molestias
                      - ownerId: officiis
                      - ownerId: qui
                      - ownerId: pariatur
                      - ownerId: ipsa
                      - ownerId: neque
                      - ownerId: dicta
                      - ownerId: voluptas
                      - ownerId: cum
                      - ownerId: dicta
                      - ownerId: eligendi
                      - ownerId: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwner
      tags:
        - Pets
      summary: Create pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: nisi
              petOwner2:
                value:
                  ownerId: non
              petOwner3:
                value:
                  ownerId: esse
              petOwner4:
                value:
                  ownerId: saepe
              petOwner5:
                value:
                  ownerId: iusto
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: incidunt
                petOwner2:
                  value:
                    petOwner:
                      ownerId: sed
                petOwner3:
                  value:
                    petOwner:
                      ownerId: voluptas
                petOwner4:
                  value:
                    petOwner:
                      ownerId: libero
                petOwner5:
                  value:
                    petOwner:
                      ownerId: velit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners/{ownerId}':
    head:
      operationId: checkPetOwner
      tags:
        - Pets
      summary: Check pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwner
      tags:
        - Pets
      summary: Get pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: perspiciatis
                petOwner2:
                  value:
                    petOwner:
                      ownerId: rerum
                petOwner3:
                  value:
                    petOwner:
                      ownerId: totam
                petOwner4:
                  value:
                    petOwner:
                      ownerId: itaque
                petOwner5:
                  value:
                    petOwner:
                      ownerId: quae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwner
      tags:
        - Pets
      summary: Replace pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: quia
              petOwner2:
                value:
                  ownerId: at
              petOwner3:
                value:
                  ownerId: qui
              petOwner4:
                value:
                  ownerId: ab
              petOwner5:
                value:
                  ownerId: corrupti
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: ut
                petOwner2:
                  value:
                    petOwner:
                      ownerId: possimus
                petOwner3:
                  value:
                    petOwner:
                      ownerId: ut
                petOwner4:
                  value:
                    petOwner:
                      ownerId: neque
                petOwner5:
                  value:
                    petOwner:
                      ownerId: cum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwner
      tags:
        - Pets
      summary: Modify pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: et
              petOwner2:
                value:
                  ownerId: aut
              petOwner3:
                value:
                  ownerId: modi
              petOwner4:
                value:
                  ownerId: deserunt
              petOwner5:
                value:
                  ownerId: rem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: quidem
                petOwner2:
                  value:
                    petOwner:
                      ownerId: quo
                petOwner3:
                  value:
                    petOwner:
                      ownerId: fugit
                petOwner4:
                  value:
                    petOwner:
                      ownerId: fugit
                petOwner5:
                  value:
                    petOwner:
                      ownerId: non
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwner
      tags:
        - Pets
      summary: Delete pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors':
    get:
      operationId: listPetDoctors
      tags:
        - Pets
      summary: List pet doctors
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petDoctors:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    nextPageToken: 579f79f8-1321-4524-9ebc-65ff67ff8732
                    petDoctors:
                      - doctorId: voluptatem
                      - doctorId: accusantium
                      - doctorId: est
                      - doctorId: eius
                      - doctorId: explicabo
                      - doctorId: quos
                      - doctorId: earum
                      - doctorId: ipsum
                      - doctorId: sapiente
                      - doctorId: eligendi
                      - doctorId: non
                      - doctorId: ipsam
                      - doctorId: eligendi
                      - doctorId: sed
                      - doctorId: numquam
                      - doctorId: iste
                      - doctorId: aut
                      - doctorId: tenetur
                      - doctorId: tempora
                      - doctorId: porro
                petDoctor2:
                  value:
                    nextPageToken: 79fd68c4-08e8-46ca-996a-8d298a62623f
                    petDoctors:
                      - doctorId: et
                      - doctorId: minus
                      - doctorId: possimus
                      - doctorId: non
                      - doctorId: est
                      - doctorId: ipsam
                      - doctorId: mollitia
                      - doctorId: et
                      - doctorId: vitae
                      - doctorId: et
                      - doctorId: asperiores
                      - doctorId: natus
                      - doctorId: consequatur
                      - doctorId: sunt
                      - doctorId: praesentium
                      - doctorId: maxime
                      - doctorId: aperiam
                      - doctorId: voluptatem
                      - doctorId: illum
                      - doctorId: quia
                petDoctor3:
                  value:
                    nextPageToken: c63ee7af-a214-4064-9289-7f04d73ad8a1
                    petDoctors:
                      - doctorId: iste
                      - doctorId: rem
                      - doctorId: nostrum
                      - doctorId: delectus
                      - doctorId: molestiae
                      - doctorId: et
                      - doctorId: id
                      - doctorId: ab
                      - doctorId: et
                      - doctorId: porro
                      - doctorId: sunt
                      - doctorId: explicabo
                      - doctorId: culpa
                      - doctorId: sunt
                      - doctorId: est
                      - doctorId: aut
                      - doctorId: illo
                      - doctorId: quae
                      - doctorId: eius
                      - doctorId: quos
                petDoctor4:
                  value:
                    nextPageToken: ea5cafbe-5eaf-49c2-9972-8d71ca209e61
                    petDoctors:
                      - doctorId: eum
                      - doctorId: dolore
                      - doctorId: est
                      - doctorId: voluptate
                      - doctorId: maxime
                      - doctorId: fugit
                      - doctorId: consequatur
                      - doctorId: voluptatibus
                      - doctorId: itaque
                      - doctorId: perspiciatis
                      - doctorId: ea
                      - doctorId: labore
                      - doctorId: ut
                      - doctorId: voluptas
                      - doctorId: ut
                      - doctorId: quia
                      - doctorId: sunt
                      - doctorId: dolores
                      - doctorId: delectus
                      - doctorId: officiis
                petDoctor5:
                  value:
                    nextPageToken: 1ac2b619-fe57-4918-91ab-533022db5e61
                    petDoctors:
                      - doctorId: ratione
                      - doctorId: voluptatem
                      - doctorId: voluptate
                      - doctorId: cupiditate
                      - doctorId: error
                      - doctorId: dolor
                      - doctorId: molestias
                      - doctorId: dolorem
                      - doctorId: provident
                      - doctorId: sit
                      - doctorId: qui
                      - doctorId: ea
                      - doctorId: aut
                      - doctorId: beatae
                      - doctorId: aut
                      - doctorId: velit
                      - doctorId: voluptatibus
                      - doctorId: impedit
                      - doctorId: quia
                      - doctorId: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetDoctor
      tags:
        - Pets
      summary: Create pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: dolorem
              petDoctor2:
                value:
                  doctorId: dolor
              petDoctor3:
                value:
                  doctorId: ipsum
              petDoctor4:
                value:
                  doctorId: voluptatibus
              petDoctor5:
                value:
                  doctorId: consequuntur
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: hic
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: voluptate
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: ex
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: id
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: corporis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors/{doctorId}':
    head:
      operationId: checkPetDoctor
      tags:
        - Pets
      summary: Check pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetDoctor
      tags:
        - Pets
      summary: Get pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: magnam
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: fuga
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: error
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: quasi
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: dolores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetDoctor
      tags:
        - Pets
      summary: Replace pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: et
              petDoctor2:
                value:
                  doctorId: et
              petDoctor3:
                value:
                  doctorId: assumenda
              petDoctor4:
                value:
                  doctorId: asperiores
              petDoctor5:
                value:
                  doctorId: facilis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: praesentium
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: voluptas
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: minus
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: accusamus
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: doloremque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetDoctor
      tags:
        - Pets
      summary: Modify pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: dicta
              petDoctor2:
                value:
                  doctorId: ipsam
              petDoctor3:
                value:
                  doctorId: saepe
              petDoctor4:
                value:
                  doctorId: at
              petDoctor5:
                value:
                  doctorId: consequatur
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: vitae
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: cumque
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: perspiciatis
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: fugit
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: vero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetDoctor
      tags:
        - Pets
      summary: Delete pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    PersonResponse:
      properties:
        name:
          type: string
    PersonRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetOwnerResponse:
      properties:
        ownerId:
          type: string
    PetOwnerRequest:
      properties:
        ownerId:
          type: string
    PetDoctorResponse:
      properties:
        doctorId:
          type: string
    PetDoctorRequest:
      properties:
        doctorId:
          type: string
