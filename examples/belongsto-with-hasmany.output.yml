openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: belongsTo with hasMany'
paths:
  /owners:
    get:
      operationId: listOwners
      tags:
        - Owners
      summary: List owners
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owners:
                    type: array
                    items:
                      $ref: '#/components/schemas/OwnerResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                owner1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    owners:
                      - name: non
                      - name: est
                      - name: at
                      - name: tempora
                      - name: maxime
                      - name: debitis
                      - name: repellat
                      - name: aut
                      - name: excepturi
                      - name: eum
                      - name: provident
                      - name: qui
                      - name: sapiente
                      - name: ducimus
                      - name: maxime
                      - name: dicta
                      - name: non
                      - name: earum
                      - name: voluptatem
                      - name: inventore
                owner2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    owners:
                      - name: quos
                      - name: pariatur
                      - name: culpa
                      - name: iste
                      - name: est
                      - name: laboriosam
                      - name: eveniet
                      - name: ut
                      - name: et
                      - name: a
                      - name: similique
                      - name: error
                      - name: pariatur
                      - name: error
                      - name: in
                      - name: harum
                      - name: beatae
                      - name: nihil
                      - name: voluptas
                      - name: qui
                owner3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    owners:
                      - name: eaque
                      - name: sunt
                      - name: consequatur
                      - name: est
                      - name: saepe
                      - name: suscipit
                      - name: molestiae
                      - name: officiis
                      - name: deleniti
                      - name: dolorum
                      - name: occaecati
                      - name: blanditiis
                      - name: dolores
                      - name: a
                      - name: consequatur
                      - name: eius
                      - name: sit
                      - name: distinctio
                      - name: et
                      - name: consequatur
                owner4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    owners:
                      - name: aut
                      - name: quos
                      - name: est
                      - name: odio
                      - name: inventore
                      - name: iure
                      - name: perspiciatis
                      - name: voluptatem
                      - name: ut
                      - name: minima
                      - name: quos
                      - name: quis
                      - name: sed
                      - name: magni
                      - name: eligendi
                      - name: nulla
                      - name: reiciendis
                      - name: nihil
                      - name: cupiditate
                      - name: ad
                owner5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    owners:
                      - name: explicabo
                      - name: similique
                      - name: natus
                      - name: qui
                      - name: omnis
                      - name: quod
                      - name: laboriosam
                      - name: vitae
                      - name: repudiandae
                      - name: fuga
                      - name: saepe
                      - name: dolor
                      - name: ut
                      - name: numquam
                      - name: voluptas
                      - name: nam
                      - name: et
                      - name: voluptates
                      - name: ut
                      - name: libero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createOwner
      tags:
        - Owners
      summary: Create owner
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
            examples:
              owner1:
                value:
                  name: explicabo
              owner2:
                value:
                  name: atque
              owner3:
                value:
                  name: atque
              owner4:
                value:
                  name: temporibus
              owner5:
                value:
                  name: eum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: voluptatum
                owner2:
                  value:
                    owner:
                      name: consequuntur
                owner3:
                  value:
                    owner:
                      name: et
                owner4:
                  value:
                    owner:
                      name: id
                owner5:
                  value:
                    owner:
                      name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/owners/{ownerId}':
    head:
      operationId: checkOwner
      tags:
        - Owners
      summary: Check owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getOwner
      tags:
        - Owners
      summary: Get owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: recusandae
                owner2:
                  value:
                    owner:
                      name: aliquid
                owner3:
                  value:
                    owner:
                      name: earum
                owner4:
                  value:
                    owner:
                      name: non
                owner5:
                  value:
                    owner:
                      name: fuga
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceOwner
      tags:
        - Owners
      summary: Replace owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
            examples:
              owner1:
                value:
                  name: optio
              owner2:
                value:
                  name: voluptatem
              owner3:
                value:
                  name: dolorem
              owner4:
                value:
                  name: excepturi
              owner5:
                value:
                  name: doloremque
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: totam
                owner2:
                  value:
                    owner:
                      name: animi
                owner3:
                  value:
                    owner:
                      name: et
                owner4:
                  value:
                    owner:
                      name: consequatur
                owner5:
                  value:
                    owner:
                      name: dolor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateOwner
      tags:
        - Owners
      summary: Update owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerRequest'
            examples:
              owner1:
                value:
                  name: temporibus
              owner2:
                value:
                  name: provident
              owner3:
                value:
                  name: molestias
              owner4:
                value:
                  name: provident
              owner5:
                value:
                  name: libero
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    $ref: '#/components/schemas/OwnerResponse'
              examples:
                owner1:
                  value:
                    owner:
                      name: eligendi
                owner2:
                  value:
                    owner:
                      name: suscipit
                owner3:
                  value:
                    owner:
                      name: iure
                owner4:
                  value:
                    owner:
                      name: dolorum
                owner5:
                  value:
                    owner:
                      name: excepturi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteOwner
      tags:
        - Owners
      summary: Delete owner
      parameters:
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /committers:
    get:
      operationId: listCommitters
      tags:
        - Committers
      summary: List committers
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committers:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommitterResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                committer1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    committers:
                      - name: impedit
                      - name: autem
                      - name: et
                      - name: aut
                      - name: explicabo
                      - name: magnam
                      - name: reprehenderit
                      - name: quod
                      - name: accusamus
                      - name: dicta
                      - name: et
                      - name: mollitia
                      - name: dicta
                      - name: molestiae
                      - name: sunt
                      - name: et
                      - name: repellendus
                      - name: neque
                      - name: quia
                      - name: aspernatur
                committer2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    committers:
                      - name: temporibus
                      - name: sunt
                      - name: eligendi
                      - name: qui
                      - name: tempore
                      - name: asperiores
                      - name: consequatur
                      - name: harum
                      - name: quam
                      - name: dolorem
                      - name: veniam
                      - name: quaerat
                      - name: quod
                      - name: delectus
                      - name: nulla
                      - name: laborum
                      - name: iste
                      - name: eos
                      - name: autem
                      - name: dolores
                committer3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    committers:
                      - name: similique
                      - name: aspernatur
                      - name: illo
                      - name: nihil
                      - name: asperiores
                      - name: qui
                      - name: labore
                      - name: doloribus
                      - name: illo
                      - name: dolores
                      - name: ratione
                      - name: quia
                      - name: et
                      - name: nihil
                      - name: id
                      - name: non
                      - name: enim
                      - name: esse
                      - name: neque
                      - name: voluptatibus
                committer4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    committers:
                      - name: earum
                      - name: non
                      - name: rerum
                      - name: cumque
                      - name: accusantium
                      - name: ratione
                      - name: ut
                      - name: et
                      - name: quo
                      - name: temporibus
                      - name: praesentium
                      - name: corrupti
                      - name: molestiae
                      - name: ea
                      - name: odio
                      - name: similique
                      - name: qui
                      - name: ea
                      - name: sit
                      - name: ipsum
                committer5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    committers:
                      - name: porro
                      - name: quo
                      - name: est
                      - name: odio
                      - name: magni
                      - name: repellat
                      - name: quam
                      - name: id
                      - name: dolorum
                      - name: natus
                      - name: magnam
                      - name: quasi
                      - name: aut
                      - name: sed
                      - name: dolor
                      - name: optio
                      - name: quae
                      - name: omnis
                      - name: libero
                      - name: deserunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCommitter
      tags:
        - Committers
      summary: Create committer
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitterRequest'
            examples:
              committer1:
                value:
                  name: eligendi
              committer2:
                value:
                  name: ea
              committer3:
                value:
                  name: sunt
              committer4:
                value:
                  name: dolores
              committer5:
                value:
                  name: quia
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: rem
                committer2:
                  value:
                    committer:
                      name: voluptatibus
                committer3:
                  value:
                    committer:
                      name: ut
                committer4:
                  value:
                    committer:
                      name: id
                committer5:
                  value:
                    committer:
                      name: sunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/committers/{committerId}':
    head:
      operationId: checkCommitter
      tags:
        - Committers
      summary: Check committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCommitter
      tags:
        - Committers
      summary: Get committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: sit
                committer2:
                  value:
                    committer:
                      name: voluptatibus
                committer3:
                  value:
                    committer:
                      name: aut
                committer4:
                  value:
                    committer:
                      name: adipisci
                committer5:
                  value:
                    committer:
                      name: fugit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCommitter
      tags:
        - Committers
      summary: Replace committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitterRequest'
            examples:
              committer1:
                value:
                  name: sed
              committer2:
                value:
                  name: quia
              committer3:
                value:
                  name: ex
              committer4:
                value:
                  name: numquam
              committer5:
                value:
                  name: dolor
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: temporibus
                committer2:
                  value:
                    committer:
                      name: illum
                committer3:
                  value:
                    committer:
                      name: porro
                committer4:
                  value:
                    committer:
                      name: enim
                committer5:
                  value:
                    committer:
                      name: odit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateCommitter
      tags:
        - Committers
      summary: Update committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitterRequest'
            examples:
              committer1:
                value:
                  name: aut
              committer2:
                value:
                  name: id
              committer3:
                value:
                  name: expedita
              committer4:
                value:
                  name: est
              committer5:
                value:
                  name: eaque
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  committer:
                    $ref: '#/components/schemas/CommitterResponse'
              examples:
                committer1:
                  value:
                    committer:
                      name: temporibus
                committer2:
                  value:
                    committer:
                      name: eius
                committer3:
                  value:
                    committer:
                      name: et
                committer4:
                  value:
                    committer:
                      name: quibusdam
                committer5:
                  value:
                    committer:
                      name: harum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCommitter
      tags:
        - Committers
      summary: Delete committer
      parameters:
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /repos:
    get:
      operationId: listRepos
      tags:
        - Repos
      summary: List repos
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repos:
                    type: array
                    items:
                      $ref: '#/components/schemas/RepoResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                repo1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repos:
                      - name: officiis
                      - name: nostrum
                      - name: ab
                      - name: aspernatur
                      - name: qui
                      - name: necessitatibus
                      - name: tenetur
                      - name: impedit
                      - name: eaque
                      - name: ex
                      - name: consequatur
                      - name: ut
                      - name: perferendis
                      - name: qui
                      - name: vel
                      - name: aliquid
                      - name: quia
                      - name: nam
                      - name: autem
                      - name: neque
                repo2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repos:
                      - name: exercitationem
                      - name: at
                      - name: officia
                      - name: aut
                      - name: animi
                      - name: architecto
                      - name: et
                      - name: perspiciatis
                      - name: est
                      - name: autem
                      - name: sed
                      - name: enim
                      - name: molestiae
                      - name: natus
                      - name: suscipit
                      - name: qui
                      - name: vero
                      - name: rerum
                      - name: corporis
                      - name: libero
                repo3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repos:
                      - name: et
                      - name: exercitationem
                      - name: dicta
                      - name: explicabo
                      - name: est
                      - name: nam
                      - name: qui
                      - name: incidunt
                      - name: reiciendis
                      - name: reiciendis
                      - name: tempore
                      - name: modi
                      - name: qui
                      - name: recusandae
                      - name: cum
                      - name: itaque
                      - name: reiciendis
                      - name: dolorem
                      - name: corrupti
                      - name: autem
                repo4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repos:
                      - name: quia
                      - name: aut
                      - name: sed
                      - name: est
                      - name: earum
                      - name: facere
                      - name: vel
                      - name: ex
                      - name: odio
                      - name: quisquam
                      - name: ut
                      - name: quae
                      - name: dolor
                      - name: quisquam
                      - name: voluptate
                      - name: nostrum
                      - name: et
                      - name: quibusdam
                      - name: quo
                      - name: et
                repo5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repos:
                      - name: officiis
                      - name: dolor
                      - name: ut
                      - name: repudiandae
                      - name: deleniti
                      - name: ut
                      - name: dolorem
                      - name: necessitatibus
                      - name: commodi
                      - name: at
                      - name: vel
                      - name: eius
                      - name: nihil
                      - name: voluptas
                      - name: iste
                      - name: magni
                      - name: dolorem
                      - name: eligendi
                      - name: quis
                      - name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepo
      tags:
        - Repos
      summary: Create repo
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoRequest'
            examples:
              repo1:
                value:
                  name: dolorem
              repo2:
                value:
                  name: harum
              repo3:
                value:
                  name: sint
              repo4:
                value:
                  name: fugiat
              repo5:
                value:
                  name: quo
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: aut
                repo2:
                  value:
                    repo:
                      name: excepturi
                repo3:
                  value:
                    repo:
                      name: ut
                repo4:
                  value:
                    repo:
                      name: quibusdam
                repo5:
                  value:
                    repo:
                      name: cupiditate
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}':
    head:
      operationId: checkRepo
      tags:
        - Repos
      summary: Check repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepo
      tags:
        - Repos
      summary: Get repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: qui
                repo2:
                  value:
                    repo:
                      name: pariatur
                repo3:
                  value:
                    repo:
                      name: quia
                repo4:
                  value:
                    repo:
                      name: molestiae
                repo5:
                  value:
                    repo:
                      name: sint
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepo
      tags:
        - Repos
      summary: Replace repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoRequest'
            examples:
              repo1:
                value:
                  name: porro
              repo2:
                value:
                  name: eum
              repo3:
                value:
                  name: error
              repo4:
                value:
                  name: quo
              repo5:
                value:
                  name: expedita
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: occaecati
                repo2:
                  value:
                    repo:
                      name: est
                repo3:
                  value:
                    repo:
                      name: nesciunt
                repo4:
                  value:
                    repo:
                      name: magnam
                repo5:
                  value:
                    repo:
                      name: quod
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateRepo
      tags:
        - Repos
      summary: Update repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoRequest'
            examples:
              repo1:
                value:
                  name: quos
              repo2:
                value:
                  name: saepe
              repo3:
                value:
                  name: perferendis
              repo4:
                value:
                  name: sapiente
              repo5:
                value:
                  name: modi
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repo:
                    $ref: '#/components/schemas/RepoResponse'
              examples:
                repo1:
                  value:
                    repo:
                      name: rerum
                repo2:
                  value:
                    repo:
                      name: cumque
                repo3:
                  value:
                    repo:
                      name: soluta
                repo4:
                  value:
                    repo:
                      name: labore
                repo5:
                  value:
                    repo:
                      name: assumenda
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepo
      tags:
        - Repos
      summary: Delete repo
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits':
    get:
      operationId: listRepoCommits
      tags:
        - Repos
      summary: List repo commits
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commits:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommitResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                commit1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commits:
                      - name: quisquam
                      - name: magni
                      - name: reiciendis
                      - name: consequuntur
                      - name: voluptatibus
                      - name: eos
                      - name: debitis
                      - name: cupiditate
                      - name: consequuntur
                      - name: quo
                      - name: distinctio
                      - name: quod
                      - name: in
                      - name: velit
                      - name: qui
                      - name: tempora
                      - name: necessitatibus
                      - name: repellat
                      - name: voluptatem
                      - name: ea
                commit2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commits:
                      - name: consectetur
                      - name: occaecati
                      - name: officia
                      - name: eius
                      - name: labore
                      - name: mollitia
                      - name: tenetur
                      - name: numquam
                      - name: assumenda
                      - name: consectetur
                      - name: numquam
                      - name: qui
                      - name: soluta
                      - name: quia
                      - name: hic
                      - name: consequatur
                      - name: quas
                      - name: maiores
                      - name: hic
                      - name: est
                commit3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commits:
                      - name: et
                      - name: quas
                      - name: rerum
                      - name: voluptas
                      - name: ratione
                      - name: beatae
                      - name: sit
                      - name: quo
                      - name: vitae
                      - name: adipisci
                      - name: libero
                      - name: esse
                      - name: neque
                      - name: nostrum
                      - name: amet
                      - name: non
                      - name: modi
                      - name: reprehenderit
                      - name: expedita
                      - name: qui
                commit4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commits:
                      - name: blanditiis
                      - name: debitis
                      - name: id
                      - name: et
                      - name: fugit
                      - name: non
                      - name: ipsum
                      - name: quas
                      - name: laboriosam
                      - name: quia
                      - name: voluptatem
                      - name: dolores
                      - name: quasi
                      - name: debitis
                      - name: ullam
                      - name: sunt
                      - name: maiores
                      - name: tempore
                      - name: itaque
                      - name: omnis
                commit5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commits:
                      - name: nihil
                      - name: adipisci
                      - name: quibusdam
                      - name: eaque
                      - name: qui
                      - name: quo
                      - name: odio
                      - name: asperiores
                      - name: consequatur
                      - name: ut
                      - name: praesentium
                      - name: vitae
                      - name: officia
                      - name: quis
                      - name: magni
                      - name: repudiandae
                      - name: ipsum
                      - name: vel
                      - name: fuga
                      - name: iure
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepoCommit
      tags:
        - Repos
      summary: Create repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
            examples:
              commit1:
                value:
                  name: sit
              commit2:
                value:
                  name: aut
              commit3:
                value:
                  name: alias
              commit4:
                value:
                  name: illum
              commit5:
                value:
                  name: et
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: labore
                commit2:
                  value:
                    commit:
                      name: corrupti
                commit3:
                  value:
                    commit:
                      name: iure
                commit4:
                  value:
                    commit:
                      name: explicabo
                commit5:
                  value:
                    commit:
                      name: tempore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits/{commitId}':
    head:
      operationId: checkRepoCommit
      tags:
        - Repos
      summary: Check repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepoCommit
      tags:
        - Repos
      summary: Get repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: ullam
                commit2:
                  value:
                    commit:
                      name: accusamus
                commit3:
                  value:
                    commit:
                      name: sed
                commit4:
                  value:
                    commit:
                      name: enim
                commit5:
                  value:
                    commit:
                      name: assumenda
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepoCommit
      tags:
        - Repos
      summary: Replace repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
            examples:
              commit1:
                value:
                  name: nulla
              commit2:
                value:
                  name: reprehenderit
              commit3:
                value:
                  name: molestiae
              commit4:
                value:
                  name: cum
              commit5:
                value:
                  name: ut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: quo
                commit2:
                  value:
                    commit:
                      name: dolorem
                commit3:
                  value:
                    commit:
                      name: sed
                commit4:
                  value:
                    commit:
                      name: consequatur
                commit5:
                  value:
                    commit:
                      name: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateRepoCommit
      tags:
        - Repos
      summary: Update repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitRequest'
            examples:
              commit1:
                value:
                  name: illum
              commit2:
                value:
                  name: rerum
              commit3:
                value:
                  name: velit
              commit4:
                value:
                  name: praesentium
              commit5:
                value:
                  name: nobis
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commit:
                    $ref: '#/components/schemas/CommitResponse'
              examples:
                commit1:
                  value:
                    commit:
                      name: aliquam
                commit2:
                  value:
                    commit:
                      name: sequi
                commit3:
                  value:
                    commit:
                      name: eius
                commit4:
                  value:
                    commit:
                      name: laudantium
                commit5:
                  value:
                    commit:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepoCommit
      tags:
        - Repos
      summary: Delete repo commit
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/owners':
    get:
      operationId: listRepoOwners
      tags:
        - Repos
      summary: List repo owners
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwners:
                    type: array
                    items:
                      $ref: '#/components/schemas/RepoOwnerResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                repoOwner1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repoOwners:
                      - ownerId: quis
                      - ownerId: nisi
                      - ownerId: impedit
                      - ownerId: quasi
                      - ownerId: dolorum
                      - ownerId: quisquam
                      - ownerId: accusamus
                      - ownerId: in
                      - ownerId: suscipit
                      - ownerId: esse
                      - ownerId: laboriosam
                      - ownerId: officia
                      - ownerId: laboriosam
                      - ownerId: rerum
                      - ownerId: quia
                      - ownerId: commodi
                      - ownerId: qui
                      - ownerId: nulla
                      - ownerId: nostrum
                      - ownerId: eligendi
                repoOwner2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repoOwners:
                      - ownerId: cumque
                      - ownerId: esse
                      - ownerId: doloremque
                      - ownerId: soluta
                      - ownerId: deserunt
                      - ownerId: quo
                      - ownerId: vel
                      - ownerId: error
                      - ownerId: minima
                      - ownerId: ullam
                      - ownerId: accusamus
                      - ownerId: facilis
                      - ownerId: molestias
                      - ownerId: aliquid
                      - ownerId: qui
                      - ownerId: qui
                      - ownerId: quis
                      - ownerId: porro
                      - ownerId: ullam
                      - ownerId: incidunt
                repoOwner3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repoOwners:
                      - ownerId: saepe
                      - ownerId: quibusdam
                      - ownerId: vero
                      - ownerId: eius
                      - ownerId: velit
                      - ownerId: architecto
                      - ownerId: doloribus
                      - ownerId: quia
                      - ownerId: impedit
                      - ownerId: tenetur
                      - ownerId: hic
                      - ownerId: tempore
                      - ownerId: aut
                      - ownerId: dolores
                      - ownerId: corrupti
                      - ownerId: id
                      - ownerId: quae
                      - ownerId: nobis
                      - ownerId: iure
                      - ownerId: voluptate
                repoOwner4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repoOwners:
                      - ownerId: natus
                      - ownerId: nemo
                      - ownerId: nihil
                      - ownerId: eos
                      - ownerId: possimus
                      - ownerId: magni
                      - ownerId: cum
                      - ownerId: placeat
                      - ownerId: repellat
                      - ownerId: maiores
                      - ownerId: sequi
                      - ownerId: sint
                      - ownerId: aut
                      - ownerId: fugiat
                      - ownerId: aut
                      - ownerId: ad
                      - ownerId: ipsam
                      - ownerId: veniam
                      - ownerId: aspernatur
                      - ownerId: aliquam
                repoOwner5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    repoOwners:
                      - ownerId: delectus
                      - ownerId: expedita
                      - ownerId: iure
                      - ownerId: qui
                      - ownerId: voluptas
                      - ownerId: tenetur
                      - ownerId: molestiae
                      - ownerId: quo
                      - ownerId: neque
                      - ownerId: voluptatum
                      - ownerId: et
                      - ownerId: quia
                      - ownerId: numquam
                      - ownerId: voluptatum
                      - ownerId: cum
                      - ownerId: ipsa
                      - ownerId: dolorem
                      - ownerId: nihil
                      - ownerId: qui
                      - ownerId: nam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepoOwner
      tags:
        - Repos
      summary: Create repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoOwnerRequest'
            examples:
              repoOwner1:
                value:
                  ownerId: omnis
              repoOwner2:
                value:
                  ownerId: dicta
              repoOwner3:
                value:
                  ownerId: ut
              repoOwner4:
                value:
                  ownerId: et
              repoOwner5:
                value:
                  ownerId: voluptatibus
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: fugiat
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: placeat
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: maxime
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: velit
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: maiores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/owners/{ownerId}':
    head:
      operationId: checkRepoOwner
      tags:
        - Repos
      summary: Check repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepoOwner
      tags:
        - Repos
      summary: Get repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: aut
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: ipsam
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: exercitationem
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: ex
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: asperiores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepoOwner
      tags:
        - Repos
      summary: Replace repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoOwnerRequest'
            examples:
              repoOwner1:
                value:
                  ownerId: similique
              repoOwner2:
                value:
                  ownerId: labore
              repoOwner3:
                value:
                  ownerId: omnis
              repoOwner4:
                value:
                  ownerId: suscipit
              repoOwner5:
                value:
                  ownerId: nihil
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: quis
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: corporis
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: quam
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: numquam
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: eum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateRepoOwner
      tags:
        - Repos
      summary: Update repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepoOwnerRequest'
            examples:
              repoOwner1:
                value:
                  ownerId: autem
              repoOwner2:
                value:
                  ownerId: ea
              repoOwner3:
                value:
                  ownerId: ad
              repoOwner4:
                value:
                  ownerId: placeat
              repoOwner5:
                value:
                  ownerId: eaque
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  repoOwner:
                    $ref: '#/components/schemas/RepoOwnerResponse'
              examples:
                repoOwner1:
                  value:
                    repoOwner:
                      ownerId: consequatur
                repoOwner2:
                  value:
                    repoOwner:
                      ownerId: pariatur
                repoOwner3:
                  value:
                    repoOwner:
                      ownerId: libero
                repoOwner4:
                  value:
                    repoOwner:
                      ownerId: error
                repoOwner5:
                  value:
                    repoOwner:
                      ownerId: pariatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepoOwner
      tags:
        - Repos
      summary: Delete repo owner
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits/{commitId}/committers':
    get:
      operationId: listRepoCommitCommitters
      tags:
        - Repos
      summary: List repo commit committers
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - name: perPage
          description: Per page
          schema:
            type: string
            default: '20'
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: string
            default: '1'
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitters:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommitCommitterResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                commitCommitter1:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commitCommitters:
                      - committerId: nam
                      - committerId: veritatis
                      - committerId: voluptatem
                      - committerId: provident
                      - committerId: possimus
                      - committerId: illum
                      - committerId: consectetur
                      - committerId: sint
                      - committerId: molestiae
                      - committerId: dolor
                      - committerId: hic
                      - committerId: sapiente
                      - committerId: voluptas
                      - committerId: dolor
                      - committerId: iure
                      - committerId: qui
                      - committerId: et
                      - committerId: recusandae
                      - committerId: aut
                      - committerId: autem
                commitCommitter2:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commitCommitters:
                      - committerId: rem
                      - committerId: occaecati
                      - committerId: rerum
                      - committerId: reiciendis
                      - committerId: voluptatum
                      - committerId: rerum
                      - committerId: facere
                      - committerId: reprehenderit
                      - committerId: quia
                      - committerId: delectus
                      - committerId: ad
                      - committerId: voluptas
                      - committerId: et
                      - committerId: animi
                      - committerId: dolorem
                      - committerId: ad
                      - committerId: itaque
                      - committerId: nemo
                      - committerId: quia
                      - committerId: ea
                commitCommitter3:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commitCommitters:
                      - committerId: qui
                      - committerId: autem
                      - committerId: eveniet
                      - committerId: fuga
                      - committerId: illo
                      - committerId: neque
                      - committerId: voluptas
                      - committerId: incidunt
                      - committerId: quisquam
                      - committerId: nesciunt
                      - committerId: fugit
                      - committerId: aut
                      - committerId: occaecati
                      - committerId: dolorem
                      - committerId: et
                      - committerId: eum
                      - committerId: autem
                      - committerId: et
                      - committerId: velit
                      - committerId: omnis
                commitCommitter4:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commitCommitters:
                      - committerId: ducimus
                      - committerId: laborum
                      - committerId: sint
                      - committerId: ut
                      - committerId: iste
                      - committerId: error
                      - committerId: ut
                      - committerId: animi
                      - committerId: et
                      - committerId: iusto
                      - committerId: nihil
                      - committerId: perspiciatis
                      - committerId: dolores
                      - committerId: vero
                      - committerId: magni
                      - committerId: reiciendis
                      - committerId: tempore
                      - committerId: beatae
                      - committerId: at
                      - committerId: ducimus
                commitCommitter5:
                  value:
                    pagination:
                      firstPage: '1'
                      lastPage: '10'
                      nextPage: '2'
                      prevPage: '1'
                    commitCommitters:
                      - committerId: deserunt
                      - committerId: modi
                      - committerId: praesentium
                      - committerId: distinctio
                      - committerId: eveniet
                      - committerId: voluptate
                      - committerId: et
                      - committerId: ex
                      - committerId: aliquid
                      - committerId: velit
                      - committerId: laudantium
                      - committerId: quo
                      - committerId: quo
                      - committerId: dolorem
                      - committerId: exercitationem
                      - committerId: quisquam
                      - committerId: numquam
                      - committerId: harum
                      - committerId: voluptas
                      - committerId: accusamus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRepoCommitCommitter
      tags:
        - Repos
      summary: Create repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCommitterRequest'
            examples:
              commitCommitter1:
                value:
                  committerId: autem
              commitCommitter2:
                value:
                  committerId: deleniti
              commitCommitter3:
                value:
                  committerId: nemo
              commitCommitter4:
                value:
                  committerId: odio
              commitCommitter5:
                value:
                  committerId: nostrum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: voluptatem
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: atque
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: excepturi
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: vitae
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: amet
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/repos/{repoId}/commits/{commitId}/committers/{committerId}':
    head:
      operationId: checkRepoCommitCommitter
      tags:
        - Repos
      summary: Check repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRepoCommitCommitter
      tags:
        - Repos
      summary: Get repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: dolores
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: labore
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: ducimus
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: similique
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: magni
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRepoCommitCommitter
      tags:
        - Repos
      summary: Replace repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCommitterRequest'
            examples:
              commitCommitter1:
                value:
                  committerId: impedit
              commitCommitter2:
                value:
                  committerId: sint
              commitCommitter3:
                value:
                  committerId: doloribus
              commitCommitter4:
                value:
                  committerId: ipsum
              commitCommitter5:
                value:
                  committerId: accusantium
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: voluptates
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: quae
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: quos
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: distinctio
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: doloremque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: updateRepoCommitCommitter
      tags:
        - Repos
      summary: Update repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitCommitterRequest'
            examples:
              commitCommitter1:
                value:
                  committerId: est
              commitCommitter2:
                value:
                  committerId: a
              commitCommitter3:
                value:
                  committerId: culpa
              commitCommitter4:
                value:
                  committerId: nihil
              commitCommitter5:
                value:
                  committerId: ut
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitCommitter:
                    $ref: '#/components/schemas/CommitCommitterResponse'
              examples:
                commitCommitter1:
                  value:
                    commitCommitter:
                      committerId: vel
                commitCommitter2:
                  value:
                    commitCommitter:
                      committerId: rerum
                commitCommitter3:
                  value:
                    commitCommitter:
                      committerId: voluptas
                commitCommitter4:
                  value:
                    commitCommitter:
                      committerId: nihil
                commitCommitter5:
                  value:
                    commitCommitter:
                      committerId: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRepoCommitCommitter
      tags:
        - Repos
      summary: Delete repo commit committer
      parameters:
        - in: path
          required: true
          name: repoId
          schema:
            type: string
          description: Repo id
        - in: path
          required: true
          name: commitId
          schema:
            type: string
          description: Commit id
        - in: path
          required: true
          name: committerId
          schema:
            type: string
          description: Committer id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: number
        lastPage:
          type: number
        nextPage:
          type: number
        prevPage:
          type: number
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    OwnerResponse:
      properties:
        name:
          type: string
    OwnerRequest:
      properties:
        name:
          type: string
    CommitterResponse:
      properties:
        name:
          type: string
    CommitterRequest:
      properties:
        name:
          type: string
    RepoResponse:
      properties:
        name:
          type: string
    RepoRequest:
      properties:
        name:
          type: string
    CommitResponse:
      properties:
        name:
          type: string
    CommitRequest:
      properties:
        name:
          type: string
    RepoOwnerResponse:
      properties:
        ownerId:
          type: string
    RepoOwnerRequest:
      properties:
        ownerId:
          type: string
    CommitCommitterResponse:
      properties:
        committerId:
          type: string
    CommitCommitterRequest:
      properties:
        committerId:
          type: string
