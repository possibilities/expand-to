openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: basic with immutability'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: fc027c72-83c2-4658-a26b-84c3dc8abe13
                    pets:
                      - name: nulla
                      - name: repudiandae
                      - name: dolores
                      - name: qui
                      - name: consequatur
                      - name: exercitationem
                      - name: libero
                      - name: dolores
                      - name: natus
                      - name: voluptas
                      - name: sequi
                      - name: blanditiis
                      - name: itaque
                      - name: rem
                      - name: odit
                      - name: consequatur
                      - name: ea
                      - name: quis
                      - name: excepturi
                      - name: molestiae
                pet2:
                  value:
                    nextPageToken: 5af73f87-7ea7-45c3-8a98-6ed69a6c1d0f
                    pets:
                      - name: deserunt
                      - name: sint
                      - name: qui
                      - name: ullam
                      - name: a
                      - name: sit
                      - name: dolore
                      - name: omnis
                      - name: ipsam
                      - name: necessitatibus
                      - name: et
                      - name: quae
                      - name: consequatur
                      - name: dolorem
                      - name: rerum
                      - name: esse
                      - name: sed
                      - name: ipsum
                      - name: omnis
                      - name: error
                pet3:
                  value:
                    nextPageToken: 90e1742a-c27a-4434-9d4e-c5126eb3f6e6
                    pets:
                      - name: voluptatem
                      - name: autem
                      - name: molestiae
                      - name: eos
                      - name: rerum
                      - name: soluta
                      - name: molestiae
                      - name: sed
                      - name: consequatur
                      - name: nesciunt
                      - name: ipsa
                      - name: qui
                      - name: sunt
                      - name: natus
                      - name: ab
                      - name: assumenda
                      - name: rerum
                      - name: iure
                      - name: blanditiis
                      - name: odit
                pet4:
                  value:
                    nextPageToken: 074aad3c-275c-482c-994e-ad493b0fca6f
                    pets:
                      - name: voluptas
                      - name: ipsa
                      - name: consectetur
                      - name: numquam
                      - name: dolor
                      - name: neque
                      - name: et
                      - name: autem
                      - name: delectus
                      - name: consequuntur
                      - name: aperiam
                      - name: autem
                      - name: omnis
                      - name: deserunt
                      - name: consequatur
                      - name: maiores
                      - name: et
                      - name: dicta
                      - name: et
                      - name: qui
                pet5:
                  value:
                    nextPageToken: 7eea2829-54f2-4b5b-94ed-26f8a099fd3f
                    pets:
                      - name: voluptatem
                      - name: repellat
                      - name: optio
                      - name: enim
                      - name: omnis
                      - name: consequatur
                      - name: rerum
                      - name: qui
                      - name: maxime
                      - name: dicta
                      - name: neque
                      - name: id
                      - name: tenetur
                      - name: fugiat
                      - name: soluta
                      - name: iusto
                      - name: cumque
                      - name: quae
                      - name: non
                      - name: occaecati
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: sit
              pet2:
                value:
                  name: eum
              pet3:
                value:
                  name: illum
              pet4:
                value:
                  name: est
              pet5:
                value:
                  name: non
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: voluptatem
                pet2:
                  value:
                    pet:
                      name: consequatur
                pet3:
                  value:
                    pet:
                      name: repellendus
                pet4:
                  value:
                    pet:
                      name: enim
                pet5:
                  value:
                    pet:
                      name: ea
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: voluptatem
                pet2:
                  value:
                    pet:
                      name: debitis
                pet3:
                  value:
                    pet:
                      name: corporis
                pet4:
                  value:
                    pet:
                      name: sequi
                pet5:
                  value:
                    pet:
                      name: exercitationem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
