openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: hasMany polymorphism with users'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 5facfab5-4a1b-40ed-bff5-3c04bb201e4c
                    users:
                      - name: consequatur
                      - name: odio
                      - name: accusamus
                      - name: consequatur
                      - name: iste
                      - name: fuga
                      - name: voluptatem
                      - name: pariatur
                      - name: magni
                      - name: nulla
                      - name: voluptas
                      - name: neque
                      - name: autem
                      - name: aut
                      - name: et
                      - name: quis
                      - name: neque
                      - name: quis
                      - name: vero
                      - name: eligendi
                user2:
                  value:
                    nextPageToken: da14ec0f-e258-467f-b7df-f475a9be3419
                    users:
                      - name: a
                      - name: sit
                      - name: numquam
                      - name: nostrum
                      - name: odit
                      - name: ut
                      - name: illum
                      - name: iusto
                      - name: architecto
                      - name: ad
                      - name: qui
                      - name: ducimus
                      - name: nihil
                      - name: aut
                      - name: ut
                      - name: quia
                      - name: quaerat
                      - name: vel
                      - name: similique
                      - name: enim
                user3:
                  value:
                    nextPageToken: a063bb6f-16e7-4ecb-873a-9087baebf68e
                    users:
                      - name: eaque
                      - name: possimus
                      - name: quaerat
                      - name: ut
                      - name: fugit
                      - name: voluptatem
                      - name: minus
                      - name: blanditiis
                      - name: magni
                      - name: doloremque
                      - name: atque
                      - name: praesentium
                      - name: in
                      - name: unde
                      - name: quo
                      - name: possimus
                      - name: nostrum
                      - name: beatae
                      - name: aut
                      - name: dolores
                user4:
                  value:
                    nextPageToken: 8d126ca6-252c-4bcc-9326-72b4ff9f1f8e
                    users:
                      - name: rerum
                      - name: alias
                      - name: non
                      - name: quasi
                      - name: corporis
                      - name: eum
                      - name: numquam
                      - name: exercitationem
                      - name: quisquam
                      - name: explicabo
                      - name: facere
                      - name: dolor
                      - name: consequuntur
                      - name: dignissimos
                      - name: delectus
                      - name: qui
                      - name: ea
                      - name: repellendus
                      - name: quidem
                      - name: dolorum
                user5:
                  value:
                    nextPageToken: ef93db39-5fb7-4696-b7d2-aee586666fcf
                    users:
                      - name: ut
                      - name: vero
                      - name: explicabo
                      - name: cumque
                      - name: neque
                      - name: aut
                      - name: praesentium
                      - name: quas
                      - name: quae
                      - name: ipsa
                      - name: facilis
                      - name: numquam
                      - name: quia
                      - name: quae
                      - name: fuga
                      - name: nostrum
                      - name: qui
                      - name: et
                      - name: quia
                      - name: nisi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: ut
              user2:
                value:
                  name: atque
              user3:
                value:
                  name: voluptatem
              user4:
                value:
                  name: id
              user5:
                value:
                  name: rerum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: laboriosam
                user2:
                  value:
                    user:
                      name: delectus
                user3:
                  value:
                    user:
                      name: aliquid
                user4:
                  value:
                    user:
                      name: non
                user5:
                  value:
                    user:
                      name: sed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: sit
                user2:
                  value:
                    user:
                      name: et
                user3:
                  value:
                    user:
                      name: necessitatibus
                user4:
                  value:
                    user:
                      name: eaque
                user5:
                  value:
                    user:
                      name: inventore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: eos
              user2:
                value:
                  name: ducimus
              user3:
                value:
                  name: magni
              user4:
                value:
                  name: doloremque
              user5:
                value:
                  name: aut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: ea
                user2:
                  value:
                    user:
                      name: odio
                user3:
                  value:
                    user:
                      name: qui
                user4:
                  value:
                    user:
                      name: dolorum
                user5:
                  value:
                    user:
                      name: nostrum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: iure
              user2:
                value:
                  name: deleniti
              user3:
                value:
                  name: illum
              user4:
                value:
                  name: nulla
              user5:
                value:
                  name: ratione
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: quis
                user2:
                  value:
                    user:
                      name: aliquid
                user3:
                  value:
                    user:
                      name: ex
                user4:
                  value:
                    user:
                      name: et
                user5:
                  value:
                    user:
                      name: provident
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 49efd955-d795-4e94-a174-aeb3408737af
                    pets:
                      - name: modi
                      - name: qui
                      - name: occaecati
                      - name: quam
                      - name: ad
                      - name: velit
                      - name: aut
                      - name: vero
                      - name: modi
                      - name: sint
                      - name: sit
                      - name: voluptate
                      - name: qui
                      - name: similique
                      - name: provident
                      - name: et
                      - name: inventore
                      - name: vero
                      - name: laborum
                      - name: rerum
                pet2:
                  value:
                    nextPageToken: 75329d0d-07e6-495a-b56a-ce54b75354a9
                    pets:
                      - name: placeat
                      - name: qui
                      - name: omnis
                      - name: in
                      - name: aliquam
                      - name: voluptate
                      - name: quis
                      - name: animi
                      - name: consequatur
                      - name: harum
                      - name: libero
                      - name: laborum
                      - name: consectetur
                      - name: vel
                      - name: consequuntur
                      - name: asperiores
                      - name: commodi
                      - name: cumque
                      - name: fugiat
                      - name: dolores
                pet3:
                  value:
                    nextPageToken: ec69605c-582f-48ae-967f-f5c2fb028fe8
                    pets:
                      - name: id
                      - name: ullam
                      - name: sint
                      - name: et
                      - name: eos
                      - name: numquam
                      - name: beatae
                      - name: rerum
                      - name: et
                      - name: sint
                      - name: blanditiis
                      - name: quo
                      - name: itaque
                      - name: accusantium
                      - name: non
                      - name: autem
                      - name: magnam
                      - name: repellendus
                      - name: facilis
                      - name: iste
                pet4:
                  value:
                    nextPageToken: 9e171654-ea91-4112-918f-4b5ff244a354
                    pets:
                      - name: ipsam
                      - name: labore
                      - name: suscipit
                      - name: aliquid
                      - name: ut
                      - name: magnam
                      - name: fugit
                      - name: est
                      - name: molestiae
                      - name: dolore
                      - name: consequuntur
                      - name: eius
                      - name: quae
                      - name: cupiditate
                      - name: qui
                      - name: qui
                      - name: laborum
                      - name: beatae
                      - name: suscipit
                      - name: magnam
                pet5:
                  value:
                    nextPageToken: d95fc561-5311-46a8-9189-d10221e6c3e9
                    pets:
                      - name: sint
                      - name: voluptate
                      - name: omnis
                      - name: non
                      - name: quod
                      - name: quasi
                      - name: id
                      - name: consequatur
                      - name: beatae
                      - name: ea
                      - name: consequatur
                      - name: sunt
                      - name: sit
                      - name: soluta
                      - name: exercitationem
                      - name: ipsam
                      - name: cumque
                      - name: exercitationem
                      - name: rerum
                      - name: numquam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: voluptatibus
              pet2:
                value:
                  name: nemo
              pet3:
                value:
                  name: iure
              pet4:
                value:
                  name: ut
              pet5:
                value:
                  name: quia
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: perferendis
                pet2:
                  value:
                    pet:
                      name: labore
                pet3:
                  value:
                    pet:
                      name: eum
                pet4:
                  value:
                    pet:
                      name: ipsam
                pet5:
                  value:
                    pet:
                      name: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: exercitationem
                pet2:
                  value:
                    pet:
                      name: accusamus
                pet3:
                  value:
                    pet:
                      name: enim
                pet4:
                  value:
                    pet:
                      name: laboriosam
                pet5:
                  value:
                    pet:
                      name: repellendus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: assumenda
              pet2:
                value:
                  name: autem
              pet3:
                value:
                  name: ullam
              pet4:
                value:
                  name: facilis
              pet5:
                value:
                  name: iusto
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: ratione
                pet2:
                  value:
                    pet:
                      name: qui
                pet3:
                  value:
                    pet:
                      name: minus
                pet4:
                  value:
                    pet:
                      name: sed
                pet5:
                  value:
                    pet:
                      name: tenetur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: dolores
              pet2:
                value:
                  name: veritatis
              pet3:
                value:
                  name: eligendi
              pet4:
                value:
                  name: ut
              pet5:
                value:
                  name: est
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: officia
                pet2:
                  value:
                    pet:
                      name: distinctio
                pet3:
                  value:
                    pet:
                      name: consequatur
                pet4:
                  value:
                    pet:
                      name: eum
                pet5:
                  value:
                    pet:
                      name: magnam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: dolores
                user2:
                  value:
                    user:
                      name: in
                user3:
                  value:
                    user:
                      name: ratione
                user4:
                  value:
                    user:
                      name: corporis
                user5:
                  value:
                    user:
                      name: distinctio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners':
    get:
      operationId: listPetOwners
      tags:
        - Pets
      summary: List pet owners
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petOwners:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    nextPageToken: a76306cb-2e1b-4413-aa33-189024cf43ae
                    petOwners:
                      - ownerId: quis
                      - ownerId: dignissimos
                      - ownerId: quisquam
                      - ownerId: molestiae
                      - ownerId: ipsa
                      - ownerId: eum
                      - ownerId: labore
                      - ownerId: ea
                      - ownerId: similique
                      - ownerId: quibusdam
                      - ownerId: eveniet
                      - ownerId: nihil
                      - ownerId: harum
                      - ownerId: facilis
                      - ownerId: delectus
                      - ownerId: harum
                      - ownerId: corrupti
                      - ownerId: quos
                      - ownerId: perspiciatis
                      - ownerId: maiores
                petOwner2:
                  value:
                    nextPageToken: 9eb6ada1-1162-47a2-a315-5d0fe05410e3
                    petOwners:
                      - ownerId: numquam
                      - ownerId: hic
                      - ownerId: odio
                      - ownerId: sed
                      - ownerId: eos
                      - ownerId: earum
                      - ownerId: qui
                      - ownerId: autem
                      - ownerId: corrupti
                      - ownerId: quas
                      - ownerId: facere
                      - ownerId: expedita
                      - ownerId: minus
                      - ownerId: delectus
                      - ownerId: at
                      - ownerId: esse
                      - ownerId: natus
                      - ownerId: itaque
                      - ownerId: qui
                      - ownerId: blanditiis
                petOwner3:
                  value:
                    nextPageToken: 61c4a1c2-de8c-43b1-8625-bd9fa72a52e9
                    petOwners:
                      - ownerId: voluptatem
                      - ownerId: enim
                      - ownerId: et
                      - ownerId: saepe
                      - ownerId: quae
                      - ownerId: officiis
                      - ownerId: libero
                      - ownerId: nisi
                      - ownerId: non
                      - ownerId: pariatur
                      - ownerId: et
                      - ownerId: amet
                      - ownerId: libero
                      - ownerId: est
                      - ownerId: et
                      - ownerId: consequatur
                      - ownerId: vitae
                      - ownerId: et
                      - ownerId: culpa
                      - ownerId: distinctio
                petOwner4:
                  value:
                    nextPageToken: 69a8a2ed-8234-4f6a-a0b6-6eb3c6992439
                    petOwners:
                      - ownerId: consequuntur
                      - ownerId: laudantium
                      - ownerId: reiciendis
                      - ownerId: eum
                      - ownerId: qui
                      - ownerId: beatae
                      - ownerId: qui
                      - ownerId: sit
                      - ownerId: et
                      - ownerId: libero
                      - ownerId: natus
                      - ownerId: inventore
                      - ownerId: magnam
                      - ownerId: perspiciatis
                      - ownerId: ut
                      - ownerId: est
                      - ownerId: repellat
                      - ownerId: ex
                      - ownerId: quo
                      - ownerId: doloribus
                petOwner5:
                  value:
                    nextPageToken: 299f6984-403f-455e-bdf5-1cf5eaa5bba9
                    petOwners:
                      - ownerId: sit
                      - ownerId: esse
                      - ownerId: quas
                      - ownerId: voluptatibus
                      - ownerId: quidem
                      - ownerId: autem
                      - ownerId: laboriosam
                      - ownerId: sunt
                      - ownerId: dolore
                      - ownerId: earum
                      - ownerId: sed
                      - ownerId: tenetur
                      - ownerId: accusantium
                      - ownerId: rerum
                      - ownerId: quis
                      - ownerId: placeat
                      - ownerId: molestias
                      - ownerId: enim
                      - ownerId: dicta
                      - ownerId: autem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwner
      tags:
        - Pets
      summary: Create pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: nihil
              petOwner2:
                value:
                  ownerId: enim
              petOwner3:
                value:
                  ownerId: eum
              petOwner4:
                value:
                  ownerId: et
              petOwner5:
                value:
                  ownerId: culpa
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: nisi
                petOwner2:
                  value:
                    petOwner:
                      ownerId: beatae
                petOwner3:
                  value:
                    petOwner:
                      ownerId: aliquam
                petOwner4:
                  value:
                    petOwner:
                      ownerId: commodi
                petOwner5:
                  value:
                    petOwner:
                      ownerId: vel
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners/{ownerId}':
    head:
      operationId: checkPetOwner
      tags:
        - Pets
      summary: Check pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwner
      tags:
        - Pets
      summary: Get pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: itaque
                petOwner2:
                  value:
                    petOwner:
                      ownerId: quos
                petOwner3:
                  value:
                    petOwner:
                      ownerId: veritatis
                petOwner4:
                  value:
                    petOwner:
                      ownerId: et
                petOwner5:
                  value:
                    petOwner:
                      ownerId: praesentium
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwner
      tags:
        - Pets
      summary: Replace pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: qui
              petOwner2:
                value:
                  ownerId: ut
              petOwner3:
                value:
                  ownerId: asperiores
              petOwner4:
                value:
                  ownerId: ut
              petOwner5:
                value:
                  ownerId: officia
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: qui
                petOwner2:
                  value:
                    petOwner:
                      ownerId: aut
                petOwner3:
                  value:
                    petOwner:
                      ownerId: et
                petOwner4:
                  value:
                    petOwner:
                      ownerId: atque
                petOwner5:
                  value:
                    petOwner:
                      ownerId: molestiae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwner
      tags:
        - Pets
      summary: Modify pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: quaerat
              petOwner2:
                value:
                  ownerId: at
              petOwner3:
                value:
                  ownerId: perspiciatis
              petOwner4:
                value:
                  ownerId: quasi
              petOwner5:
                value:
                  ownerId: nostrum
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: mollitia
                petOwner2:
                  value:
                    petOwner:
                      ownerId: voluptatibus
                petOwner3:
                  value:
                    petOwner:
                      ownerId: voluptatem
                petOwner4:
                  value:
                    petOwner:
                      ownerId: culpa
                petOwner5:
                  value:
                    petOwner:
                      ownerId: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwner
      tags:
        - Pets
      summary: Delete pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets/owners:
    get:
      operationId: listPetOwnersAsUser
      tags:
        - User
      summary: List pet owners for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 403b7d2f-31f0-48cf-94f1-817752b5611a
                    pets:
                      - name: aut
                      - name: eum
                      - name: facilis
                      - name: culpa
                      - name: et
                      - name: autem
                      - name: a
                      - name: sit
                      - name: sunt
                      - name: incidunt
                      - name: eveniet
                      - name: corrupti
                      - name: odit
                      - name: qui
                      - name: possimus
                      - name: tempore
                      - name: voluptas
                      - name: sequi
                      - name: eos
                      - name: nostrum
                pet2:
                  value:
                    nextPageToken: a89776e2-15e0-4a3f-970b-a420b8747998
                    pets:
                      - name: qui
                      - name: voluptas
                      - name: quis
                      - name: aspernatur
                      - name: aliquid
                      - name: odio
                      - name: qui
                      - name: quia
                      - name: facilis
                      - name: sed
                      - name: ex
                      - name: voluptatem
                      - name: consequatur
                      - name: voluptatem
                      - name: amet
                      - name: quo
                      - name: sint
                      - name: esse
                      - name: qui
                      - name: velit
                pet3:
                  value:
                    nextPageToken: 4d2c14b8-6f50-4d9e-9478-c2639f415c1a
                    pets:
                      - name: hic
                      - name: delectus
                      - name: officia
                      - name: quam
                      - name: mollitia
                      - name: nemo
                      - name: repellat
                      - name: eius
                      - name: laudantium
                      - name: quia
                      - name: quo
                      - name: eos
                      - name: rerum
                      - name: omnis
                      - name: modi
                      - name: officia
                      - name: dolorem
                      - name: odio
                      - name: explicabo
                      - name: incidunt
                pet4:
                  value:
                    nextPageToken: 1328dbda-e873-4dde-9f64-7a241447ee50
                    pets:
                      - name: in
                      - name: consequatur
                      - name: quasi
                      - name: qui
                      - name: et
                      - name: sint
                      - name: praesentium
                      - name: modi
                      - name: ut
                      - name: eos
                      - name: asperiores
                      - name: rerum
                      - name: nemo
                      - name: nemo
                      - name: debitis
                      - name: facere
                      - name: nesciunt
                      - name: perferendis
                      - name: eius
                      - name: rem
                pet5:
                  value:
                    nextPageToken: 53d48dc6-c314-448a-8945-36f828ca4e29
                    pets:
                      - name: quod
                      - name: earum
                      - name: quod
                      - name: saepe
                      - name: laboriosam
                      - name: dolor
                      - name: et
                      - name: pariatur
                      - name: voluptas
                      - name: aut
                      - name: autem
                      - name: eum
                      - name: tenetur
                      - name: explicabo
                      - name: sint
                      - name: ab
                      - name: laborum
                      - name: consequuntur
                      - name: deleniti
                      - name: cupiditate
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwnerAsUser
      tags:
        - User
      summary: Create pet owner for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: odio
              pet2:
                value:
                  name: hic
              pet3:
                value:
                  name: et
              pet4:
                value:
                  name: tempore
              pet5:
                value:
                  name: nostrum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: omnis
                pet2:
                  value:
                    pet:
                      name: est
                pet3:
                  value:
                    pet:
                      name: dolorem
                pet4:
                  value:
                    pet:
                      name: enim
                pet5:
                  value:
                    pet:
                      name: voluptatem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/owners/{petId}':
    head:
      operationId: checkPetOwnerAsUser
      tags:
        - User
      summary: Check pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwnerAsUser
      tags:
        - User
      summary: Get pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: itaque
                pet2:
                  value:
                    pet:
                      name: dolor
                pet3:
                  value:
                    pet:
                      name: deleniti
                pet4:
                  value:
                    pet:
                      name: sint
                pet5:
                  value:
                    pet:
                      name: porro
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwnerAsUser
      tags:
        - User
      summary: Replace pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: et
              pet2:
                value:
                  name: harum
              pet3:
                value:
                  name: nemo
              pet4:
                value:
                  name: beatae
              pet5:
                value:
                  name: quos
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: consectetur
                pet2:
                  value:
                    pet:
                      name: assumenda
                pet3:
                  value:
                    pet:
                      name: aut
                pet4:
                  value:
                    pet:
                      name: ea
                pet5:
                  value:
                    pet:
                      name: reprehenderit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwnerAsUser
      tags:
        - User
      summary: Modify pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: adipisci
              pet2:
                value:
                  name: nam
              pet3:
                value:
                  name: itaque
              pet4:
                value:
                  name: qui
              pet5:
                value:
                  name: accusamus
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: eum
                pet2:
                  value:
                    pet:
                      name: quis
                pet3:
                  value:
                    pet:
                      name: dolor
                pet4:
                  value:
                    pet:
                      name: totam
                pet5:
                  value:
                    pet:
                      name: perspiciatis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwnerAsUser
      tags:
        - User
      summary: Delete pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors':
    get:
      operationId: listPetDoctors
      tags:
        - Pets
      summary: List pet doctors
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petDoctors:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    nextPageToken: 48e22e28-162e-47cc-b29c-3b786c2348af
                    petDoctors:
                      - doctorId: voluptates
                      - doctorId: nam
                      - doctorId: est
                      - doctorId: eaque
                      - doctorId: quos
                      - doctorId: velit
                      - doctorId: eveniet
                      - doctorId: provident
                      - doctorId: qui
                      - doctorId: non
                      - doctorId: vitae
                      - doctorId: sed
                      - doctorId: totam
                      - doctorId: est
                      - doctorId: consequatur
                      - doctorId: repellat
                      - doctorId: et
                      - doctorId: veniam
                      - doctorId: architecto
                      - doctorId: quasi
                petDoctor2:
                  value:
                    nextPageToken: 5c5bc6d3-c7a1-4777-a55b-4b58510ff295
                    petDoctors:
                      - doctorId: dolorum
                      - doctorId: sit
                      - doctorId: delectus
                      - doctorId: magni
                      - doctorId: beatae
                      - doctorId: ut
                      - doctorId: ipsam
                      - doctorId: aut
                      - doctorId: nisi
                      - doctorId: incidunt
                      - doctorId: eaque
                      - doctorId: corporis
                      - doctorId: sunt
                      - doctorId: odio
                      - doctorId: totam
                      - doctorId: eum
                      - doctorId: nesciunt
                      - doctorId: ipsam
                      - doctorId: delectus
                      - doctorId: animi
                petDoctor3:
                  value:
                    nextPageToken: 1e3f206f-168c-4887-b237-b50d612736fd
                    petDoctors:
                      - doctorId: nihil
                      - doctorId: quis
                      - doctorId: blanditiis
                      - doctorId: inventore
                      - doctorId: nobis
                      - doctorId: et
                      - doctorId: dolore
                      - doctorId: nostrum
                      - doctorId: numquam
                      - doctorId: cum
                      - doctorId: eaque
                      - doctorId: tempore
                      - doctorId: et
                      - doctorId: occaecati
                      - doctorId: illum
                      - doctorId: enim
                      - doctorId: quidem
                      - doctorId: modi
                      - doctorId: atque
                      - doctorId: illum
                petDoctor4:
                  value:
                    nextPageToken: 7b5dd2ce-4560-4bf0-86e3-e61cb3c81178
                    petDoctors:
                      - doctorId: veniam
                      - doctorId: sit
                      - doctorId: corporis
                      - doctorId: excepturi
                      - doctorId: quidem
                      - doctorId: non
                      - doctorId: officiis
                      - doctorId: ipsam
                      - doctorId: quaerat
                      - doctorId: est
                      - doctorId: exercitationem
                      - doctorId: blanditiis
                      - doctorId: dolores
                      - doctorId: soluta
                      - doctorId: consequatur
                      - doctorId: cum
                      - doctorId: voluptatibus
                      - doctorId: voluptates
                      - doctorId: ut
                      - doctorId: sunt
                petDoctor5:
                  value:
                    nextPageToken: 29a2175e-8e8c-4d41-9460-c038a64c2e68
                    petDoctors:
                      - doctorId: commodi
                      - doctorId: ipsam
                      - doctorId: molestiae
                      - doctorId: accusantium
                      - doctorId: qui
                      - doctorId: qui
                      - doctorId: eaque
                      - doctorId: molestiae
                      - doctorId: pariatur
                      - doctorId: iusto
                      - doctorId: quia
                      - doctorId: similique
                      - doctorId: reprehenderit
                      - doctorId: quos
                      - doctorId: et
                      - doctorId: voluptates
                      - doctorId: nobis
                      - doctorId: quia
                      - doctorId: velit
                      - doctorId: dicta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetDoctor
      tags:
        - Pets
      summary: Create pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: et
              petDoctor2:
                value:
                  doctorId: est
              petDoctor3:
                value:
                  doctorId: aperiam
              petDoctor4:
                value:
                  doctorId: earum
              petDoctor5:
                value:
                  doctorId: est
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: earum
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: enim
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: provident
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: et
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: fugiat
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors/{doctorId}':
    head:
      operationId: checkPetDoctor
      tags:
        - Pets
      summary: Check pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetDoctor
      tags:
        - Pets
      summary: Get pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: omnis
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: sed
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: possimus
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: quia
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetDoctor
      tags:
        - Pets
      summary: Replace pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: repellendus
              petDoctor2:
                value:
                  doctorId: ut
              petDoctor3:
                value:
                  doctorId: tenetur
              petDoctor4:
                value:
                  doctorId: eligendi
              petDoctor5:
                value:
                  doctorId: et
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: rerum
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: numquam
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: amet
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: totam
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: harum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetDoctor
      tags:
        - Pets
      summary: Modify pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: reprehenderit
              petDoctor2:
                value:
                  doctorId: quia
              petDoctor3:
                value:
                  doctorId: minima
              petDoctor4:
                value:
                  doctorId: aliquid
              petDoctor5:
                value:
                  doctorId: dolores
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: quam
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: sunt
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: perspiciatis
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: dolores
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: sed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetDoctor
      tags:
        - Pets
      summary: Delete pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets/caring:
    get:
      operationId: listPetCaringAsUser
      tags:
        - User
      summary: List pet caring for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 6c0ced4f-6415-42a1-87d6-62175b2ffc72
                    pets:
                      - name: qui
                      - name: vitae
                      - name: debitis
                      - name: quo
                      - name: at
                      - name: esse
                      - name: laborum
                      - name: dolorum
                      - name: doloribus
                      - name: mollitia
                      - name: velit
                      - name: aut
                      - name: quia
                      - name: et
                      - name: quisquam
                      - name: ipsum
                      - name: tempora
                      - name: qui
                      - name: corporis
                      - name: adipisci
                pet2:
                  value:
                    nextPageToken: 9b6a9610-c958-4364-a279-5f4c01908e7e
                    pets:
                      - name: dignissimos
                      - name: ut
                      - name: cumque
                      - name: dolor
                      - name: iure
                      - name: optio
                      - name: libero
                      - name: aut
                      - name: voluptas
                      - name: accusantium
                      - name: rerum
                      - name: cumque
                      - name: quidem
                      - name: est
                      - name: voluptas
                      - name: expedita
                      - name: repellat
                      - name: eligendi
                      - name: reiciendis
                      - name: iure
                pet3:
                  value:
                    nextPageToken: a844c36b-0e50-41f1-9f3c-e2e1cdc91df5
                    pets:
                      - name: eligendi
                      - name: et
                      - name: ea
                      - name: sint
                      - name: explicabo
                      - name: consequatur
                      - name: voluptatem
                      - name: voluptas
                      - name: vero
                      - name: qui
                      - name: autem
                      - name: unde
                      - name: minus
                      - name: doloribus
                      - name: illum
                      - name: porro
                      - name: illum
                      - name: quo
                      - name: et
                      - name: qui
                pet4:
                  value:
                    nextPageToken: 67e3d8c5-33b7-4f79-9f10-f0a9c30cc9ce
                    pets:
                      - name: vero
                      - name: nihil
                      - name: ducimus
                      - name: hic
                      - name: enim
                      - name: aut
                      - name: explicabo
                      - name: pariatur
                      - name: autem
                      - name: enim
                      - name: dignissimos
                      - name: aspernatur
                      - name: sit
                      - name: sapiente
                      - name: perspiciatis
                      - name: dolorem
                      - name: accusantium
                      - name: amet
                      - name: possimus
                      - name: minima
                pet5:
                  value:
                    nextPageToken: 75330727-1965-47b2-a3db-b39efab456d6
                    pets:
                      - name: pariatur
                      - name: sint
                      - name: quo
                      - name: qui
                      - name: temporibus
                      - name: non
                      - name: neque
                      - name: maiores
                      - name: inventore
                      - name: vel
                      - name: itaque
                      - name: rem
                      - name: aut
                      - name: quia
                      - name: omnis
                      - name: qui
                      - name: voluptatem
                      - name: natus
                      - name: ipsa
                      - name: minima
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetCaringAsUser
      tags:
        - User
      summary: Create pet caring for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: minus
              pet2:
                value:
                  name: voluptas
              pet3:
                value:
                  name: quos
              pet4:
                value:
                  name: reprehenderit
              pet5:
                value:
                  name: et
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: id
                pet2:
                  value:
                    pet:
                      name: quia
                pet3:
                  value:
                    pet:
                      name: sit
                pet4:
                  value:
                    pet:
                      name: quia
                pet5:
                  value:
                    pet:
                      name: reprehenderit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/caring/{petId}':
    head:
      operationId: checkPetCaringAsUser
      tags:
        - User
      summary: Check pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetCaringAsUser
      tags:
        - User
      summary: Get pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: fugiat
                pet2:
                  value:
                    pet:
                      name: non
                pet3:
                  value:
                    pet:
                      name: veniam
                pet4:
                  value:
                    pet:
                      name: maiores
                pet5:
                  value:
                    pet:
                      name: voluptas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetCaringAsUser
      tags:
        - User
      summary: Replace pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: sunt
              pet2:
                value:
                  name: ea
              pet3:
                value:
                  name: recusandae
              pet4:
                value:
                  name: reprehenderit
              pet5:
                value:
                  name: molestiae
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: ducimus
                pet2:
                  value:
                    pet:
                      name: laborum
                pet3:
                  value:
                    pet:
                      name: illum
                pet4:
                  value:
                    pet:
                      name: quam
                pet5:
                  value:
                    pet:
                      name: animi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetCaringAsUser
      tags:
        - User
      summary: Modify pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: voluptatem
              pet2:
                value:
                  name: et
              pet3:
                value:
                  name: dicta
              pet4:
                value:
                  name: sunt
              pet5:
                value:
                  name: rem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: aut
                pet2:
                  value:
                    pet:
                      name: necessitatibus
                pet3:
                  value:
                    pet:
                      name: eaque
                pet4:
                  value:
                    pet:
                      name: dicta
                pet5:
                  value:
                    pet:
                      name: deleniti
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetCaringAsUser
      tags:
        - User
      summary: Delete pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetOwnerResponse:
      properties:
        ownerId:
          type: string
    PetOwnerRequest:
      properties:
        ownerId:
          type: string
    PetDoctorResponse:
      properties:
        doctorId:
          type: string
    PetDoctorRequest:
      properties:
        doctorId:
          type: string
