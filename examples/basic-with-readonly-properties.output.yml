openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: basic with readOnly properties'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 414a21c9-5031-4a58-afb6-74e942aafe9a
                    pets:
                      - name: quis
                        fieldThatIsReadOnly: assumenda
                      - name: libero
                        fieldThatIsReadOnly: ipsa
                      - name: itaque
                        fieldThatIsReadOnly: dolor
                      - name: ut
                        fieldThatIsReadOnly: eius
                      - name: quae
                        fieldThatIsReadOnly: sunt
                      - name: corporis
                        fieldThatIsReadOnly: repellendus
                      - name: sed
                        fieldThatIsReadOnly: suscipit
                      - name: nostrum
                        fieldThatIsReadOnly: fuga
                      - name: nesciunt
                        fieldThatIsReadOnly: molestiae
                      - name: dignissimos
                        fieldThatIsReadOnly: quas
                      - name: eius
                        fieldThatIsReadOnly: perspiciatis
                      - name: labore
                        fieldThatIsReadOnly: ipsum
                      - name: quam
                        fieldThatIsReadOnly: eligendi
                      - name: quasi
                        fieldThatIsReadOnly: ab
                      - name: et
                        fieldThatIsReadOnly: in
                      - name: vel
                        fieldThatIsReadOnly: quidem
                      - name: repudiandae
                        fieldThatIsReadOnly: expedita
                      - name: error
                        fieldThatIsReadOnly: fuga
                      - name: impedit
                        fieldThatIsReadOnly: omnis
                      - name: reprehenderit
                        fieldThatIsReadOnly: voluptatem
                pet2:
                  value:
                    nextPageToken: 36af33cc-9522-4da2-9c2a-2e318800fdc4
                    pets:
                      - name: sit
                        fieldThatIsReadOnly: eligendi
                      - name: et
                        fieldThatIsReadOnly: molestias
                      - name: illo
                        fieldThatIsReadOnly: cumque
                      - name: et
                        fieldThatIsReadOnly: rem
                      - name: velit
                        fieldThatIsReadOnly: vitae
                      - name: veritatis
                        fieldThatIsReadOnly: omnis
                      - name: consequuntur
                        fieldThatIsReadOnly: incidunt
                      - name: eos
                        fieldThatIsReadOnly: quis
                      - name: est
                        fieldThatIsReadOnly: sit
                      - name: enim
                        fieldThatIsReadOnly: molestias
                      - name: tenetur
                        fieldThatIsReadOnly: saepe
                      - name: illum
                        fieldThatIsReadOnly: ipsa
                      - name: nostrum
                        fieldThatIsReadOnly: hic
                      - name: molestiae
                        fieldThatIsReadOnly: aut
                      - name: ipsum
                        fieldThatIsReadOnly: aut
                      - name: dolore
                        fieldThatIsReadOnly: architecto
                      - name: qui
                        fieldThatIsReadOnly: eos
                      - name: quis
                        fieldThatIsReadOnly: ut
                      - name: rerum
                        fieldThatIsReadOnly: iure
                      - name: rerum
                        fieldThatIsReadOnly: consequatur
                pet3:
                  value:
                    nextPageToken: 823de0ba-1a2d-4771-b3bf-168fb7c4b547
                    pets:
                      - name: maxime
                        fieldThatIsReadOnly: explicabo
                      - name: harum
                        fieldThatIsReadOnly: dolorum
                      - name: vero
                        fieldThatIsReadOnly: aut
                      - name: ea
                        fieldThatIsReadOnly: similique
                      - name: odio
                        fieldThatIsReadOnly: placeat
                      - name: neque
                        fieldThatIsReadOnly: sit
                      - name: deserunt
                        fieldThatIsReadOnly: voluptatibus
                      - name: omnis
                        fieldThatIsReadOnly: commodi
                      - name: nobis
                        fieldThatIsReadOnly: ut
                      - name: quibusdam
                        fieldThatIsReadOnly: necessitatibus
                      - name: perspiciatis
                        fieldThatIsReadOnly: deleniti
                      - name: fugiat
                        fieldThatIsReadOnly: illum
                      - name: voluptatem
                        fieldThatIsReadOnly: non
                      - name: natus
                        fieldThatIsReadOnly: ut
                      - name: est
                        fieldThatIsReadOnly: quo
                      - name: et
                        fieldThatIsReadOnly: asperiores
                      - name: earum
                        fieldThatIsReadOnly: omnis
                      - name: est
                        fieldThatIsReadOnly: quis
                      - name: fugit
                        fieldThatIsReadOnly: quibusdam
                      - name: itaque
                        fieldThatIsReadOnly: officiis
                pet4:
                  value:
                    nextPageToken: eb7e9ea5-f8e9-422d-bcd7-bf1115388ffa
                    pets:
                      - name: consequatur
                        fieldThatIsReadOnly: non
                      - name: placeat
                        fieldThatIsReadOnly: reiciendis
                      - name: natus
                        fieldThatIsReadOnly: dolor
                      - name: omnis
                        fieldThatIsReadOnly: eos
                      - name: quas
                        fieldThatIsReadOnly: ratione
                      - name: ex
                        fieldThatIsReadOnly: minus
                      - name: sed
                        fieldThatIsReadOnly: esse
                      - name: quia
                        fieldThatIsReadOnly: dolor
                      - name: exercitationem
                        fieldThatIsReadOnly: dignissimos
                      - name: veniam
                        fieldThatIsReadOnly: aspernatur
                      - name: beatae
                        fieldThatIsReadOnly: quo
                      - name: voluptatem
                        fieldThatIsReadOnly: sit
                      - name: consequatur
                        fieldThatIsReadOnly: iste
                      - name: fuga
                        fieldThatIsReadOnly: fugit
                      - name: et
                        fieldThatIsReadOnly: dolor
                      - name: qui
                        fieldThatIsReadOnly: quae
                      - name: laborum
                        fieldThatIsReadOnly: itaque
                      - name: culpa
                        fieldThatIsReadOnly: natus
                      - name: quas
                        fieldThatIsReadOnly: nemo
                      - name: nihil
                        fieldThatIsReadOnly: omnis
                pet5:
                  value:
                    nextPageToken: 6b7e48c1-2019-4ee8-8c5e-83d1797d65e1
                    pets:
                      - name: aut
                        fieldThatIsReadOnly: quae
                      - name: sit
                        fieldThatIsReadOnly: in
                      - name: soluta
                        fieldThatIsReadOnly: quaerat
                      - name: perferendis
                        fieldThatIsReadOnly: quasi
                      - name: architecto
                        fieldThatIsReadOnly: ipsum
                      - name: velit
                        fieldThatIsReadOnly: eos
                      - name: voluptas
                        fieldThatIsReadOnly: rerum
                      - name: ad
                        fieldThatIsReadOnly: ullam
                      - name: aut
                        fieldThatIsReadOnly: maxime
                      - name: nemo
                        fieldThatIsReadOnly: nulla
                      - name: culpa
                        fieldThatIsReadOnly: perferendis
                      - name: id
                        fieldThatIsReadOnly: nisi
                      - name: in
                        fieldThatIsReadOnly: assumenda
                      - name: accusamus
                        fieldThatIsReadOnly: et
                      - name: eum
                        fieldThatIsReadOnly: aut
                      - name: sed
                        fieldThatIsReadOnly: velit
                      - name: voluptas
                        fieldThatIsReadOnly: soluta
                      - name: illo
                        fieldThatIsReadOnly: est
                      - name: saepe
                        fieldThatIsReadOnly: aliquid
                      - name: quasi
                        fieldThatIsReadOnly: natus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: eligendi
              pet2:
                value:
                  name: explicabo
              pet3:
                value:
                  name: omnis
              pet4:
                value:
                  name: dicta
              pet5:
                value:
                  name: quos
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: doloremque
                      fieldThatIsReadOnly: reiciendis
                pet2:
                  value:
                    pet:
                      name: fuga
                      fieldThatIsReadOnly: ipsum
                pet3:
                  value:
                    pet:
                      name: vel
                      fieldThatIsReadOnly: quidem
                pet4:
                  value:
                    pet:
                      name: laborum
                      fieldThatIsReadOnly: ab
                pet5:
                  value:
                    pet:
                      name: deleniti
                      fieldThatIsReadOnly: doloremque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: blanditiis
                      fieldThatIsReadOnly: eaque
                pet2:
                  value:
                    pet:
                      name: mollitia
                      fieldThatIsReadOnly: sed
                pet3:
                  value:
                    pet:
                      name: tempore
                      fieldThatIsReadOnly: consequatur
                pet4:
                  value:
                    pet:
                      name: laboriosam
                      fieldThatIsReadOnly: impedit
                pet5:
                  value:
                    pet:
                      name: inventore
                      fieldThatIsReadOnly: magnam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: atque
              pet2:
                value:
                  name: consequatur
              pet3:
                value:
                  name: odit
              pet4:
                value:
                  name: suscipit
              pet5:
                value:
                  name: fuga
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: laboriosam
                      fieldThatIsReadOnly: numquam
                pet2:
                  value:
                    pet:
                      name: laboriosam
                      fieldThatIsReadOnly: sed
                pet3:
                  value:
                    pet:
                      name: quia
                      fieldThatIsReadOnly: voluptates
                pet4:
                  value:
                    pet:
                      name: similique
                      fieldThatIsReadOnly: voluptatum
                pet5:
                  value:
                    pet:
                      name: est
                      fieldThatIsReadOnly: nesciunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: illo
              pet2:
                value:
                  name: eos
              pet3:
                value:
                  name: qui
              pet4:
                value:
                  name: qui
              pet5:
                value:
                  name: beatae
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: a
                      fieldThatIsReadOnly: facilis
                pet2:
                  value:
                    pet:
                      name: reiciendis
                      fieldThatIsReadOnly: quis
                pet3:
                  value:
                    pet:
                      name: distinctio
                      fieldThatIsReadOnly: praesentium
                pet4:
                  value:
                    pet:
                      name: molestiae
                      fieldThatIsReadOnly: et
                pet5:
                  value:
                    pet:
                      name: excepturi
                      fieldThatIsReadOnly: expedita
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    PetResponse:
      properties:
        name:
          type: string
        fieldThatIsReadOnly:
          type: string
          readOnly: true
    PetRequest:
      properties:
        name:
          type: string
