openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: custom function'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: quo
                      - name: beatae
                      - name: voluptates
                      - name: explicabo
                      - name: ullam
                      - name: aut
                      - name: sequi
                      - name: perferendis
                      - name: et
                      - name: ea
                      - name: voluptate
                      - name: inventore
                      - name: qui
                      - name: exercitationem
                      - name: et
                      - name: quo
                      - name: et
                      - name: unde
                      - name: optio
                      - name: ullam
                pet2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: cumque
                      - name: quas
                      - name: perspiciatis
                      - name: vero
                      - name: aut
                      - name: quas
                      - name: assumenda
                      - name: molestiae
                      - name: sed
                      - name: rerum
                      - name: cumque
                      - name: laborum
                      - name: itaque
                      - name: nemo
                      - name: quod
                      - name: culpa
                      - name: hic
                      - name: quia
                      - name: beatae
                      - name: ut
                pet3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: quia
                      - name: rerum
                      - name: voluptas
                      - name: sint
                      - name: maiores
                      - name: quisquam
                      - name: voluptatibus
                      - name: velit
                      - name: non
                      - name: consequuntur
                      - name: labore
                      - name: saepe
                      - name: ea
                      - name: earum
                      - name: et
                      - name: repudiandae
                      - name: ipsum
                      - name: at
                      - name: tempora
                      - name: omnis
                pet4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: aut
                      - name: doloremque
                      - name: eum
                      - name: est
                      - name: aut
                      - name: non
                      - name: eligendi
                      - name: rerum
                      - name: tenetur
                      - name: earum
                      - name: iure
                      - name: nesciunt
                      - name: dolor
                      - name: enim
                      - name: iure
                      - name: autem
                      - name: quia
                      - name: voluptatem
                      - name: doloribus
                      - name: quas
                pet5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: repudiandae
                      - name: soluta
                      - name: ad
                      - name: debitis
                      - name: consequatur
                      - name: dolorum
                      - name: tenetur
                      - name: dolores
                      - name: autem
                      - name: nihil
                      - name: a
                      - name: sed
                      - name: perferendis
                      - name: dignissimos
                      - name: et
                      - name: et
                      - name: et
                      - name: ab
                      - name: quibusdam
                      - name: sed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: iusto
              pet2:
                value:
                  name: temporibus
              pet3:
                value:
                  name: dolorem
              pet4:
                value:
                  name: qui
              pet5:
                value:
                  name: consequatur
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: est
                pet2:
                  value:
                    pet:
                      name: sed
                pet3:
                  value:
                    pet:
                      name: molestiae
                pet4:
                  value:
                    pet:
                      name: saepe
                pet5:
                  value:
                    pet:
                      name: blanditiis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: rerum
                pet2:
                  value:
                    pet:
                      name: excepturi
                pet3:
                  value:
                    pet:
                      name: nobis
                pet4:
                  value:
                    pet:
                      name: esse
                pet5:
                  value:
                    pet:
                      name: minus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: autem
              pet2:
                value:
                  name: et
              pet3:
                value:
                  name: sapiente
              pet4:
                value:
                  name: blanditiis
              pet5:
                value:
                  name: omnis
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: explicabo
                pet2:
                  value:
                    pet:
                      name: aperiam
                pet3:
                  value:
                    pet:
                      name: ipsum
                pet4:
                  value:
                    pet:
                      name: ipsa
                pet5:
                  value:
                    pet:
                      name: deserunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: nulla
              pet2:
                value:
                  name: ut
              pet3:
                value:
                  name: temporibus
              pet4:
                value:
                  name: enim
              pet5:
                value:
                  name: consequatur
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: voluptates
                pet2:
                  value:
                    pet:
                      name: molestiae
                pet3:
                  value:
                    pet:
                      name: sint
                pet4:
                  value:
                    pet:
                      name: autem
                pet5:
                  value:
                    pet:
                      name: reprehenderit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/invoke.custom_fn_with_get_action':
    get:
      operationId: invokeCustomFnWithGetActionForPet
      tags:
        - Pets
      summary: Invoke `customFnWithGetAction` for pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: et
                pet2:
                  value:
                    pet:
                      name: reiciendis
                pet3:
                  value:
                    pet:
                      name: ea
                pet4:
                  value:
                    pet:
                      name: deleniti
                pet5:
                  value:
                    pet:
                      name: fugiat
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets/invoke.custom_fn_with_list_action:
    get:
      operationId: invokeCustomFnWithListActionForPets
      tags:
        - Pets
      summary: Invoke `customFnWithListAction` for pets
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PetResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                pet1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: non
                      - name: distinctio
                      - name: qui
                      - name: perferendis
                      - name: error
                      - name: blanditiis
                      - name: eos
                      - name: aut
                      - name: voluptas
                      - name: harum
                      - name: commodi
                      - name: molestiae
                      - name: quae
                      - name: aut
                      - name: sapiente
                      - name: eos
                      - name: ipsa
                      - name: quasi
                      - name: doloremque
                      - name: eveniet
                pet2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: assumenda
                      - name: ut
                      - name: tempora
                      - name: ad
                      - name: laudantium
                      - name: omnis
                      - name: blanditiis
                      - name: quae
                      - name: quas
                      - name: vero
                      - name: est
                      - name: omnis
                      - name: quibusdam
                      - name: cumque
                      - name: ea
                      - name: quaerat
                      - name: maxime
                      - name: commodi
                      - name: nesciunt
                      - name: perferendis
                pet3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: quis
                      - name: ea
                      - name: saepe
                      - name: a
                      - name: ex
                      - name: minus
                      - name: omnis
                      - name: ea
                      - name: sunt
                      - name: optio
                      - name: ullam
                      - name: repellendus
                      - name: mollitia
                      - name: aperiam
                      - name: voluptas
                      - name: eos
                      - name: est
                      - name: vitae
                      - name: accusantium
                      - name: quae
                pet4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: itaque
                      - name: adipisci
                      - name: eaque
                      - name: qui
                      - name: et
                      - name: necessitatibus
                      - name: provident
                      - name: dignissimos
                      - name: ut
                      - name: qui
                      - name: non
                      - name: sint
                      - name: exercitationem
                      - name: quae
                      - name: numquam
                      - name: minima
                      - name: mollitia
                      - name: optio
                      - name: enim
                      - name: aut
                pet5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    pets:
                      - name: autem
                      - name: ut
                      - name: doloribus
                      - name: iusto
                      - name: expedita
                      - name: voluptas
                      - name: non
                      - name: provident
                      - name: accusamus
                      - name: doloremque
                      - name: et
                      - name: voluptas
                      - name: sint
                      - name: ut
                      - name: itaque
                      - name: ut
                      - name: provident
                      - name: non
                      - name: non
                      - name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/invoke.custom_fn_with_model':
    get:
      operationId: invokeCustomFnWithModelForPet
      tags:
        - Pets
      summary: Invoke `customFnWithModel` for pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  customFnWithModel:
                    $ref: '#/components/schemas/CustomFnWithModelResponse'
              examples:
                customFnWithModel1:
                  value:
                    customFnWithModel:
                      customFnField: temporibus
                customFnWithModel2:
                  value:
                    customFnWithModel:
                      customFnField: natus
                customFnWithModel3:
                  value:
                    customFnWithModel:
                      customFnField: et
                customFnWithModel4:
                  value:
                    customFnWithModel:
                      customFnField: autem
                customFnWithModel5:
                  value:
                    customFnWithModel:
                      customFnField: tenetur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets/invoke.custom_fn_with_separate_models:
    post:
      operationId: invokeCustomFnWithSeparateModelsForPet
      tags:
        - Pets
      summary: Invoke `customFnWithSeparateModels` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFnWithSeparateModelsRequest'
            examples:
              customFnWithSeparateModels1:
                value:
                  customFnRequestModelField: pariatur
              customFnWithSeparateModels2:
                value:
                  customFnRequestModelField: unde
              customFnWithSeparateModels3:
                value:
                  customFnRequestModelField: ratione
              customFnWithSeparateModels4:
                value:
                  customFnRequestModelField: laborum
              customFnWithSeparateModels5:
                value:
                  customFnRequestModelField: quo
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  customFnWithSeparateModel:
                    $ref: '#/components/schemas/CustomFnWithSeparateModelsResponse'
              examples:
                customFnWithSeparateModels1:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: velit
                customFnWithSeparateModels2:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: voluptatum
                customFnWithSeparateModels3:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: quis
                customFnWithSeparateModels4:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: cum
                customFnWithSeparateModels5:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets/invoke.custom_fn_with_stringy_model:
    post:
      operationId: invokeCustomFnWithStringyModelForPet
      tags:
        - Pets
      summary: Invoke `customFnWithStringyModel` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              customFnWithStringyModel1:
                value:
                  name: magni
              customFnWithStringyModel2:
                value:
                  name: dolor
              customFnWithStringyModel3:
                value:
                  name: quia
              customFnWithStringyModel4:
                value:
                  name: repellat
              customFnWithStringyModel5:
                value:
                  name: qui
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithStringyModel1:
                  value:
                    pet:
                      name: minima
                customFnWithStringyModel2:
                  value:
                    pet:
                      name: et
                customFnWithStringyModel3:
                  value:
                    pet:
                      name: eos
                customFnWithStringyModel4:
                  value:
                    pet:
                      name: error
                customFnWithStringyModel5:
                  value:
                    pet:
                      name: id
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets/invoke.custom_fn_with_stringy_response_model:
    post:
      operationId: invokeCustomFnWithStringyResponseModelForPet
      tags:
        - Pets
      summary: Invoke `customFnWithStringyResponseModel` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              customFnWithStringyResponseModel1:
                value:
                  name: quas
              customFnWithStringyResponseModel2:
                value:
                  name: qui
              customFnWithStringyResponseModel3:
                value:
                  name: aliquam
              customFnWithStringyResponseModel4:
                value:
                  name: sequi
              customFnWithStringyResponseModel5:
                value:
                  name: suscipit
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithStringyResponseModel1:
                  value:
                    pet:
                      name: eveniet
                customFnWithStringyResponseModel2:
                  value:
                    pet:
                      name: sed
                customFnWithStringyResponseModel3:
                  value:
                    pet:
                      name: odio
                customFnWithStringyResponseModel4:
                  value:
                    pet:
                      name: laboriosam
                customFnWithStringyResponseModel5:
                  value:
                    pet:
                      name: expedita
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets/invoke.custom_fn_with_stringy_separate_models:
    post:
      operationId: invokeCustomFnWithStringySeparateModelsForPet
      tags:
        - Pets
      summary: Invoke `customFnWithStringySeparateModels` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              customFnWithStringySeparateModels1:
                value:
                  name: quisquam
              customFnWithStringySeparateModels2:
                value:
                  name: nam
              customFnWithStringySeparateModels3:
                value:
                  name: adipisci
              customFnWithStringySeparateModels4:
                value:
                  name: aut
              customFnWithStringySeparateModels5:
                value:
                  name: sint
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithStringySeparateModels1:
                  value:
                    pet:
                      name: maiores
                customFnWithStringySeparateModels2:
                  value:
                    pet:
                      name: ratione
                customFnWithStringySeparateModels3:
                  value:
                    pet:
                      name: doloribus
                customFnWithStringySeparateModels4:
                  value:
                    pet:
                      name: dignissimos
                customFnWithStringySeparateModels5:
                  value:
                    pet:
                      name: perferendis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets/invoke.custom_fn_with_request_and_stringy_response:
    post:
      operationId: invokeCustomFnWithRequestAndStringyResponseForPet
      tags:
        - Pets
      summary: Invoke `customFnWithRequestAndStringyResponse` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CustomFnWithRequestAndStringyResponseRequest
            examples:
              customFnWithRequestAndStringyResponse1:
                value:
                  customFnWithRequestAndStringyResponseField: inventore
              customFnWithRequestAndStringyResponse2:
                value:
                  customFnWithRequestAndStringyResponseField: aspernatur
              customFnWithRequestAndStringyResponse3:
                value:
                  customFnWithRequestAndStringyResponseField: facilis
              customFnWithRequestAndStringyResponse4:
                value:
                  customFnWithRequestAndStringyResponseField: et
              customFnWithRequestAndStringyResponse5:
                value:
                  customFnWithRequestAndStringyResponseField: rerum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithRequestAndStringyResponse1:
                  value:
                    pet:
                      name: natus
                customFnWithRequestAndStringyResponse2:
                  value:
                    pet:
                      name: labore
                customFnWithRequestAndStringyResponse3:
                  value:
                    pet:
                      name: praesentium
                customFnWithRequestAndStringyResponse4:
                  value:
                    pet:
                      name: distinctio
                customFnWithRequestAndStringyResponse5:
                  value:
                    pet:
                      name: dolor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    CustomFnWithModelResponse:
      properties:
        customFnField:
          type: string
    CustomFnWithSeparateModelsRequest:
      properties:
        customFnRequestModelField:
          type: string
    CustomFnWithSeparateModelsResponse:
      properties:
        customFnResponseModelField:
          type: string
    CustomFnWithRequestAndStringyResponseRequest:
      properties:
        customFnWithRequestAndStringyResponseField:
          type: string
