openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: hasMany polymorphism with users'
paths:
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 52c67513-6c88-4b99-a27e-8938ac838345
                    users:
                      - name: natus
                      - name: consequuntur
                      - name: quo
                      - name: mollitia
                      - name: perspiciatis
                      - name: amet
                      - name: minus
                      - name: nihil
                      - name: occaecati
                      - name: omnis
                      - name: quaerat
                      - name: eum
                      - name: nihil
                      - name: et
                      - name: quae
                      - name: est
                      - name: autem
                      - name: corrupti
                      - name: neque
                      - name: necessitatibus
                user2:
                  value:
                    nextPageToken: b9796457-63ff-4bb3-abd1-1a641a39f9fd
                    users:
                      - name: quaerat
                      - name: rerum
                      - name: quia
                      - name: maxime
                      - name: autem
                      - name: quod
                      - name: explicabo
                      - name: aliquam
                      - name: aut
                      - name: ipsum
                      - name: ut
                      - name: eius
                      - name: aut
                      - name: consequuntur
                      - name: cupiditate
                      - name: non
                      - name: et
                      - name: quia
                      - name: nam
                      - name: soluta
                user3:
                  value:
                    nextPageToken: fb41eb4a-f206-46e9-b060-c8267fe46b00
                    users:
                      - name: soluta
                      - name: dolores
                      - name: est
                      - name: est
                      - name: in
                      - name: perferendis
                      - name: vel
                      - name: ducimus
                      - name: unde
                      - name: iure
                      - name: sint
                      - name: architecto
                      - name: odit
                      - name: impedit
                      - name: labore
                      - name: aut
                      - name: molestias
                      - name: sint
                      - name: repellat
                      - name: inventore
                user4:
                  value:
                    nextPageToken: f0139821-4089-4f1c-a3d6-ff31c9d0c3bd
                    users:
                      - name: nihil
                      - name: tenetur
                      - name: perspiciatis
                      - name: repudiandae
                      - name: vero
                      - name: inventore
                      - name: magnam
                      - name: incidunt
                      - name: aspernatur
                      - name: vel
                      - name: animi
                      - name: at
                      - name: omnis
                      - name: molestiae
                      - name: sed
                      - name: quia
                      - name: natus
                      - name: autem
                      - name: suscipit
                      - name: sunt
                user5:
                  value:
                    nextPageToken: 81cffafd-39c7-4b17-ac20-12349f758040
                    users:
                      - name: culpa
                      - name: molestias
                      - name: omnis
                      - name: dolores
                      - name: sed
                      - name: et
                      - name: aspernatur
                      - name: dolores
                      - name: et
                      - name: autem
                      - name: ad
                      - name: qui
                      - name: soluta
                      - name: enim
                      - name: non
                      - name: nisi
                      - name: quos
                      - name: cumque
                      - name: ut
                      - name: excepturi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: ut
              user2:
                value:
                  name: earum
              user3:
                value:
                  name: libero
              user4:
                value:
                  name: rem
              user5:
                value:
                  name: deserunt
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: atque
                user2:
                  value:
                    user:
                      name: ipsa
                user3:
                  value:
                    user:
                      name: voluptatem
                user4:
                  value:
                    user:
                      name: doloribus
                user5:
                  value:
                    user:
                      name: neque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: voluptatem
                user2:
                  value:
                    user:
                      name: dolor
                user3:
                  value:
                    user:
                      name: occaecati
                user4:
                  value:
                    user:
                      name: esse
                user5:
                  value:
                    user:
                      name: eaque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: iusto
              user2:
                value:
                  name: dignissimos
              user3:
                value:
                  name: ea
              user4:
                value:
                  name: ut
              user5:
                value:
                  name: dolor
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: voluptas
                user2:
                  value:
                    user:
                      name: ipsum
                user3:
                  value:
                    user:
                      name: eos
                user4:
                  value:
                    user:
                      name: quisquam
                user5:
                  value:
                    user:
                      name: magni
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: voluptatum
              user2:
                value:
                  name: at
              user3:
                value:
                  name: dolor
              user4:
                value:
                  name: rerum
              user5:
                value:
                  name: aut
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: aspernatur
                user2:
                  value:
                    user:
                      name: inventore
                user3:
                  value:
                    user:
                      name: expedita
                user4:
                  value:
                    user:
                      name: labore
                user5:
                  value:
                    user:
                      name: adipisci
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 1df92fee-ba8e-403c-81b5-55e56bd96a07
                    pets:
                      - name: voluptatibus
                      - name: consequatur
                      - name: qui
                      - name: et
                      - name: architecto
                      - name: ut
                      - name: rerum
                      - name: veniam
                      - name: magni
                      - name: voluptatem
                      - name: sapiente
                      - name: saepe
                      - name: ab
                      - name: et
                      - name: nam
                      - name: ad
                      - name: in
                      - name: voluptas
                      - name: facilis
                      - name: ad
                pet2:
                  value:
                    nextPageToken: 2c0a0e95-c725-48c1-b917-213b4eeb7b9e
                    pets:
                      - name: qui
                      - name: ipsum
                      - name: incidunt
                      - name: quis
                      - name: sed
                      - name: quia
                      - name: quia
                      - name: est
                      - name: quibusdam
                      - name: optio
                      - name: reiciendis
                      - name: tenetur
                      - name: in
                      - name: quasi
                      - name: repellendus
                      - name: sint
                      - name: molestias
                      - name: hic
                      - name: qui
                      - name: perferendis
                pet3:
                  value:
                    nextPageToken: 25aba46a-dfe7-4dac-8f0d-8c4f83186b1f
                    pets:
                      - name: commodi
                      - name: fugiat
                      - name: laborum
                      - name: et
                      - name: alias
                      - name: harum
                      - name: qui
                      - name: ut
                      - name: cupiditate
                      - name: suscipit
                      - name: corporis
                      - name: voluptatum
                      - name: rem
                      - name: quia
                      - name: neque
                      - name: voluptatibus
                      - name: aut
                      - name: deserunt
                      - name: non
                      - name: labore
                pet4:
                  value:
                    nextPageToken: 1044d359-2982-4142-acab-ac989c904b8c
                    pets:
                      - name: ut
                      - name: quaerat
                      - name: dolor
                      - name: provident
                      - name: voluptatem
                      - name: iure
                      - name: possimus
                      - name: vel
                      - name: nam
                      - name: qui
                      - name: ducimus
                      - name: itaque
                      - name: magnam
                      - name: deleniti
                      - name: consequatur
                      - name: aut
                      - name: aspernatur
                      - name: molestiae
                      - name: culpa
                      - name: debitis
                pet5:
                  value:
                    nextPageToken: 9d0f939e-5d3a-4ed9-b203-fde56e5786de
                    pets:
                      - name: sunt
                      - name: similique
                      - name: accusamus
                      - name: blanditiis
                      - name: in
                      - name: nihil
                      - name: minima
                      - name: delectus
                      - name: voluptatem
                      - name: soluta
                      - name: sed
                      - name: qui
                      - name: quia
                      - name: blanditiis
                      - name: optio
                      - name: voluptatem
                      - name: non
                      - name: consequatur
                      - name: omnis
                      - name: dolor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: porro
              pet2:
                value:
                  name: voluptatum
              pet3:
                value:
                  name: eveniet
              pet4:
                value:
                  name: id
              pet5:
                value:
                  name: nam
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: doloremque
                pet2:
                  value:
                    pet:
                      name: doloremque
                pet3:
                  value:
                    pet:
                      name: voluptatum
                pet4:
                  value:
                    pet:
                      name: doloribus
                pet5:
                  value:
                    pet:
                      name: quisquam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: illum
                pet2:
                  value:
                    pet:
                      name: perferendis
                pet3:
                  value:
                    pet:
                      name: nostrum
                pet4:
                  value:
                    pet:
                      name: beatae
                pet5:
                  value:
                    pet:
                      name: nulla
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: dolorem
              pet2:
                value:
                  name: aut
              pet3:
                value:
                  name: ipsum
              pet4:
                value:
                  name: ut
              pet5:
                value:
                  name: aut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: id
                pet2:
                  value:
                    pet:
                      name: quis
                pet3:
                  value:
                    pet:
                      name: consequatur
                pet4:
                  value:
                    pet:
                      name: aut
                pet5:
                  value:
                    pet:
                      name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: magni
              pet2:
                value:
                  name: enim
              pet3:
                value:
                  name: incidunt
              pet4:
                value:
                  name: vel
              pet5:
                value:
                  name: amet
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: qui
                pet2:
                  value:
                    pet:
                      name: provident
                pet3:
                  value:
                    pet:
                      name: ut
                pet4:
                  value:
                    pet:
                      name: a
                pet5:
                  value:
                    pet:
                      name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: dicta
                user2:
                  value:
                    user:
                      name: suscipit
                user3:
                  value:
                    user:
                      name: et
                user4:
                  value:
                    user:
                      name: error
                user5:
                  value:
                    user:
                      name: aperiam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners':
    get:
      operationId: listPetOwners
      tags:
        - Pets
      summary: List pet owners
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petOwners:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    nextPageToken: d787a5ae-46e8-48bc-840b-8d71f3fc23e2
                    petOwners:
                      - ownerId: in
                      - ownerId: vel
                      - ownerId: aut
                      - ownerId: earum
                      - ownerId: iste
                      - ownerId: qui
                      - ownerId: iure
                      - ownerId: quod
                      - ownerId: fugiat
                      - ownerId: voluptas
                      - ownerId: culpa
                      - ownerId: sequi
                      - ownerId: est
                      - ownerId: sint
                      - ownerId: suscipit
                      - ownerId: repudiandae
                      - ownerId: iure
                      - ownerId: dolorem
                      - ownerId: placeat
                      - ownerId: eveniet
                petOwner2:
                  value:
                    nextPageToken: a4528267-8912-449a-a94e-a1f92b3605f4
                    petOwners:
                      - ownerId: perspiciatis
                      - ownerId: aperiam
                      - ownerId: doloremque
                      - ownerId: doloribus
                      - ownerId: et
                      - ownerId: iste
                      - ownerId: tempore
                      - ownerId: omnis
                      - ownerId: dolor
                      - ownerId: delectus
                      - ownerId: rem
                      - ownerId: iusto
                      - ownerId: officia
                      - ownerId: est
                      - ownerId: distinctio
                      - ownerId: corporis
                      - ownerId: quo
                      - ownerId: voluptates
                      - ownerId: deserunt
                      - ownerId: quo
                petOwner3:
                  value:
                    nextPageToken: 2e921091-c57f-4671-bbdd-0c4f7b30415d
                    petOwners:
                      - ownerId: itaque
                      - ownerId: sunt
                      - ownerId: quo
                      - ownerId: omnis
                      - ownerId: aliquid
                      - ownerId: ut
                      - ownerId: et
                      - ownerId: deserunt
                      - ownerId: et
                      - ownerId: omnis
                      - ownerId: blanditiis
                      - ownerId: impedit
                      - ownerId: provident
                      - ownerId: architecto
                      - ownerId: eius
                      - ownerId: ab
                      - ownerId: culpa
                      - ownerId: nam
                      - ownerId: recusandae
                      - ownerId: assumenda
                petOwner4:
                  value:
                    nextPageToken: 493f1e83-0499-42b1-84cc-6560c7877b7b
                    petOwners:
                      - ownerId: perferendis
                      - ownerId: magni
                      - ownerId: repudiandae
                      - ownerId: nesciunt
                      - ownerId: error
                      - ownerId: libero
                      - ownerId: veritatis
                      - ownerId: id
                      - ownerId: fugiat
                      - ownerId: magni
                      - ownerId: velit
                      - ownerId: rerum
                      - ownerId: laborum
                      - ownerId: deserunt
                      - ownerId: aperiam
                      - ownerId: quo
                      - ownerId: officia
                      - ownerId: odio
                      - ownerId: quaerat
                      - ownerId: ratione
                petOwner5:
                  value:
                    nextPageToken: 42367b4a-ca9b-42ab-a769-b4b3b01f8a09
                    petOwners:
                      - ownerId: natus
                      - ownerId: ratione
                      - ownerId: quia
                      - ownerId: quo
                      - ownerId: dolorem
                      - ownerId: et
                      - ownerId: velit
                      - ownerId: amet
                      - ownerId: quo
                      - ownerId: quo
                      - ownerId: eos
                      - ownerId: ea
                      - ownerId: est
                      - ownerId: et
                      - ownerId: ex
                      - ownerId: porro
                      - ownerId: totam
                      - ownerId: sunt
                      - ownerId: reiciendis
                      - ownerId: minima
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwner
      tags:
        - Pets
      summary: Create pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: vel
              petOwner2:
                value:
                  ownerId: et
              petOwner3:
                value:
                  ownerId: optio
              petOwner4:
                value:
                  ownerId: officia
              petOwner5:
                value:
                  ownerId: aliquid
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: aut
                petOwner2:
                  value:
                    petOwner:
                      ownerId: eum
                petOwner3:
                  value:
                    petOwner:
                      ownerId: quo
                petOwner4:
                  value:
                    petOwner:
                      ownerId: sit
                petOwner5:
                  value:
                    petOwner:
                      ownerId: id
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners/{ownerId}':
    head:
      operationId: checkPetOwner
      tags:
        - Pets
      summary: Check pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwner
      tags:
        - Pets
      summary: Get pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: voluptatibus
                petOwner2:
                  value:
                    petOwner:
                      ownerId: rerum
                petOwner3:
                  value:
                    petOwner:
                      ownerId: ut
                petOwner4:
                  value:
                    petOwner:
                      ownerId: consectetur
                petOwner5:
                  value:
                    petOwner:
                      ownerId: perferendis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwner
      tags:
        - Pets
      summary: Replace pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: perferendis
              petOwner2:
                value:
                  ownerId: illo
              petOwner3:
                value:
                  ownerId: vel
              petOwner4:
                value:
                  ownerId: ea
              petOwner5:
                value:
                  ownerId: explicabo
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: ullam
                petOwner2:
                  value:
                    petOwner:
                      ownerId: id
                petOwner3:
                  value:
                    petOwner:
                      ownerId: reprehenderit
                petOwner4:
                  value:
                    petOwner:
                      ownerId: accusamus
                petOwner5:
                  value:
                    petOwner:
                      ownerId: officiis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwner
      tags:
        - Pets
      summary: Modify pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: quidem
              petOwner2:
                value:
                  ownerId: animi
              petOwner3:
                value:
                  ownerId: ipsa
              petOwner4:
                value:
                  ownerId: ut
              petOwner5:
                value:
                  ownerId: voluptatem
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: fugit
                petOwner2:
                  value:
                    petOwner:
                      ownerId: soluta
                petOwner3:
                  value:
                    petOwner:
                      ownerId: cupiditate
                petOwner4:
                  value:
                    petOwner:
                      ownerId: quaerat
                petOwner5:
                  value:
                    petOwner:
                      ownerId: temporibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwner
      tags:
        - Pets
      summary: Delete pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets/owners:
    get:
      operationId: listPetOwnersAsUser
      tags:
        - User
      summary: List pet owners for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 34fbb7b8-d1c4-462c-a1fe-8db3f8b27a54
                    pets:
                      - name: id
                      - name: exercitationem
                      - name: aspernatur
                      - name: voluptatibus
                      - name: illo
                      - name: aliquam
                      - name: ad
                      - name: sit
                      - name: velit
                      - name: praesentium
                      - name: fugiat
                      - name: quod
                      - name: odit
                      - name: perspiciatis
                      - name: fugit
                      - name: veniam
                      - name: quia
                      - name: debitis
                      - name: natus
                      - name: omnis
                pet2:
                  value:
                    nextPageToken: 494fe997-184f-47bd-94a4-fe5f8c076d6f
                    pets:
                      - name: tempore
                      - name: nesciunt
                      - name: et
                      - name: omnis
                      - name: laudantium
                      - name: et
                      - name: sapiente
                      - name: error
                      - name: sapiente
                      - name: deleniti
                      - name: voluptas
                      - name: quo
                      - name: blanditiis
                      - name: dolorem
                      - name: eius
                      - name: placeat
                      - name: deserunt
                      - name: possimus
                      - name: consequatur
                      - name: porro
                pet3:
                  value:
                    nextPageToken: 3ac3cc65-075c-44c0-adad-c73aba733e09
                    pets:
                      - name: maiores
                      - name: doloremque
                      - name: est
                      - name: quod
                      - name: sequi
                      - name: omnis
                      - name: ducimus
                      - name: autem
                      - name: voluptatem
                      - name: ut
                      - name: officiis
                      - name: aut
                      - name: quam
                      - name: qui
                      - name: deserunt
                      - name: accusamus
                      - name: ipsa
                      - name: quo
                      - name: aut
                      - name: architecto
                pet4:
                  value:
                    nextPageToken: 88c21462-1ab8-49e2-956c-2ab2d0df0a05
                    pets:
                      - name: et
                      - name: odit
                      - name: commodi
                      - name: enim
                      - name: expedita
                      - name: fuga
                      - name: natus
                      - name: qui
                      - name: et
                      - name: est
                      - name: ut
                      - name: voluptatum
                      - name: quod
                      - name: voluptatibus
                      - name: pariatur
                      - name: iste
                      - name: vitae
                      - name: iusto
                      - name: itaque
                      - name: saepe
                pet5:
                  value:
                    nextPageToken: 04259c2d-c8a8-4c41-a0bd-41e442cba1b8
                    pets:
                      - name: quisquam
                      - name: asperiores
                      - name: non
                      - name: ea
                      - name: quaerat
                      - name: ipsa
                      - name: qui
                      - name: tenetur
                      - name: at
                      - name: a
                      - name: libero
                      - name: perferendis
                      - name: labore
                      - name: et
                      - name: consequatur
                      - name: numquam
                      - name: et
                      - name: repellendus
                      - name: possimus
                      - name: iusto
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwnerAsUser
      tags:
        - User
      summary: Create pet owner for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: officiis
              pet2:
                value:
                  name: iste
              pet3:
                value:
                  name: blanditiis
              pet4:
                value:
                  name: accusantium
              pet5:
                value:
                  name: nisi
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: voluptatem
                pet2:
                  value:
                    pet:
                      name: officiis
                pet3:
                  value:
                    pet:
                      name: temporibus
                pet4:
                  value:
                    pet:
                      name: dolores
                pet5:
                  value:
                    pet:
                      name: repellat
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/owners/{petId}':
    head:
      operationId: checkPetOwnerAsUser
      tags:
        - User
      summary: Check pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwnerAsUser
      tags:
        - User
      summary: Get pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: aliquam
                pet2:
                  value:
                    pet:
                      name: non
                pet3:
                  value:
                    pet:
                      name: cupiditate
                pet4:
                  value:
                    pet:
                      name: aliquam
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwnerAsUser
      tags:
        - User
      summary: Replace pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: sed
              pet2:
                value:
                  name: ea
              pet3:
                value:
                  name: voluptatem
              pet4:
                value:
                  name: quia
              pet5:
                value:
                  name: suscipit
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: nostrum
                pet2:
                  value:
                    pet:
                      name: dolorem
                pet3:
                  value:
                    pet:
                      name: dolorum
                pet4:
                  value:
                    pet:
                      name: doloremque
                pet5:
                  value:
                    pet:
                      name: tempore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwnerAsUser
      tags:
        - User
      summary: Modify pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: laborum
              pet2:
                value:
                  name: voluptatibus
              pet3:
                value:
                  name: magnam
              pet4:
                value:
                  name: atque
              pet5:
                value:
                  name: voluptas
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: officia
                pet2:
                  value:
                    pet:
                      name: qui
                pet3:
                  value:
                    pet:
                      name: non
                pet4:
                  value:
                    pet:
                      name: iusto
                pet5:
                  value:
                    pet:
                      name: quia
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwnerAsUser
      tags:
        - User
      summary: Delete pet owner for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors':
    get:
      operationId: listPetDoctors
      tags:
        - Pets
      summary: List pet doctors
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petDoctors:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    nextPageToken: ec72d93a-9082-4576-8e2d-3aae13cf06ba
                    petDoctors:
                      - doctorId: eos
                      - doctorId: nam
                      - doctorId: eum
                      - doctorId: quam
                      - doctorId: in
                      - doctorId: nam
                      - doctorId: iure
                      - doctorId: fuga
                      - doctorId: et
                      - doctorId: provident
                      - doctorId: doloremque
                      - doctorId: officiis
                      - doctorId: eius
                      - doctorId: ullam
                      - doctorId: repellat
                      - doctorId: ab
                      - doctorId: maiores
                      - doctorId: sint
                      - doctorId: omnis
                      - doctorId: et
                petDoctor2:
                  value:
                    nextPageToken: 1b3533cb-a234-4a26-9e8e-771b128ed49e
                    petDoctors:
                      - doctorId: sed
                      - doctorId: a
                      - doctorId: molestiae
                      - doctorId: illum
                      - doctorId: quidem
                      - doctorId: et
                      - doctorId: incidunt
                      - doctorId: voluptatem
                      - doctorId: dolorem
                      - doctorId: nihil
                      - doctorId: debitis
                      - doctorId: quia
                      - doctorId: temporibus
                      - doctorId: sit
                      - doctorId: et
                      - doctorId: nam
                      - doctorId: nisi
                      - doctorId: illum
                      - doctorId: laborum
                      - doctorId: qui
                petDoctor3:
                  value:
                    nextPageToken: 4cf39eae-5ffb-49a1-8a9b-72c2bf6de34b
                    petDoctors:
                      - doctorId: dolorum
                      - doctorId: ut
                      - doctorId: dolorum
                      - doctorId: quo
                      - doctorId: eaque
                      - doctorId: aut
                      - doctorId: distinctio
                      - doctorId: dolor
                      - doctorId: deleniti
                      - doctorId: deserunt
                      - doctorId: omnis
                      - doctorId: repellat
                      - doctorId: esse
                      - doctorId: sit
                      - doctorId: dignissimos
                      - doctorId: voluptatem
                      - doctorId: porro
                      - doctorId: nobis
                      - doctorId: quia
                      - doctorId: doloribus
                petDoctor4:
                  value:
                    nextPageToken: 8512b695-6604-43b9-85ea-7b3870dad848
                    petDoctors:
                      - doctorId: soluta
                      - doctorId: quis
                      - doctorId: vel
                      - doctorId: atque
                      - doctorId: cupiditate
                      - doctorId: aliquam
                      - doctorId: cum
                      - doctorId: fuga
                      - doctorId: mollitia
                      - doctorId: hic
                      - doctorId: odit
                      - doctorId: quo
                      - doctorId: consequatur
                      - doctorId: enim
                      - doctorId: neque
                      - doctorId: provident
                      - doctorId: sint
                      - doctorId: minima
                      - doctorId: velit
                      - doctorId: est
                petDoctor5:
                  value:
                    nextPageToken: fb568176-405d-4280-8128-bc1cb6db899f
                    petDoctors:
                      - doctorId: quia
                      - doctorId: ut
                      - doctorId: nesciunt
                      - doctorId: inventore
                      - doctorId: corporis
                      - doctorId: ducimus
                      - doctorId: cumque
                      - doctorId: consequuntur
                      - doctorId: enim
                      - doctorId: iusto
                      - doctorId: ea
                      - doctorId: nemo
                      - doctorId: odio
                      - doctorId: pariatur
                      - doctorId: dolorum
                      - doctorId: voluptas
                      - doctorId: autem
                      - doctorId: nostrum
                      - doctorId: nobis
                      - doctorId: eum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetDoctor
      tags:
        - Pets
      summary: Create pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: consequatur
              petDoctor2:
                value:
                  doctorId: officiis
              petDoctor3:
                value:
                  doctorId: asperiores
              petDoctor4:
                value:
                  doctorId: blanditiis
              petDoctor5:
                value:
                  doctorId: iusto
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: et
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: maiores
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: in
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: at
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: deserunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors/{doctorId}':
    head:
      operationId: checkPetDoctor
      tags:
        - Pets
      summary: Check pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetDoctor
      tags:
        - Pets
      summary: Get pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: labore
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: impedit
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: facere
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: autem
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetDoctor
      tags:
        - Pets
      summary: Replace pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: dolorum
              petDoctor2:
                value:
                  doctorId: dolorem
              petDoctor3:
                value:
                  doctorId: molestiae
              petDoctor4:
                value:
                  doctorId: exercitationem
              petDoctor5:
                value:
                  doctorId: voluptatem
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: dolore
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: voluptatem
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: neque
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: totam
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: molestiae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetDoctor
      tags:
        - Pets
      summary: Modify pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: dolores
              petDoctor2:
                value:
                  doctorId: architecto
              petDoctor3:
                value:
                  doctorId: commodi
              petDoctor4:
                value:
                  doctorId: suscipit
              petDoctor5:
                value:
                  doctorId: id
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: similique
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: magni
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: occaecati
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: delectus
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetDoctor
      tags:
        - Pets
      summary: Delete pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/pets/caring:
    get:
      operationId: listPetCaringAsUser
      tags:
        - User
      summary: List pet caring for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 764609e9-4323-42ca-bf51-f899e2af3f78
                    pets:
                      - name: natus
                      - name: sint
                      - name: quibusdam
                      - name: eligendi
                      - name: aut
                      - name: voluptatibus
                      - name: vitae
                      - name: dolores
                      - name: recusandae
                      - name: doloremque
                      - name: quis
                      - name: nostrum
                      - name: consequuntur
                      - name: maxime
                      - name: qui
                      - name: enim
                      - name: quia
                      - name: recusandae
                      - name: necessitatibus
                      - name: dicta
                pet2:
                  value:
                    nextPageToken: 354cd211-cb29-4826-8bc9-24bcb6658498
                    pets:
                      - name: nihil
                      - name: quos
                      - name: ipsam
                      - name: quia
                      - name: aut
                      - name: rerum
                      - name: deserunt
                      - name: et
                      - name: eum
                      - name: quia
                      - name: vel
                      - name: ut
                      - name: saepe
                      - name: perspiciatis
                      - name: ut
                      - name: aut
                      - name: nostrum
                      - name: sit
                      - name: repudiandae
                      - name: magnam
                pet3:
                  value:
                    nextPageToken: be0fb3fd-6870-4ab8-97ed-7d2d4b7a66a9
                    pets:
                      - name: sed
                      - name: vero
                      - name: voluptatum
                      - name: cupiditate
                      - name: nihil
                      - name: omnis
                      - name: quasi
                      - name: ducimus
                      - name: ipsum
                      - name: odio
                      - name: id
                      - name: quod
                      - name: omnis
                      - name: consectetur
                      - name: non
                      - name: tempore
                      - name: recusandae
                      - name: fuga
                      - name: soluta
                      - name: sit
                pet4:
                  value:
                    nextPageToken: b80422e2-8650-46c9-9bb9-039341df281c
                    pets:
                      - name: nobis
                      - name: labore
                      - name: ut
                      - name: earum
                      - name: est
                      - name: hic
                      - name: beatae
                      - name: facilis
                      - name: autem
                      - name: perferendis
                      - name: voluptas
                      - name: beatae
                      - name: molestiae
                      - name: eum
                      - name: repudiandae
                      - name: quia
                      - name: illo
                      - name: eaque
                      - name: ad
                      - name: ratione
                pet5:
                  value:
                    nextPageToken: d8b72095-d7db-42a7-b660-a664a4ffeb6c
                    pets:
                      - name: suscipit
                      - name: est
                      - name: deleniti
                      - name: atque
                      - name: illo
                      - name: at
                      - name: non
                      - name: laudantium
                      - name: alias
                      - name: in
                      - name: fugiat
                      - name: doloremque
                      - name: ut
                      - name: est
                      - name: nam
                      - name: autem
                      - name: ratione
                      - name: sit
                      - name: ut
                      - name: a
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetCaringAsUser
      tags:
        - User
      summary: Create pet caring for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: adipisci
              pet2:
                value:
                  name: doloremque
              pet3:
                value:
                  name: et
              pet4:
                value:
                  name: architecto
              pet5:
                value:
                  name: voluptatem
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: maiores
                pet2:
                  value:
                    pet:
                      name: quidem
                pet3:
                  value:
                    pet:
                      name: repellat
                pet4:
                  value:
                    pet:
                      name: quia
                pet5:
                  value:
                    pet:
                      name: ex
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/pets/caring/{petId}':
    head:
      operationId: checkPetCaringAsUser
      tags:
        - User
      summary: Check pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetCaringAsUser
      tags:
        - User
      summary: Get pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quidem
                pet2:
                  value:
                    pet:
                      name: omnis
                pet3:
                  value:
                    pet:
                      name: quod
                pet4:
                  value:
                    pet:
                      name: libero
                pet5:
                  value:
                    pet:
                      name: quis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetCaringAsUser
      tags:
        - User
      summary: Replace pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: aliquid
              pet2:
                value:
                  name: est
              pet3:
                value:
                  name: minus
              pet4:
                value:
                  name: aut
              pet5:
                value:
                  name: sint
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: molestias
                pet2:
                  value:
                    pet:
                      name: alias
                pet3:
                  value:
                    pet:
                      name: dolores
                pet4:
                  value:
                    pet:
                      name: mollitia
                pet5:
                  value:
                    pet:
                      name: culpa
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetCaringAsUser
      tags:
        - User
      summary: Modify pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: id
              pet2:
                value:
                  name: quaerat
              pet3:
                value:
                  name: beatae
              pet4:
                value:
                  name: et
              pet5:
                value:
                  name: molestias
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: dolorem
                pet2:
                  value:
                    pet:
                      name: eveniet
                pet3:
                  value:
                    pet:
                      name: culpa
                pet4:
                  value:
                    pet:
                      name: eligendi
                pet5:
                  value:
                    pet:
                      name: dolor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetCaringAsUser
      tags:
        - User
      summary: Delete pet caring for user
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetOwnerResponse:
      properties:
        ownerId:
          type: string
    PetOwnerRequest:
      properties:
        ownerId:
          type: string
    PetDoctorResponse:
      properties:
        doctorId:
          type: string
    PetDoctorRequest:
      properties:
        doctorId:
          type: string
