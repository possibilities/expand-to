openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: treeOf target of hasMany'
paths:
  /groups:
    get:
      operationId: listGroups
      tags:
        - Groups
      summary: List groups
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                group1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: veniam
                      - name: sunt
                      - name: libero
                      - name: reprehenderit
                      - name: ipsum
                      - name: nemo
                      - name: ratione
                      - name: enim
                      - name: iure
                      - name: sequi
                      - name: cupiditate
                      - name: aut
                      - name: quae
                      - name: recusandae
                      - name: excepturi
                      - name: voluptas
                      - name: quia
                      - name: rerum
                      - name: earum
                      - name: et
                group2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: quod
                      - name: cum
                      - name: deleniti
                      - name: quos
                      - name: et
                      - name: ut
                      - name: blanditiis
                      - name: nesciunt
                      - name: dolorem
                      - name: ipsam
                      - name: distinctio
                      - name: est
                      - name: facere
                      - name: tenetur
                      - name: dolor
                      - name: id
                      - name: consequatur
                      - name: maiores
                      - name: vitae
                      - name: facere
                group3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: impedit
                      - name: tempora
                      - name: omnis
                      - name: quia
                      - name: minus
                      - name: molestias
                      - name: repellat
                      - name: sit
                      - name: est
                      - name: velit
                      - name: cum
                      - name: laboriosam
                      - name: et
                      - name: ratione
                      - name: praesentium
                      - name: est
                      - name: sunt
                      - name: sed
                      - name: ut
                      - name: distinctio
                group4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: aut
                      - name: laborum
                      - name: qui
                      - name: qui
                      - name: a
                      - name: tempore
                      - name: cupiditate
                      - name: autem
                      - name: quidem
                      - name: placeat
                      - name: iure
                      - name: id
                      - name: assumenda
                      - name: consequatur
                      - name: et
                      - name: cumque
                      - name: et
                      - name: laboriosam
                      - name: eum
                      - name: ipsa
                group5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: aut
                      - name: ut
                      - name: voluptatem
                      - name: optio
                      - name: dolorum
                      - name: repellendus
                      - name: ea
                      - name: ad
                      - name: dolores
                      - name: sint
                      - name: laborum
                      - name: non
                      - name: mollitia
                      - name: omnis
                      - name: sit
                      - name: quod
                      - name: omnis
                      - name: voluptate
                      - name: dolor
                      - name: id
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroup
      tags:
        - Groups
      summary: Create group
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: in
              group2:
                value:
                  name: vel
              group3:
                value:
                  name: non
              group4:
                value:
                  name: excepturi
              group5:
                value:
                  name: quod
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: fuga
                group2:
                  value:
                    group:
                      name: consequatur
                group3:
                  value:
                    group:
                      name: error
                group4:
                  value:
                    group:
                      name: ut
                group5:
                  value:
                    group:
                      name: sunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}':
    head:
      operationId: checkGroup
      tags:
        - Groups
      summary: Check group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroup
      tags:
        - Groups
      summary: Get group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: quaerat
                group2:
                  value:
                    group:
                      name: praesentium
                group3:
                  value:
                    group:
                      name: eaque
                group4:
                  value:
                    group:
                      name: eaque
                group5:
                  value:
                    group:
                      name: hic
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroup
      tags:
        - Groups
      summary: Replace group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: ea
              group2:
                value:
                  name: inventore
              group3:
                value:
                  name: et
              group4:
                value:
                  name: nobis
              group5:
                value:
                  name: voluptatem
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: quam
                group2:
                  value:
                    group:
                      name: quia
                group3:
                  value:
                    group:
                      name: ducimus
                group4:
                  value:
                    group:
                      name: ullam
                group5:
                  value:
                    group:
                      name: quos
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroup
      tags:
        - Groups
      summary: Modify group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: sit
              group2:
                value:
                  name: commodi
              group3:
                value:
                  name: minima
              group4:
                value:
                  name: et
              group5:
                value:
                  name: magni
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: maiores
                group2:
                  value:
                    group:
                      name: qui
                group3:
                  value:
                    group:
                      name: quod
                group4:
                  value:
                    group:
                      name: repudiandae
                group5:
                  value:
                    group:
                      name: alias
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroup
      tags:
        - Groups
      summary: Delete group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /regions:
    get:
      operationId: listRegions
      tags:
        - Regions
      summary: List regions
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regions:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegionResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                region1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regions:
                      - name: suscipit
                      - name: et
                      - name: ut
                      - name: dolor
                      - name: ut
                      - name: porro
                      - name: excepturi
                      - name: nemo
                      - name: reiciendis
                      - name: repellendus
                      - name: ducimus
                      - name: et
                      - name: qui
                      - name: ab
                      - name: nostrum
                      - name: inventore
                      - name: repellat
                      - name: est
                      - name: exercitationem
                      - name: adipisci
                region2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regions:
                      - name: aut
                      - name: quae
                      - name: qui
                      - name: libero
                      - name: quisquam
                      - name: a
                      - name: quo
                      - name: architecto
                      - name: deserunt
                      - name: et
                      - name: numquam
                      - name: est
                      - name: soluta
                      - name: tempore
                      - name: quam
                      - name: cum
                      - name: voluptatem
                      - name: harum
                      - name: quis
                      - name: quis
                region3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regions:
                      - name: voluptatem
                      - name: molestias
                      - name: repellendus
                      - name: quibusdam
                      - name: expedita
                      - name: neque
                      - name: molestiae
                      - name: labore
                      - name: voluptatem
                      - name: non
                      - name: odio
                      - name: a
                      - name: possimus
                      - name: cupiditate
                      - name: error
                      - name: eligendi
                      - name: quaerat
                      - name: et
                      - name: laboriosam
                      - name: ducimus
                region4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regions:
                      - name: eius
                      - name: rerum
                      - name: dolor
                      - name: suscipit
                      - name: sit
                      - name: dolorem
                      - name: id
                      - name: repellat
                      - name: sint
                      - name: cupiditate
                      - name: eius
                      - name: ut
                      - name: dolores
                      - name: et
                      - name: aut
                      - name: sint
                      - name: et
                      - name: quas
                      - name: et
                      - name: quam
                region5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regions:
                      - name: ducimus
                      - name: qui
                      - name: architecto
                      - name: quod
                      - name: maxime
                      - name: nihil
                      - name: molestiae
                      - name: amet
                      - name: quo
                      - name: accusamus
                      - name: incidunt
                      - name: dolorem
                      - name: et
                      - name: voluptatum
                      - name: est
                      - name: nihil
                      - name: voluptas
                      - name: placeat
                      - name: porro
                      - name: odit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRegion
      tags:
        - Regions
      summary: Create region
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: velit
              region2:
                value:
                  name: sint
              region3:
                value:
                  name: esse
              region4:
                value:
                  name: explicabo
              region5:
                value:
                  name: dolorem
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: ea
                region2:
                  value:
                    region:
                      name: libero
                region3:
                  value:
                    region:
                      name: vitae
                region4:
                  value:
                    region:
                      name: iste
                region5:
                  value:
                    region:
                      name: quisquam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}':
    head:
      operationId: checkRegion
      tags:
        - Regions
      summary: Check region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRegion
      tags:
        - Regions
      summary: Get region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: non
                region2:
                  value:
                    region:
                      name: quia
                region3:
                  value:
                    region:
                      name: natus
                region4:
                  value:
                    region:
                      name: sunt
                region5:
                  value:
                    region:
                      name: dolor
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRegion
      tags:
        - Regions
      summary: Replace region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: minima
              region2:
                value:
                  name: nesciunt
              region3:
                value:
                  name: laudantium
              region4:
                value:
                  name: eius
              region5:
                value:
                  name: reprehenderit
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: repudiandae
                region2:
                  value:
                    region:
                      name: ratione
                region3:
                  value:
                    region:
                      name: ut
                region4:
                  value:
                    region:
                      name: non
                region5:
                  value:
                    region:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRegion
      tags:
        - Regions
      summary: Modify region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: ut
              region2:
                value:
                  name: odio
              region3:
                value:
                  name: porro
              region4:
                value:
                  name: iusto
              region5:
                value:
                  name: incidunt
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: animi
                region2:
                  value:
                    region:
                      name: iste
                region3:
                  value:
                    region:
                      name: similique
                region4:
                  value:
                    region:
                      name: similique
                region5:
                  value:
                    region:
                      name: facilis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRegion
      tags:
        - Regions
      summary: Delete region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups':
    get:
      operationId: listGroupSubgroups
      tags:
        - Groups
      summary: List group subgroups
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                group1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: dolore
                      - name: odit
                      - name: laboriosam
                      - name: est
                      - name: eum
                      - name: excepturi
                      - name: voluptatem
                      - name: voluptatem
                      - name: quisquam
                      - name: distinctio
                      - name: qui
                      - name: quia
                      - name: et
                      - name: rerum
                      - name: fugit
                      - name: quas
                      - name: iure
                      - name: cumque
                      - name: ratione
                      - name: et
                group2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: consequatur
                      - name: quis
                      - name: cum
                      - name: deleniti
                      - name: at
                      - name: consectetur
                      - name: sunt
                      - name: a
                      - name: odit
                      - name: quos
                      - name: voluptatibus
                      - name: assumenda
                      - name: ipsam
                      - name: ut
                      - name: voluptates
                      - name: est
                      - name: eius
                      - name: qui
                      - name: est
                      - name: ut
                group3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: repudiandae
                      - name: et
                      - name: deleniti
                      - name: temporibus
                      - name: vitae
                      - name: at
                      - name: quod
                      - name: repellat
                      - name: autem
                      - name: odio
                      - name: dolor
                      - name: id
                      - name: cum
                      - name: quidem
                      - name: velit
                      - name: dolorem
                      - name: est
                      - name: aut
                      - name: quis
                      - name: hic
                group4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: provident
                      - name: modi
                      - name: eveniet
                      - name: ad
                      - name: accusantium
                      - name: ut
                      - name: non
                      - name: non
                      - name: sit
                      - name: recusandae
                      - name: optio
                      - name: aperiam
                      - name: et
                      - name: minima
                      - name: est
                      - name: ut
                      - name: qui
                      - name: natus
                      - name: qui
                      - name: debitis
                group5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: magni
                      - name: laborum
                      - name: fugiat
                      - name: et
                      - name: incidunt
                      - name: voluptatum
                      - name: molestiae
                      - name: aut
                      - name: eaque
                      - name: tempora
                      - name: rerum
                      - name: et
                      - name: temporibus
                      - name: labore
                      - name: quidem
                      - name: est
                      - name: quia
                      - name: eos
                      - name: voluptatem
                      - name: a
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroupSubgroup
      tags:
        - Groups
      summary: Create group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: modi
              group2:
                value:
                  name: cupiditate
              group3:
                value:
                  name: ex
              group4:
                value:
                  name: hic
              group5:
                value:
                  name: quia
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: necessitatibus
                group2:
                  value:
                    group:
                      name: in
                group3:
                  value:
                    group:
                      name: ipsa
                group4:
                  value:
                    group:
                      name: tenetur
                group5:
                  value:
                    group:
                      name: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups/{subgroupId}':
    head:
      operationId: checkGroupSubgroup
      tags:
        - Groups
      summary: Check group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroupSubgroup
      tags:
        - Groups
      summary: Get group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: voluptatem
                group2:
                  value:
                    group:
                      name: doloremque
                group3:
                  value:
                    group:
                      name: tenetur
                group4:
                  value:
                    group:
                      name: et
                group5:
                  value:
                    group:
                      name: nesciunt
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroupSubgroup
      tags:
        - Groups
      summary: Replace group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: alias
              group2:
                value:
                  name: vitae
              group3:
                value:
                  name: provident
              group4:
                value:
                  name: id
              group5:
                value:
                  name: nostrum
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: aut
                group2:
                  value:
                    group:
                      name: culpa
                group3:
                  value:
                    group:
                      name: cum
                group4:
                  value:
                    group:
                      name: at
                group5:
                  value:
                    group:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroupSubgroup
      tags:
        - Groups
      summary: Modify group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: ex
              group2:
                value:
                  name: facilis
              group3:
                value:
                  name: debitis
              group4:
                value:
                  name: dolorem
              group5:
                value:
                  name: minima
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: voluptatibus
                group2:
                  value:
                    group:
                      name: aut
                group3:
                  value:
                    group:
                      name: saepe
                group4:
                  value:
                    group:
                      name: aut
                group5:
                  value:
                    group:
                      name: iste
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroupSubgroup
      tags:
        - Groups
      summary: Delete group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}/groups':
    get:
      operationId: listRegionGroups
      tags:
        - Regions
      summary: List region groups
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroups:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegionGroupResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                regionGroup1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regionGroups:
                      - groupId: a
                      - groupId: ut
                      - groupId: vitae
                      - groupId: nobis
                      - groupId: quis
                      - groupId: perspiciatis
                      - groupId: sed
                      - groupId: in
                      - groupId: iusto
                      - groupId: aut
                      - groupId: nihil
                      - groupId: laboriosam
                      - groupId: aut
                      - groupId: accusamus
                      - groupId: consequatur
                      - groupId: eaque
                      - groupId: quas
                      - groupId: odio
                      - groupId: porro
                      - groupId: omnis
                regionGroup2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regionGroups:
                      - groupId: aut
                      - groupId: et
                      - groupId: quia
                      - groupId: libero
                      - groupId: beatae
                      - groupId: repellendus
                      - groupId: aspernatur
                      - groupId: culpa
                      - groupId: aut
                      - groupId: consequuntur
                      - groupId: et
                      - groupId: et
                      - groupId: eos
                      - groupId: alias
                      - groupId: odio
                      - groupId: ad
                      - groupId: ea
                      - groupId: odit
                      - groupId: qui
                      - groupId: sunt
                regionGroup3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regionGroups:
                      - groupId: non
                      - groupId: libero
                      - groupId: cumque
                      - groupId: et
                      - groupId: laudantium
                      - groupId: inventore
                      - groupId: ex
                      - groupId: totam
                      - groupId: ipsum
                      - groupId: et
                      - groupId: exercitationem
                      - groupId: omnis
                      - groupId: hic
                      - groupId: impedit
                      - groupId: ut
                      - groupId: odit
                      - groupId: commodi
                      - groupId: quis
                      - groupId: dolorum
                      - groupId: ea
                regionGroup4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regionGroups:
                      - groupId: praesentium
                      - groupId: rerum
                      - groupId: voluptates
                      - groupId: exercitationem
                      - groupId: soluta
                      - groupId: voluptates
                      - groupId: voluptatem
                      - groupId: rerum
                      - groupId: amet
                      - groupId: laborum
                      - groupId: doloremque
                      - groupId: inventore
                      - groupId: doloribus
                      - groupId: iusto
                      - groupId: fugiat
                      - groupId: fugiat
                      - groupId: autem
                      - groupId: ad
                      - groupId: incidunt
                      - groupId: porro
                regionGroup5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    regionGroups:
                      - groupId: sit
                      - groupId: est
                      - groupId: natus
                      - groupId: voluptatum
                      - groupId: repellendus
                      - groupId: laborum
                      - groupId: illum
                      - groupId: soluta
                      - groupId: quisquam
                      - groupId: doloribus
                      - groupId: quia
                      - groupId: nostrum
                      - groupId: accusamus
                      - groupId: nisi
                      - groupId: doloribus
                      - groupId: et
                      - groupId: optio
                      - groupId: minima
                      - groupId: nesciunt
                      - groupId: rerum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRegionGroup
      tags:
        - Regions
      summary: Create region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: odit
              regionGroup2:
                value:
                  groupId: qui
              regionGroup3:
                value:
                  groupId: vel
              regionGroup4:
                value:
                  groupId: explicabo
              regionGroup5:
                value:
                  groupId: vel
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: quis
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: sunt
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: libero
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: in
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: consequatur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}/groups/{groupId}':
    head:
      operationId: checkRegionGroup
      tags:
        - Regions
      summary: Check region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRegionGroup
      tags:
        - Regions
      summary: Get region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: modi
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: magnam
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: vel
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: et
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: non
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRegionGroup
      tags:
        - Regions
      summary: Replace region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: non
              regionGroup2:
                value:
                  groupId: nam
              regionGroup3:
                value:
                  groupId: doloremque
              regionGroup4:
                value:
                  groupId: molestiae
              regionGroup5:
                value:
                  groupId: animi
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: quia
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: ut
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: quam
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: facere
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: odio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRegionGroup
      tags:
        - Regions
      summary: Modify region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: est
              regionGroup2:
                value:
                  groupId: ex
              regionGroup3:
                value:
                  groupId: enim
              regionGroup4:
                value:
                  groupId: vel
              regionGroup5:
                value:
                  groupId: numquam
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: repellendus
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: placeat
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: corrupti
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: sint
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: dignissimos
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRegionGroup
      tags:
        - Regions
      summary: Delete region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    GroupResponse:
      properties:
        name:
          type: string
    GroupRequest:
      properties:
        name:
          type: string
    RegionResponse:
      properties:
        name:
          type: string
    RegionRequest:
      properties:
        name:
          type: string
    RegionGroupResponse:
      properties:
        groupId:
          type: string
    RegionGroupRequest:
      properties:
        groupId:
          type: string
