openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: custom function'
paths:
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: a25edb4b-3bfc-4d75-b8ed-d3e4f845aa26
                    pets:
                      - name: incidunt
                      - name: eveniet
                      - name: iure
                      - name: est
                      - name: omnis
                      - name: sunt
                      - name: eius
                      - name: rem
                      - name: debitis
                      - name: qui
                      - name: et
                      - name: cum
                      - name: voluptas
                      - name: explicabo
                      - name: nesciunt
                      - name: ea
                      - name: alias
                      - name: quasi
                      - name: placeat
                      - name: corrupti
                pet2:
                  value:
                    nextPageToken: b06688e0-9d8d-4f00-a5f6-8d1e4abc3d4c
                    pets:
                      - name: saepe
                      - name: et
                      - name: enim
                      - name: possimus
                      - name: nihil
                      - name: voluptas
                      - name: et
                      - name: hic
                      - name: dolorem
                      - name: illo
                      - name: corporis
                      - name: amet
                      - name: consectetur
                      - name: est
                      - name: et
                      - name: et
                      - name: eius
                      - name: minus
                      - name: iste
                      - name: eos
                pet3:
                  value:
                    nextPageToken: 817839e5-e688-42d0-ab03-0075c9ef2187
                    pets:
                      - name: cumque
                      - name: quidem
                      - name: qui
                      - name: fuga
                      - name: dolorem
                      - name: error
                      - name: est
                      - name: facilis
                      - name: officia
                      - name: asperiores
                      - name: aut
                      - name: non
                      - name: quasi
                      - name: dolorum
                      - name: sit
                      - name: ipsam
                      - name: minus
                      - name: atque
                      - name: saepe
                      - name: et
                pet4:
                  value:
                    nextPageToken: 88d14234-1ec6-44f8-a45f-89abe951a18c
                    pets:
                      - name: neque
                      - name: voluptate
                      - name: est
                      - name: voluptatibus
                      - name: autem
                      - name: odio
                      - name: aspernatur
                      - name: natus
                      - name: corporis
                      - name: eum
                      - name: et
                      - name: et
                      - name: sint
                      - name: provident
                      - name: minima
                      - name: ut
                      - name: voluptatem
                      - name: veniam
                      - name: laborum
                      - name: animi
                pet5:
                  value:
                    nextPageToken: 56ccce47-ae1e-4730-a297-c36d281e0b2b
                    pets:
                      - name: sunt
                      - name: sed
                      - name: rerum
                      - name: qui
                      - name: quaerat
                      - name: eligendi
                      - name: mollitia
                      - name: qui
                      - name: et
                      - name: est
                      - name: et
                      - name: deserunt
                      - name: provident
                      - name: tempore
                      - name: quis
                      - name: nihil
                      - name: omnis
                      - name: et
                      - name: nulla
                      - name: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: earum
              pet2:
                value:
                  name: qui
              pet3:
                value:
                  name: assumenda
              pet4:
                value:
                  name: quibusdam
              pet5:
                value:
                  name: vero
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: qui
                pet2:
                  value:
                    pet:
                      name: nostrum
                pet3:
                  value:
                    pet:
                      name: nesciunt
                pet4:
                  value:
                    pet:
                      name: enim
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: corrupti
                pet2:
                  value:
                    pet:
                      name: odio
                pet3:
                  value:
                    pet:
                      name: adipisci
                pet4:
                  value:
                    pet:
                      name: aperiam
                pet5:
                  value:
                    pet:
                      name: ipsa
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: tenetur
              pet2:
                value:
                  name: quia
              pet3:
                value:
                  name: iusto
              pet4:
                value:
                  name: provident
              pet5:
                value:
                  name: aliquid
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quia
                pet2:
                  value:
                    pet:
                      name: voluptatem
                pet3:
                  value:
                    pet:
                      name: dicta
                pet4:
                  value:
                    pet:
                      name: explicabo
                pet5:
                  value:
                    pet:
                      name: rem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: voluptatem
              pet2:
                value:
                  name: ipsa
              pet3:
                value:
                  name: ducimus
              pet4:
                value:
                  name: illo
              pet5:
                value:
                  name: omnis
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: quas
                pet2:
                  value:
                    pet:
                      name: optio
                pet3:
                  value:
                    pet:
                      name: ut
                pet4:
                  value:
                    pet:
                      name: laudantium
                pet5:
                  value:
                    pet:
                      name: voluptatum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}.custom_fn_with_get_action':
    get:
      operationId: invokeCustomFnWithGetActionForPet
      tags:
        - Pets
      summary: Invoke `customFnWithGetAction` for pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: unde
                pet2:
                  value:
                    pet:
                      name: iusto
                pet3:
                  value:
                    pet:
                      name: fugiat
                pet4:
                  value:
                    pet:
                      name: ut
                pet5:
                  value:
                    pet:
                      name: autem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets.custom_fn_with_list_action:
    get:
      operationId: invokeCustomFnWithListActionForPets
      tags:
        - Pets
      summary: Invoke `customFnWithListAction` for pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: 28110920-ea43-4157-b135-8e16df8c221f
                    pets:
                      - name: vel
                      - name: quos
                      - name: omnis
                      - name: voluptatem
                      - name: tempora
                      - name: at
                      - name: voluptas
                      - name: debitis
                      - name: hic
                      - name: sequi
                      - name: quam
                      - name: sed
                      - name: quos
                      - name: in
                      - name: corporis
                      - name: earum
                      - name: at
                      - name: et
                      - name: assumenda
                      - name: nihil
                pet2:
                  value:
                    nextPageToken: 09fd81d1-d3f8-4990-89db-e7e5fde782a2
                    pets:
                      - name: totam
                      - name: qui
                      - name: molestiae
                      - name: eligendi
                      - name: quod
                      - name: nam
                      - name: voluptate
                      - name: impedit
                      - name: pariatur
                      - name: commodi
                      - name: est
                      - name: rem
                      - name: praesentium
                      - name: laudantium
                      - name: quia
                      - name: ad
                      - name: amet
                      - name: voluptatibus
                      - name: voluptatem
                      - name: laudantium
                pet3:
                  value:
                    nextPageToken: b57e87ac-e878-4731-8c00-e2a9ed943932
                    pets:
                      - name: nesciunt
                      - name: ea
                      - name: corrupti
                      - name: aut
                      - name: eum
                      - name: nulla
                      - name: impedit
                      - name: est
                      - name: illum
                      - name: vitae
                      - name: fugiat
                      - name: assumenda
                      - name: ab
                      - name: illo
                      - name: qui
                      - name: enim
                      - name: est
                      - name: quia
                      - name: nobis
                      - name: quis
                pet4:
                  value:
                    nextPageToken: 5f522af7-529e-4b5d-9fe3-bd5cef7e2aec
                    pets:
                      - name: ratione
                      - name: beatae
                      - name: modi
                      - name: a
                      - name: architecto
                      - name: suscipit
                      - name: est
                      - name: id
                      - name: non
                      - name: quas
                      - name: modi
                      - name: vitae
                      - name: rerum
                      - name: eum
                      - name: ut
                      - name: quae
                      - name: et
                      - name: eligendi
                      - name: autem
                      - name: repudiandae
                pet5:
                  value:
                    nextPageToken: caeb520c-2844-44ae-a03e-89d9c4315e2a
                    pets:
                      - name: vitae
                      - name: tempore
                      - name: ipsum
                      - name: dolorum
                      - name: laudantium
                      - name: quia
                      - name: tempore
                      - name: ab
                      - name: illum
                      - name: commodi
                      - name: tempora
                      - name: architecto
                      - name: numquam
                      - name: fugit
                      - name: distinctio
                      - name: qui
                      - name: accusantium
                      - name: error
                      - name: molestiae
                      - name: ratione
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}.custom_fn_with_model':
    get:
      operationId: invokeCustomFnWithModelForPet
      tags:
        - Pets
      summary: Invoke `customFnWithModel` for pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  customFnWithModel:
                    $ref: '#/components/schemas/CustomFnWithModelResponse'
              examples:
                customFnWithModel1:
                  value:
                    customFnWithModel:
                      customFnField: iusto
                customFnWithModel2:
                  value:
                    customFnWithModel:
                      customFnField: numquam
                customFnWithModel3:
                  value:
                    customFnWithModel:
                      customFnField: et
                customFnWithModel4:
                  value:
                    customFnWithModel:
                      customFnField: aliquam
                customFnWithModel5:
                  value:
                    customFnWithModel:
                      customFnField: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets.custom_fn_with_separate_models:
    post:
      operationId: invokeCustomFnWithSeparateModelsForPet
      tags:
        - Pets
      summary: Invoke `customFnWithSeparateModels` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFnWithSeparateModelsRequest'
            examples:
              customFnWithSeparateModels1:
                value:
                  customFnRequestModelField: eos
              customFnWithSeparateModels2:
                value:
                  customFnRequestModelField: nihil
              customFnWithSeparateModels3:
                value:
                  customFnRequestModelField: cumque
              customFnWithSeparateModels4:
                value:
                  customFnRequestModelField: odio
              customFnWithSeparateModels5:
                value:
                  customFnRequestModelField: est
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  customFnWithSeparateModels:
                    $ref: '#/components/schemas/CustomFnWithSeparateModelsResponse'
              examples:
                customFnWithSeparateModels1:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: modi
                customFnWithSeparateModels2:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: sit
                customFnWithSeparateModels3:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: iusto
                customFnWithSeparateModels4:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: magnam
                customFnWithSeparateModels5:
                  value:
                    customFnWithSeparateModels:
                      customFnResponseModelField: sequi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets.custom_fn_with_stringy_model:
    post:
      operationId: invokeCustomFnWithStringyModelForPet
      tags:
        - Pets
      summary: Invoke `customFnWithStringyModel` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              customFnWithStringyModel1:
                value:
                  name: eos
              customFnWithStringyModel2:
                value:
                  name: vel
              customFnWithStringyModel3:
                value:
                  name: ipsam
              customFnWithStringyModel4:
                value:
                  name: voluptas
              customFnWithStringyModel5:
                value:
                  name: quisquam
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithStringyModel1:
                  value:
                    pet:
                      name: vero
                customFnWithStringyModel2:
                  value:
                    pet:
                      name: non
                customFnWithStringyModel3:
                  value:
                    pet:
                      name: corrupti
                customFnWithStringyModel4:
                  value:
                    pet:
                      name: provident
                customFnWithStringyModel5:
                  value:
                    pet:
                      name: dolorum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets.custom_fn_with_stringy_response_model:
    post:
      operationId: invokeCustomFnWithStringyResponseModelForPet
      tags:
        - Pets
      summary: Invoke `customFnWithStringyResponseModel` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              customFnWithStringyResponseModel1:
                value:
                  name: ullam
              customFnWithStringyResponseModel2:
                value:
                  name: rem
              customFnWithStringyResponseModel3:
                value:
                  name: et
              customFnWithStringyResponseModel4:
                value:
                  name: fugit
              customFnWithStringyResponseModel5:
                value:
                  name: qui
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithStringyResponseModel1:
                  value:
                    pet:
                      name: voluptas
                customFnWithStringyResponseModel2:
                  value:
                    pet:
                      name: perferendis
                customFnWithStringyResponseModel3:
                  value:
                    pet:
                      name: vel
                customFnWithStringyResponseModel4:
                  value:
                    pet:
                      name: velit
                customFnWithStringyResponseModel5:
                  value:
                    pet:
                      name: animi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets.custom_fn_with_stringy_separate_models:
    post:
      operationId: invokeCustomFnWithStringySeparateModelsForPet
      tags:
        - Pets
      summary: Invoke `customFnWithStringySeparateModels` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              customFnWithStringySeparateModels1:
                value:
                  name: tempora
              customFnWithStringySeparateModels2:
                value:
                  name: eaque
              customFnWithStringySeparateModels3:
                value:
                  name: qui
              customFnWithStringySeparateModels4:
                value:
                  name: odit
              customFnWithStringySeparateModels5:
                value:
                  name: cum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithStringySeparateModels1:
                  value:
                    pet:
                      name: voluptatem
                customFnWithStringySeparateModels2:
                  value:
                    pet:
                      name: dolor
                customFnWithStringySeparateModels3:
                  value:
                    pet:
                      name: molestiae
                customFnWithStringySeparateModels4:
                  value:
                    pet:
                      name: id
                customFnWithStringySeparateModels5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets.custom_fn_with_request_and_stringy_response:
    post:
      operationId: invokeCustomFnWithRequestAndStringyResponseForPet
      tags:
        - Pets
      summary: Invoke `customFnWithRequestAndStringyResponse` for pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CustomFnWithRequestAndStringyResponseRequest
            examples:
              customFnWithRequestAndStringyResponse1:
                value:
                  customFnWithRequestAndStringyResponseField: nam
              customFnWithRequestAndStringyResponse2:
                value:
                  customFnWithRequestAndStringyResponseField: odio
              customFnWithRequestAndStringyResponse3:
                value:
                  customFnWithRequestAndStringyResponseField: molestiae
              customFnWithRequestAndStringyResponse4:
                value:
                  customFnWithRequestAndStringyResponseField: non
              customFnWithRequestAndStringyResponse5:
                value:
                  customFnWithRequestAndStringyResponseField: quis
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                customFnWithRequestAndStringyResponse1:
                  value:
                    pet:
                      name: tempore
                customFnWithRequestAndStringyResponse2:
                  value:
                    pet:
                      name: ut
                customFnWithRequestAndStringyResponse3:
                  value:
                    pet:
                      name: omnis
                customFnWithRequestAndStringyResponse4:
                  value:
                    pet:
                      name: sint
                customFnWithRequestAndStringyResponse5:
                  value:
                    pet:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    CustomFnWithModelResponse:
      properties:
        customFnField:
          type: string
    CustomFnWithSeparateModelsRequest:
      properties:
        customFnRequestModelField:
          type: string
    CustomFnWithSeparateModelsResponse:
      properties:
        customFnResponseModelField:
          type: string
    CustomFnWithRequestAndStringyResponseRequest:
      properties:
        customFnWithRequestAndStringyResponseField:
          type: string
