openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: treeOf target of hasMany'
paths:
  /groups:
    get:
      operationId: listGroups
      tags:
        - Groups
      summary: List groups
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      groups:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    nextPageToken: b83dec77-0a3f-472b-99a8-e3f508101e42
                    groups:
                      - name: tempora
                      - name: ipsum
                      - name: occaecati
                      - name: ut
                      - name: magni
                      - name: et
                      - name: quia
                      - name: saepe
                      - name: repudiandae
                      - name: excepturi
                      - name: et
                      - name: repellat
                      - name: dicta
                      - name: labore
                      - name: cupiditate
                      - name: iure
                      - name: id
                      - name: magnam
                      - name: repudiandae
                      - name: temporibus
                group2:
                  value:
                    nextPageToken: fa877571-a9a5-4fb5-889e-100e9f1798f4
                    groups:
                      - name: eos
                      - name: recusandae
                      - name: in
                      - name: natus
                      - name: sunt
                      - name: perferendis
                      - name: qui
                      - name: laudantium
                      - name: eveniet
                      - name: est
                      - name: est
                      - name: id
                      - name: harum
                      - name: quas
                      - name: dolor
                      - name: atque
                      - name: veniam
                      - name: maiores
                      - name: quo
                      - name: odio
                group3:
                  value:
                    nextPageToken: f5c0cbeb-9f8c-4c7c-8b50-d0c0acc6480c
                    groups:
                      - name: id
                      - name: id
                      - name: eos
                      - name: quo
                      - name: sed
                      - name: similique
                      - name: dolorum
                      - name: cupiditate
                      - name: mollitia
                      - name: in
                      - name: corrupti
                      - name: similique
                      - name: quia
                      - name: quis
                      - name: laudantium
                      - name: ullam
                      - name: labore
                      - name: sint
                      - name: autem
                      - name: ut
                group4:
                  value:
                    nextPageToken: bb5c6d49-a8a9-4ec8-9776-b0aadc280cf2
                    groups:
                      - name: et
                      - name: perferendis
                      - name: quas
                      - name: pariatur
                      - name: ad
                      - name: omnis
                      - name: quo
                      - name: culpa
                      - name: dolorem
                      - name: sit
                      - name: fugiat
                      - name: assumenda
                      - name: unde
                      - name: totam
                      - name: in
                      - name: aspernatur
                      - name: sint
                      - name: rerum
                      - name: odit
                      - name: et
                group5:
                  value:
                    nextPageToken: 7a886ca9-2114-415d-8f99-a9b332094068
                    groups:
                      - name: quod
                      - name: blanditiis
                      - name: eos
                      - name: deserunt
                      - name: omnis
                      - name: est
                      - name: vel
                      - name: est
                      - name: voluptatibus
                      - name: temporibus
                      - name: quibusdam
                      - name: eveniet
                      - name: est
                      - name: est
                      - name: voluptates
                      - name: quisquam
                      - name: quia
                      - name: voluptatem
                      - name: ut
                      - name: iste
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroup
      tags:
        - Groups
      summary: Create group
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: provident
              group2:
                value:
                  name: debitis
              group3:
                value:
                  name: optio
              group4:
                value:
                  name: est
              group5:
                value:
                  name: qui
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: adipisci
                group2:
                  value:
                    group:
                      name: quidem
                group3:
                  value:
                    group:
                      name: et
                group4:
                  value:
                    group:
                      name: natus
                group5:
                  value:
                    group:
                      name: amet
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}':
    head:
      operationId: checkGroup
      tags:
        - Groups
      summary: Check group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroup
      tags:
        - Groups
      summary: Get group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: voluptatem
                group2:
                  value:
                    group:
                      name: est
                group3:
                  value:
                    group:
                      name: blanditiis
                group4:
                  value:
                    group:
                      name: ipsa
                group5:
                  value:
                    group:
                      name: voluptates
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroup
      tags:
        - Groups
      summary: Replace group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: quasi
              group2:
                value:
                  name: enim
              group3:
                value:
                  name: nihil
              group4:
                value:
                  name: qui
              group5:
                value:
                  name: laudantium
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: nam
                group2:
                  value:
                    group:
                      name: commodi
                group3:
                  value:
                    group:
                      name: facilis
                group4:
                  value:
                    group:
                      name: temporibus
                group5:
                  value:
                    group:
                      name: nobis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroup
      tags:
        - Groups
      summary: Modify group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: voluptatem
              group2:
                value:
                  name: distinctio
              group3:
                value:
                  name: nihil
              group4:
                value:
                  name: repudiandae
              group5:
                value:
                  name: minima
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: consequatur
                group2:
                  value:
                    group:
                      name: quas
                group3:
                  value:
                    group:
                      name: sit
                group4:
                  value:
                    group:
                      name: quisquam
                group5:
                  value:
                    group:
                      name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroup
      tags:
        - Groups
      summary: Delete group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /regions:
    get:
      operationId: listRegions
      tags:
        - Regions
      summary: List regions
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      regions:
                        type: array
                        items:
                          $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    nextPageToken: a1c7ce83-c649-42a3-946d-425b774b0d69
                    regions:
                      - name: voluptatem
                      - name: enim
                      - name: totam
                      - name: quibusdam
                      - name: nostrum
                      - name: ipsam
                      - name: mollitia
                      - name: non
                      - name: dignissimos
                      - name: aut
                      - name: iusto
                      - name: odio
                      - name: et
                      - name: in
                      - name: iure
                      - name: facilis
                      - name: laudantium
                      - name: qui
                      - name: molestiae
                      - name: voluptates
                region2:
                  value:
                    nextPageToken: d54ff0b1-1a1d-46a4-ac6f-06aba72f1e79
                    regions:
                      - name: voluptas
                      - name: nam
                      - name: odio
                      - name: praesentium
                      - name: recusandae
                      - name: vel
                      - name: ea
                      - name: aut
                      - name: delectus
                      - name: modi
                      - name: quo
                      - name: odit
                      - name: culpa
                      - name: corrupti
                      - name: voluptatem
                      - name: maiores
                      - name: et
                      - name: eaque
                      - name: sapiente
                      - name: quos
                region3:
                  value:
                    nextPageToken: ab258d35-48b9-473c-a5af-66703edc564d
                    regions:
                      - name: vero
                      - name: velit
                      - name: est
                      - name: architecto
                      - name: quasi
                      - name: quae
                      - name: veniam
                      - name: et
                      - name: quibusdam
                      - name: harum
                      - name: fuga
                      - name: sunt
                      - name: odit
                      - name: qui
                      - name: nobis
                      - name: quas
                      - name: sint
                      - name: inventore
                      - name: iure
                      - name: cum
                region4:
                  value:
                    nextPageToken: 27ae07f7-5b5b-4cb6-b74a-4c7ef7c3c5e1
                    regions:
                      - name: nulla
                      - name: odio
                      - name: sit
                      - name: quaerat
                      - name: a
                      - name: optio
                      - name: ratione
                      - name: et
                      - name: quidem
                      - name: vero
                      - name: facere
                      - name: molestiae
                      - name: voluptas
                      - name: qui
                      - name: neque
                      - name: corporis
                      - name: quisquam
                      - name: ut
                      - name: vel
                      - name: a
                region5:
                  value:
                    nextPageToken: 42d44754-5b01-419e-be96-2b1df42d06e5
                    regions:
                      - name: est
                      - name: quia
                      - name: cupiditate
                      - name: saepe
                      - name: ab
                      - name: amet
                      - name: aliquid
                      - name: dolor
                      - name: dicta
                      - name: inventore
                      - name: a
                      - name: laboriosam
                      - name: inventore
                      - name: sint
                      - name: labore
                      - name: ipsum
                      - name: cum
                      - name: rem
                      - name: suscipit
                      - name: est
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRegion
      tags:
        - Regions
      summary: Create region
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: officiis
              region2:
                value:
                  name: aliquid
              region3:
                value:
                  name: nisi
              region4:
                value:
                  name: asperiores
              region5:
                value:
                  name: illum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: officiis
                region2:
                  value:
                    region:
                      name: quos
                region3:
                  value:
                    region:
                      name: tempore
                region4:
                  value:
                    region:
                      name: assumenda
                region5:
                  value:
                    region:
                      name: rerum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}':
    head:
      operationId: checkRegion
      tags:
        - Regions
      summary: Check region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRegion
      tags:
        - Regions
      summary: Get region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: quis
                region2:
                  value:
                    region:
                      name: vero
                region3:
                  value:
                    region:
                      name: et
                region4:
                  value:
                    region:
                      name: in
                region5:
                  value:
                    region:
                      name: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRegion
      tags:
        - Regions
      summary: Replace region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: consequatur
              region2:
                value:
                  name: natus
              region3:
                value:
                  name: perspiciatis
              region4:
                value:
                  name: ratione
              region5:
                value:
                  name: nihil
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: quasi
                region2:
                  value:
                    region:
                      name: et
                region3:
                  value:
                    region:
                      name: officia
                region4:
                  value:
                    region:
                      name: voluptatem
                region5:
                  value:
                    region:
                      name: asperiores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRegion
      tags:
        - Regions
      summary: Modify region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionRequest'
            examples:
              region1:
                value:
                  name: omnis
              region2:
                value:
                  name: eligendi
              region3:
                value:
                  name: consequatur
              region4:
                value:
                  name: voluptatem
              region5:
                value:
                  name: consequatur
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  region:
                    $ref: '#/components/schemas/RegionResponse'
              examples:
                region1:
                  value:
                    region:
                      name: dolores
                region2:
                  value:
                    region:
                      name: officia
                region3:
                  value:
                    region:
                      name: nihil
                region4:
                  value:
                    region:
                      name: et
                region5:
                  value:
                    region:
                      name: soluta
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRegion
      tags:
        - Regions
      summary: Delete region
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups':
    get:
      operationId: listGroupSubgroups
      tags:
        - Groups
      summary: List group subgroups
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      groups:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    nextPageToken: 4ff9df99-6841-4827-b71d-5f6e108d1418
                    groups:
                      - name: ea
                      - name: iusto
                      - name: dignissimos
                      - name: sed
                      - name: consequatur
                      - name: ut
                      - name: officia
                      - name: iure
                      - name: quis
                      - name: aut
                      - name: cumque
                      - name: dolor
                      - name: voluptatem
                      - name: rerum
                      - name: facere
                      - name: reprehenderit
                      - name: quo
                      - name: et
                      - name: tempora
                      - name: autem
                group2:
                  value:
                    nextPageToken: a8ed63de-23a0-4a11-b337-532435136c85
                    groups:
                      - name: laboriosam
                      - name: totam
                      - name: consequatur
                      - name: doloribus
                      - name: rerum
                      - name: hic
                      - name: provident
                      - name: vero
                      - name: placeat
                      - name: doloremque
                      - name: error
                      - name: officiis
                      - name: quia
                      - name: maiores
                      - name: recusandae
                      - name: quo
                      - name: qui
                      - name: laudantium
                      - name: aliquam
                      - name: laudantium
                group3:
                  value:
                    nextPageToken: 4988aceb-2f57-426b-88e5-45ad01f16923
                    groups:
                      - name: autem
                      - name: excepturi
                      - name: nisi
                      - name: adipisci
                      - name: aut
                      - name: dolores
                      - name: magnam
                      - name: perferendis
                      - name: quae
                      - name: accusamus
                      - name: earum
                      - name: et
                      - name: tempore
                      - name: consequatur
                      - name: et
                      - name: praesentium
                      - name: corporis
                      - name: earum
                      - name: temporibus
                      - name: quo
                group4:
                  value:
                    nextPageToken: 6b6a2763-fe1c-4727-ab07-37e632b899db
                    groups:
                      - name: voluptatem
                      - name: dolores
                      - name: ad
                      - name: sed
                      - name: qui
                      - name: hic
                      - name: culpa
                      - name: ipsam
                      - name: voluptatem
                      - name: praesentium
                      - name: quas
                      - name: et
                      - name: voluptas
                      - name: eius
                      - name: culpa
                      - name: laboriosam
                      - name: libero
                      - name: optio
                      - name: doloribus
                      - name: non
                group5:
                  value:
                    nextPageToken: 7aac3dcd-a39b-4b8b-a570-778530a8c940
                    groups:
                      - name: sunt
                      - name: temporibus
                      - name: inventore
                      - name: est
                      - name: tempora
                      - name: ut
                      - name: optio
                      - name: nesciunt
                      - name: eius
                      - name: excepturi
                      - name: sequi
                      - name: amet
                      - name: sint
                      - name: eius
                      - name: quae
                      - name: facere
                      - name: ad
                      - name: illo
                      - name: ea
                      - name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroupSubgroup
      tags:
        - Groups
      summary: Create group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: voluptas
              group2:
                value:
                  name: quia
              group3:
                value:
                  name: quisquam
              group4:
                value:
                  name: perferendis
              group5:
                value:
                  name: optio
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: voluptas
                group2:
                  value:
                    group:
                      name: ipsa
                group3:
                  value:
                    group:
                      name: eum
                group4:
                  value:
                    group:
                      name: veritatis
                group5:
                  value:
                    group:
                      name: labore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups/{subgroupId}':
    head:
      operationId: checkGroupSubgroup
      tags:
        - Groups
      summary: Check group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroupSubgroup
      tags:
        - Groups
      summary: Get group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: eos
                group2:
                  value:
                    group:
                      name: itaque
                group3:
                  value:
                    group:
                      name: dolorem
                group4:
                  value:
                    group:
                      name: est
                group5:
                  value:
                    group:
                      name: dolorem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroupSubgroup
      tags:
        - Groups
      summary: Replace group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: sapiente
              group2:
                value:
                  name: dolor
              group3:
                value:
                  name: dignissimos
              group4:
                value:
                  name: autem
              group5:
                value:
                  name: vitae
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: laboriosam
                group2:
                  value:
                    group:
                      name: ut
                group3:
                  value:
                    group:
                      name: quas
                group4:
                  value:
                    group:
                      name: aut
                group5:
                  value:
                    group:
                      name: consequuntur
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroupSubgroup
      tags:
        - Groups
      summary: Modify group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: blanditiis
              group2:
                value:
                  name: perspiciatis
              group3:
                value:
                  name: consequatur
              group4:
                value:
                  name: vero
              group5:
                value:
                  name: quis
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: fugiat
                group2:
                  value:
                    group:
                      name: accusamus
                group3:
                  value:
                    group:
                      name: quisquam
                group4:
                  value:
                    group:
                      name: velit
                group5:
                  value:
                    group:
                      name: voluptatem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroupSubgroup
      tags:
        - Groups
      summary: Delete group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}/groups':
    get:
      operationId: listRegionGroups
      tags:
        - Regions
      summary: List region groups
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      regionGroups:
                        type: array
                        items:
                          $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    nextPageToken: 41a359c1-cd65-4669-8869-b503f42d102f
                    regionGroups:
                      - groupId: aperiam
                      - groupId: mollitia
                      - groupId: id
                      - groupId: atque
                      - groupId: quaerat
                      - groupId: tenetur
                      - groupId: repellendus
                      - groupId: doloribus
                      - groupId: optio
                      - groupId: quo
                      - groupId: sit
                      - groupId: illum
                      - groupId: alias
                      - groupId: doloremque
                      - groupId: et
                      - groupId: eligendi
                      - groupId: incidunt
                      - groupId: porro
                      - groupId: molestias
                      - groupId: dignissimos
                regionGroup2:
                  value:
                    nextPageToken: f5d58689-7ca5-4a34-8aa2-4bb2a7e4087a
                    regionGroups:
                      - groupId: totam
                      - groupId: possimus
                      - groupId: architecto
                      - groupId: tempora
                      - groupId: eum
                      - groupId: maiores
                      - groupId: amet
                      - groupId: non
                      - groupId: ex
                      - groupId: voluptate
                      - groupId: dolores
                      - groupId: et
                      - groupId: et
                      - groupId: laudantium
                      - groupId: sapiente
                      - groupId: sit
                      - groupId: nulla
                      - groupId: totam
                      - groupId: inventore
                      - groupId: necessitatibus
                regionGroup3:
                  value:
                    nextPageToken: 5a8181b6-387b-45d2-9650-09e36dd7bb83
                    regionGroups:
                      - groupId: maiores
                      - groupId: quaerat
                      - groupId: quibusdam
                      - groupId: optio
                      - groupId: quis
                      - groupId: voluptates
                      - groupId: in
                      - groupId: consequatur
                      - groupId: repellendus
                      - groupId: cumque
                      - groupId: earum
                      - groupId: sit
                      - groupId: expedita
                      - groupId: ab
                      - groupId: ratione
                      - groupId: nihil
                      - groupId: eligendi
                      - groupId: voluptates
                      - groupId: dolores
                      - groupId: ducimus
                regionGroup4:
                  value:
                    nextPageToken: 4261cb92-a047-47f4-91ff-346dda76a483
                    regionGroups:
                      - groupId: possimus
                      - groupId: reprehenderit
                      - groupId: et
                      - groupId: id
                      - groupId: aliquid
                      - groupId: suscipit
                      - groupId: est
                      - groupId: veritatis
                      - groupId: fugit
                      - groupId: maxime
                      - groupId: quod
                      - groupId: deleniti
                      - groupId: omnis
                      - groupId: et
                      - groupId: delectus
                      - groupId: inventore
                      - groupId: odio
                      - groupId: eum
                      - groupId: ut
                      - groupId: explicabo
                regionGroup5:
                  value:
                    nextPageToken: 595c7d01-e1c9-49c1-bf6f-80e771d8ae1b
                    regionGroups:
                      - groupId: dignissimos
                      - groupId: eligendi
                      - groupId: sunt
                      - groupId: mollitia
                      - groupId: possimus
                      - groupId: aperiam
                      - groupId: a
                      - groupId: asperiores
                      - groupId: voluptates
                      - groupId: fugit
                      - groupId: maxime
                      - groupId: distinctio
                      - groupId: eos
                      - groupId: voluptatibus
                      - groupId: ut
                      - groupId: quaerat
                      - groupId: voluptatem
                      - groupId: id
                      - groupId: similique
                      - groupId: totam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createRegionGroup
      tags:
        - Regions
      summary: Create region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: non
              regionGroup2:
                value:
                  groupId: sunt
              regionGroup3:
                value:
                  groupId: voluptatem
              regionGroup4:
                value:
                  groupId: totam
              regionGroup5:
                value:
                  groupId: quia
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: dolor
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: magnam
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: laudantium
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: eos
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: reiciendis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/regions/{regionId}/groups/{groupId}':
    head:
      operationId: checkRegionGroup
      tags:
        - Regions
      summary: Check region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getRegionGroup
      tags:
        - Regions
      summary: Get region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: beatae
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: pariatur
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: animi
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: aut
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: in
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceRegionGroup
      tags:
        - Regions
      summary: Replace region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: sunt
              regionGroup2:
                value:
                  groupId: labore
              regionGroup3:
                value:
                  groupId: quos
              regionGroup4:
                value:
                  groupId: corrupti
              regionGroup5:
                value:
                  groupId: soluta
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: repellat
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: aut
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: tenetur
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: qui
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: doloribus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyRegionGroup
      tags:
        - Regions
      summary: Modify region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionGroupRequest'
            examples:
              regionGroup1:
                value:
                  groupId: suscipit
              regionGroup2:
                value:
                  groupId: dolor
              regionGroup3:
                value:
                  groupId: eligendi
              regionGroup4:
                value:
                  groupId: possimus
              regionGroup5:
                value:
                  groupId: tenetur
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  regionGroup:
                    $ref: '#/components/schemas/RegionGroupResponse'
              examples:
                regionGroup1:
                  value:
                    regionGroup:
                      groupId: et
                regionGroup2:
                  value:
                    regionGroup:
                      groupId: quidem
                regionGroup3:
                  value:
                    regionGroup:
                      groupId: dolore
                regionGroup4:
                  value:
                    regionGroup:
                      groupId: perferendis
                regionGroup5:
                  value:
                    regionGroup:
                      groupId: atque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteRegionGroup
      tags:
        - Regions
      summary: Delete region group
      parameters:
        - in: path
          required: true
          name: regionId
          schema:
            type: string
          description: Region id
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    GroupResponse:
      properties:
        name:
          type: string
    GroupRequest:
      properties:
        name:
          type: string
    RegionResponse:
      properties:
        name:
          type: string
    RegionRequest:
      properties:
        name:
          type: string
    RegionGroupResponse:
      properties:
        groupId:
          type: string
    RegionGroupRequest:
      properties:
        groupId:
          type: string
