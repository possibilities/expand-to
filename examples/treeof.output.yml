openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: treeOf'
paths:
  /groups:
    get:
      operationId: listGroups
      tags:
        - Groups
      summary: List groups
      parameters:
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                group1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: et
                      - name: est
                      - name: ea
                      - name: natus
                      - name: explicabo
                      - name: dolorem
                      - name: nemo
                      - name: ea
                      - name: dolorem
                      - name: sunt
                      - name: voluptatem
                      - name: sunt
                      - name: laboriosam
                      - name: accusamus
                      - name: commodi
                      - name: quis
                      - name: fugit
                      - name: beatae
                      - name: fugit
                      - name: eaque
                group2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: omnis
                      - name: doloribus
                      - name: laboriosam
                      - name: fugit
                      - name: voluptatem
                      - name: libero
                      - name: dolore
                      - name: aut
                      - name: similique
                      - name: sit
                      - name: a
                      - name: corporis
                      - name: non
                      - name: perspiciatis
                      - name: et
                      - name: perspiciatis
                      - name: eos
                      - name: ex
                      - name: dolores
                      - name: voluptas
                group3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: et
                      - name: repellat
                      - name: beatae
                      - name: et
                      - name: accusamus
                      - name: voluptatum
                      - name: qui
                      - name: enim
                      - name: aut
                      - name: autem
                      - name: aut
                      - name: fugiat
                      - name: non
                      - name: dolor
                      - name: illum
                      - name: similique
                      - name: non
                      - name: est
                      - name: odio
                      - name: doloribus
                group4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: inventore
                      - name: consequatur
                      - name: alias
                      - name: nam
                      - name: magnam
                      - name: odio
                      - name: accusantium
                      - name: eum
                      - name: quidem
                      - name: facilis
                      - name: commodi
                      - name: veritatis
                      - name: rerum
                      - name: aut
                      - name: vitae
                      - name: quas
                      - name: sequi
                      - name: consequatur
                      - name: sit
                      - name: magni
                group5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: repudiandae
                      - name: alias
                      - name: occaecati
                      - name: voluptatem
                      - name: quisquam
                      - name: sint
                      - name: nemo
                      - name: et
                      - name: illo
                      - name: eveniet
                      - name: quidem
                      - name: et
                      - name: voluptas
                      - name: quia
                      - name: dolor
                      - name: suscipit
                      - name: aut
                      - name: omnis
                      - name: debitis
                      - name: id
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroup
      tags:
        - Groups
      summary: Create group
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: deserunt
              group2:
                value:
                  name: explicabo
              group3:
                value:
                  name: possimus
              group4:
                value:
                  name: corrupti
              group5:
                value:
                  name: inventore
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: facere
                group2:
                  value:
                    group:
                      name: qui
                group3:
                  value:
                    group:
                      name: numquam
                group4:
                  value:
                    group:
                      name: earum
                group5:
                  value:
                    group:
                      name: optio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}':
    head:
      operationId: checkGroup
      tags:
        - Groups
      summary: Check group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroup
      tags:
        - Groups
      summary: Get group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: repellendus
                group2:
                  value:
                    group:
                      name: iste
                group3:
                  value:
                    group:
                      name: ipsum
                group4:
                  value:
                    group:
                      name: libero
                group5:
                  value:
                    group:
                      name: error
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroup
      tags:
        - Groups
      summary: Replace group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: adipisci
              group2:
                value:
                  name: tempore
              group3:
                value:
                  name: id
              group4:
                value:
                  name: ea
              group5:
                value:
                  name: labore
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: est
                group2:
                  value:
                    group:
                      name: similique
                group3:
                  value:
                    group:
                      name: alias
                group4:
                  value:
                    group:
                      name: non
                group5:
                  value:
                    group:
                      name: optio
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroup
      tags:
        - Groups
      summary: Modify group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: facilis
              group2:
                value:
                  name: voluptatem
              group3:
                value:
                  name: blanditiis
              group4:
                value:
                  name: inventore
              group5:
                value:
                  name: et
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: quisquam
                group2:
                  value:
                    group:
                      name: rerum
                group3:
                  value:
                    group:
                      name: quo
                group4:
                  value:
                    group:
                      name: fuga
                group5:
                  value:
                    group:
                      name: doloremque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroup
      tags:
        - Groups
      summary: Delete group
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups':
    get:
      operationId: listGroupSubgroups
      tags:
        - Groups
      summary: List group subgroups
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - name: perPage
          description: Per page
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: page
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupResponse'
                  pages:
                    $ref: '#/components/schemas/PaginationResponse'
              examples:
                group1:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: veritatis
                      - name: est
                      - name: rerum
                      - name: odit
                      - name: deserunt
                      - name: consequuntur
                      - name: reprehenderit
                      - name: voluptatem
                      - name: dolorum
                      - name: eum
                      - name: qui
                      - name: ut
                      - name: ut
                      - name: neque
                      - name: excepturi
                      - name: sit
                      - name: quia
                      - name: maxime
                      - name: odit
                      - name: sunt
                group2:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: non
                      - name: commodi
                      - name: voluptatibus
                      - name: fugiat
                      - name: dolores
                      - name: rem
                      - name: tempore
                      - name: qui
                      - name: illum
                      - name: eum
                      - name: nobis
                      - name: hic
                      - name: officiis
                      - name: dolore
                      - name: consequatur
                      - name: sit
                      - name: aspernatur
                      - name: tenetur
                      - name: saepe
                      - name: non
                group3:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: asperiores
                      - name: et
                      - name: dignissimos
                      - name: ut
                      - name: neque
                      - name: nesciunt
                      - name: officia
                      - name: illum
                      - name: explicabo
                      - name: id
                      - name: ut
                      - name: corporis
                      - name: praesentium
                      - name: ipsam
                      - name: ea
                      - name: ea
                      - name: sit
                      - name: amet
                      - name: accusantium
                      - name: repellat
                group4:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: doloremque
                      - name: ipsum
                      - name: consequatur
                      - name: non
                      - name: doloremque
                      - name: vel
                      - name: aut
                      - name: qui
                      - name: qui
                      - name: et
                      - name: consequuntur
                      - name: suscipit
                      - name: sunt
                      - name: minus
                      - name: aut
                      - name: nihil
                      - name: officia
                      - name: iusto
                      - name: aut
                      - name: nihil
                group5:
                  value:
                    pagination:
                      firstPage: 1
                      lastPage: 10
                      nextPage: 2
                      prevPage: 1
                    groups:
                      - name: eligendi
                      - name: asperiores
                      - name: blanditiis
                      - name: impedit
                      - name: nihil
                      - name: fugit
                      - name: in
                      - name: voluptatem
                      - name: autem
                      - name: qui
                      - name: sint
                      - name: accusantium
                      - name: debitis
                      - name: odio
                      - name: et
                      - name: alias
                      - name: ea
                      - name: hic
                      - name: reiciendis
                      - name: possimus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createGroupSubgroup
      tags:
        - Groups
      summary: Create group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: debitis
              group2:
                value:
                  name: omnis
              group3:
                value:
                  name: magni
              group4:
                value:
                  name: asperiores
              group5:
                value:
                  name: non
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: sit
                group2:
                  value:
                    group:
                      name: est
                group3:
                  value:
                    group:
                      name: dignissimos
                group4:
                  value:
                    group:
                      name: est
                group5:
                  value:
                    group:
                      name: voluptatem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/groups/{groupId}/subgroups/{subgroupId}':
    head:
      operationId: checkGroupSubgroup
      tags:
        - Groups
      summary: Check group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getGroupSubgroup
      tags:
        - Groups
      summary: Get group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: nobis
                group2:
                  value:
                    group:
                      name: harum
                group3:
                  value:
                    group:
                      name: quia
                group4:
                  value:
                    group:
                      name: non
                group5:
                  value:
                    group:
                      name: voluptas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceGroupSubgroup
      tags:
        - Groups
      summary: Replace group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: natus
              group2:
                value:
                  name: veritatis
              group3:
                value:
                  name: rerum
              group4:
                value:
                  name: asperiores
              group5:
                value:
                  name: est
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: inventore
                group2:
                  value:
                    group:
                      name: et
                group3:
                  value:
                    group:
                      name: eaque
                group4:
                  value:
                    group:
                      name: distinctio
                group5:
                  value:
                    group:
                      name: magnam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyGroupSubgroup
      tags:
        - Groups
      summary: Modify group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
            examples:
              group1:
                value:
                  name: enim
              group2:
                value:
                  name: temporibus
              group3:
                value:
                  name: qui
              group4:
                value:
                  name: ut
              group5:
                value:
                  name: et
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  group:
                    $ref: '#/components/schemas/GroupResponse'
              examples:
                group1:
                  value:
                    group:
                      name: consequuntur
                group2:
                  value:
                    group:
                      name: nostrum
                group3:
                  value:
                    group:
                      name: cum
                group4:
                  value:
                    group:
                      name: vero
                group5:
                  value:
                    group:
                      name: voluptas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteGroupSubgroup
      tags:
        - Groups
      summary: Delete group subgroup
      parameters:
        - in: path
          required: true
          name: groupId
          schema:
            type: string
          description: Group id
        - in: path
          required: true
          name: subgroupId
          schema:
            type: string
          description: Subgroup id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        firstPage:
          type: integer
          format: int32
        lastPage:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int32
        prevPage:
          type: integer
          format: int32
      required:
        - firstPage
        - lastPage
        - nextPage
        - prevPage
    GroupResponse:
      properties:
        name:
          type: string
    GroupRequest:
      properties:
        name:
          type: string
