openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: hasMany polymorphism'
paths:
  /people:
    get:
      operationId: listPeople
      tags:
        - People
      summary: List people
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      people:
                        type: array
                        items:
                          $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    nextPageToken: 83b40fa8-0705-4401-a767-a115a54173cf
                    people:
                      - name: iste
                      - name: sunt
                      - name: dolorem
                      - name: quo
                      - name: dolorum
                      - name: in
                      - name: quis
                      - name: et
                      - name: vitae
                      - name: odit
                      - name: fugit
                      - name: omnis
                      - name: voluptas
                      - name: cumque
                      - name: similique
                      - name: voluptas
                      - name: ut
                      - name: non
                      - name: iste
                      - name: quisquam
                person2:
                  value:
                    nextPageToken: 47cfbe46-6d25-444f-a484-d12fb48d4e01
                    people:
                      - name: ut
                      - name: illo
                      - name: sequi
                      - name: aliquid
                      - name: ad
                      - name: mollitia
                      - name: porro
                      - name: ea
                      - name: qui
                      - name: consequatur
                      - name: rerum
                      - name: error
                      - name: cumque
                      - name: omnis
                      - name: iste
                      - name: ipsa
                      - name: beatae
                      - name: qui
                      - name: quasi
                      - name: expedita
                person3:
                  value:
                    nextPageToken: 674f4274-43e5-43f9-9fcb-7845d418d784
                    people:
                      - name: autem
                      - name: et
                      - name: est
                      - name: eos
                      - name: ullam
                      - name: natus
                      - name: et
                      - name: ut
                      - name: molestiae
                      - name: nulla
                      - name: nihil
                      - name: sed
                      - name: laudantium
                      - name: et
                      - name: dolores
                      - name: voluptatibus
                      - name: voluptatem
                      - name: voluptate
                      - name: quae
                      - name: corrupti
                person4:
                  value:
                    nextPageToken: b7600fcf-1e26-49a1-aa69-a8eb451c6eca
                    people:
                      - name: asperiores
                      - name: voluptas
                      - name: fuga
                      - name: iste
                      - name: commodi
                      - name: enim
                      - name: dolorum
                      - name: dolorem
                      - name: dicta
                      - name: doloremque
                      - name: dolore
                      - name: voluptatem
                      - name: consequatur
                      - name: dicta
                      - name: laudantium
                      - name: voluptas
                      - name: est
                      - name: sapiente
                      - name: quo
                      - name: velit
                person5:
                  value:
                    nextPageToken: 5b057526-d262-4a25-9a79-57c57e7a91fb
                    people:
                      - name: dolorum
                      - name: id
                      - name: aliquam
                      - name: totam
                      - name: et
                      - name: asperiores
                      - name: voluptatum
                      - name: non
                      - name: a
                      - name: distinctio
                      - name: qui
                      - name: unde
                      - name: molestias
                      - name: non
                      - name: eius
                      - name: cumque
                      - name: voluptas
                      - name: aliquam
                      - name: numquam
                      - name: sit
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPerson
      tags:
        - People
      summary: Create person
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: neque
              person2:
                value:
                  name: qui
              person3:
                value:
                  name: voluptate
              person4:
                value:
                  name: ullam
              person5:
                value:
                  name: omnis
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: et
                person2:
                  value:
                    person:
                      name: culpa
                person3:
                  value:
                    person:
                      name: sunt
                person4:
                  value:
                    person:
                      name: ad
                person5:
                  value:
                    person:
                      name: illum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/people/{personId}':
    head:
      operationId: checkPerson
      tags:
        - People
      summary: Check person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPerson
      tags:
        - People
      summary: Get person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: officia
                person2:
                  value:
                    person:
                      name: praesentium
                person3:
                  value:
                    person:
                      name: expedita
                person4:
                  value:
                    person:
                      name: minima
                person5:
                  value:
                    person:
                      name: labore
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePerson
      tags:
        - People
      summary: Replace person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: delectus
              person2:
                value:
                  name: rerum
              person3:
                value:
                  name: fugiat
              person4:
                value:
                  name: atque
              person5:
                value:
                  name: aut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: magnam
                person2:
                  value:
                    person:
                      name: vitae
                person3:
                  value:
                    person:
                      name: facilis
                person4:
                  value:
                    person:
                      name: nihil
                person5:
                  value:
                    person:
                      name: magni
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPerson
      tags:
        - People
      summary: Modify person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonRequest'
            examples:
              person1:
                value:
                  name: et
              person2:
                value:
                  name: est
              person3:
                value:
                  name: rerum
              person4:
                value:
                  name: corrupti
              person5:
                value:
                  name: odio
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  person:
                    $ref: '#/components/schemas/PersonResponse'
              examples:
                person1:
                  value:
                    person:
                      name: aut
                person2:
                  value:
                    person:
                      name: ab
                person3:
                  value:
                    person:
                      name: et
                person4:
                  value:
                    person:
                      name: et
                person5:
                  value:
                    person:
                      name: ullam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePerson
      tags:
        - People
      summary: Delete person
      parameters:
        - in: path
          required: true
          name: personId
          schema:
            type: string
          description: Person id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /pets:
    get:
      operationId: listPets
      tags:
        - Pets
      summary: List pets
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      pets:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    nextPageToken: e47961d2-ce54-4cad-b747-e2cd9167b316
                    pets:
                      - name: temporibus
                      - name: cum
                      - name: deleniti
                      - name: natus
                      - name: dolor
                      - name: odit
                      - name: tenetur
                      - name: est
                      - name: at
                      - name: est
                      - name: laboriosam
                      - name: necessitatibus
                      - name: deserunt
                      - name: voluptate
                      - name: ea
                      - name: aut
                      - name: odio
                      - name: odio
                      - name: sed
                      - name: ut
                pet2:
                  value:
                    nextPageToken: db4ad989-3a21-4f76-95c2-0d072ad23faf
                    pets:
                      - name: eos
                      - name: culpa
                      - name: pariatur
                      - name: dolorum
                      - name: reprehenderit
                      - name: cum
                      - name: eveniet
                      - name: est
                      - name: alias
                      - name: quaerat
                      - name: placeat
                      - name: illo
                      - name: temporibus
                      - name: consectetur
                      - name: sed
                      - name: facere
                      - name: officiis
                      - name: est
                      - name: ab
                      - name: asperiores
                pet3:
                  value:
                    nextPageToken: 47f82d56-0da4-477c-acdb-a9e92c7f5de5
                    pets:
                      - name: voluptatem
                      - name: consequatur
                      - name: minima
                      - name: nobis
                      - name: sunt
                      - name: distinctio
                      - name: fugiat
                      - name: ex
                      - name: non
                      - name: et
                      - name: eius
                      - name: ut
                      - name: corporis
                      - name: ex
                      - name: similique
                      - name: fugit
                      - name: voluptates
                      - name: iusto
                      - name: vel
                      - name: eum
                pet4:
                  value:
                    nextPageToken: 6afc04c6-1461-424a-a63b-eb28f182a654
                    pets:
                      - name: dolor
                      - name: tempora
                      - name: enim
                      - name: iusto
                      - name: necessitatibus
                      - name: qui
                      - name: cupiditate
                      - name: consequatur
                      - name: enim
                      - name: corporis
                      - name: sunt
                      - name: molestiae
                      - name: et
                      - name: sed
                      - name: ex
                      - name: et
                      - name: officiis
                      - name: consequuntur
                      - name: ex
                      - name: modi
                pet5:
                  value:
                    nextPageToken: 8ea9a8aa-f262-420f-a5e0-29b51ecc7b48
                    pets:
                      - name: voluptates
                      - name: illo
                      - name: molestiae
                      - name: sit
                      - name: dignissimos
                      - name: facere
                      - name: aliquid
                      - name: ut
                      - name: error
                      - name: iure
                      - name: eum
                      - name: possimus
                      - name: aut
                      - name: vero
                      - name: aut
                      - name: quasi
                      - name: temporibus
                      - name: aliquam
                      - name: voluptates
                      - name: aliquid
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPet
      tags:
        - Pets
      summary: Create pet
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: tenetur
              pet2:
                value:
                  name: quia
              pet3:
                value:
                  name: sit
              pet4:
                value:
                  name: omnis
              pet5:
                value:
                  name: molestiae
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: modi
                pet2:
                  value:
                    pet:
                      name: aut
                pet3:
                  value:
                    pet:
                      name: nisi
                pet4:
                  value:
                    pet:
                      name: et
                pet5:
                  value:
                    pet:
                      name: animi
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}':
    head:
      operationId: checkPet
      tags:
        - Pets
      summary: Check pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPet
      tags:
        - Pets
      summary: Get pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: dolorum
                pet2:
                  value:
                    pet:
                      name: ut
                pet3:
                  value:
                    pet:
                      name: sed
                pet4:
                  value:
                    pet:
                      name: perferendis
                pet5:
                  value:
                    pet:
                      name: et
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePet
      tags:
        - Pets
      summary: Replace pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: sit
              pet2:
                value:
                  name: voluptatum
              pet3:
                value:
                  name: nemo
              pet4:
                value:
                  name: dolorem
              pet5:
                value:
                  name: aut
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: labore
                pet2:
                  value:
                    pet:
                      name: magnam
                pet3:
                  value:
                    pet:
                      name: doloremque
                pet4:
                  value:
                    pet:
                      name: in
                pet5:
                  value:
                    pet:
                      name: explicabo
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPet
      tags:
        - Pets
      summary: Modify pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
            examples:
              pet1:
                value:
                  name: quis
              pet2:
                value:
                  name: impedit
              pet3:
                value:
                  name: aliquid
              pet4:
                value:
                  name: vel
              pet5:
                value:
                  name: qui
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  pet:
                    $ref: '#/components/schemas/PetResponse'
              examples:
                pet1:
                  value:
                    pet:
                      name: iure
                pet2:
                  value:
                    pet:
                      name: iusto
                pet3:
                  value:
                    pet:
                      name: quod
                pet4:
                  value:
                    pet:
                      name: qui
                pet5:
                  value:
                    pet:
                      name: necessitatibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePet
      tags:
        - Pets
      summary: Delete pet
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners':
    get:
      operationId: listPetOwners
      tags:
        - Pets
      summary: List pet owners
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petOwners:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    nextPageToken: 08953e44-ed79-423c-9706-985e2545cb2e
                    petOwners:
                      - ownerId: sit
                      - ownerId: tenetur
                      - ownerId: ab
                      - ownerId: ut
                      - ownerId: sed
                      - ownerId: incidunt
                      - ownerId: itaque
                      - ownerId: earum
                      - ownerId: voluptas
                      - ownerId: facilis
                      - ownerId: velit
                      - ownerId: praesentium
                      - ownerId: rerum
                      - ownerId: magnam
                      - ownerId: unde
                      - ownerId: voluptas
                      - ownerId: omnis
                      - ownerId: ullam
                      - ownerId: voluptatibus
                      - ownerId: cupiditate
                petOwner2:
                  value:
                    nextPageToken: 4a8f69b8-aacb-4441-8071-60bdb50e2ce4
                    petOwners:
                      - ownerId: itaque
                      - ownerId: omnis
                      - ownerId: alias
                      - ownerId: suscipit
                      - ownerId: cupiditate
                      - ownerId: non
                      - ownerId: amet
                      - ownerId: necessitatibus
                      - ownerId: consequuntur
                      - ownerId: est
                      - ownerId: omnis
                      - ownerId: corporis
                      - ownerId: cum
                      - ownerId: similique
                      - ownerId: dicta
                      - ownerId: quas
                      - ownerId: sint
                      - ownerId: rem
                      - ownerId: autem
                      - ownerId: quia
                petOwner3:
                  value:
                    nextPageToken: 9e96a084-dbac-4b72-bbc2-00960726085c
                    petOwners:
                      - ownerId: eum
                      - ownerId: ipsam
                      - ownerId: sunt
                      - ownerId: vitae
                      - ownerId: quaerat
                      - ownerId: aliquam
                      - ownerId: asperiores
                      - ownerId: earum
                      - ownerId: rerum
                      - ownerId: optio
                      - ownerId: possimus
                      - ownerId: aliquid
                      - ownerId: eos
                      - ownerId: et
                      - ownerId: inventore
                      - ownerId: quasi
                      - ownerId: suscipit
                      - ownerId: voluptatem
                      - ownerId: qui
                      - ownerId: consequatur
                petOwner4:
                  value:
                    nextPageToken: e888af16-f76f-4e15-b9ea-93d6bf7c4154
                    petOwners:
                      - ownerId: vero
                      - ownerId: natus
                      - ownerId: sint
                      - ownerId: tempore
                      - ownerId: laudantium
                      - ownerId: ut
                      - ownerId: quo
                      - ownerId: saepe
                      - ownerId: et
                      - ownerId: aut
                      - ownerId: et
                      - ownerId: harum
                      - ownerId: voluptas
                      - ownerId: praesentium
                      - ownerId: occaecati
                      - ownerId: quia
                      - ownerId: consequuntur
                      - ownerId: placeat
                      - ownerId: voluptas
                      - ownerId: impedit
                petOwner5:
                  value:
                    nextPageToken: 370a4328-f6db-4c16-ae36-e370b4280e8a
                    petOwners:
                      - ownerId: voluptatem
                      - ownerId: adipisci
                      - ownerId: animi
                      - ownerId: ut
                      - ownerId: atque
                      - ownerId: voluptatem
                      - ownerId: veniam
                      - ownerId: eveniet
                      - ownerId: dolorem
                      - ownerId: et
                      - ownerId: expedita
                      - ownerId: aut
                      - ownerId: voluptatem
                      - ownerId: nihil
                      - ownerId: dolorem
                      - ownerId: vitae
                      - ownerId: veritatis
                      - ownerId: molestiae
                      - ownerId: sed
                      - ownerId: facere
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetOwner
      tags:
        - Pets
      summary: Create pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: et
              petOwner2:
                value:
                  ownerId: consequatur
              petOwner3:
                value:
                  ownerId: vitae
              petOwner4:
                value:
                  ownerId: tempore
              petOwner5:
                value:
                  ownerId: laborum
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: expedita
                petOwner2:
                  value:
                    petOwner:
                      ownerId: et
                petOwner3:
                  value:
                    petOwner:
                      ownerId: ut
                petOwner4:
                  value:
                    petOwner:
                      ownerId: blanditiis
                petOwner5:
                  value:
                    petOwner:
                      ownerId: aut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/owners/{ownerId}':
    head:
      operationId: checkPetOwner
      tags:
        - Pets
      summary: Check pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetOwner
      tags:
        - Pets
      summary: Get pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: corrupti
                petOwner2:
                  value:
                    petOwner:
                      ownerId: minima
                petOwner3:
                  value:
                    petOwner:
                      ownerId: minus
                petOwner4:
                  value:
                    petOwner:
                      ownerId: cupiditate
                petOwner5:
                  value:
                    petOwner:
                      ownerId: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetOwner
      tags:
        - Pets
      summary: Replace pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: vero
              petOwner2:
                value:
                  ownerId: error
              petOwner3:
                value:
                  ownerId: est
              petOwner4:
                value:
                  ownerId: debitis
              petOwner5:
                value:
                  ownerId: dolor
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: cum
                petOwner2:
                  value:
                    petOwner:
                      ownerId: molestiae
                petOwner3:
                  value:
                    petOwner:
                      ownerId: consectetur
                petOwner4:
                  value:
                    petOwner:
                      ownerId: vel
                petOwner5:
                  value:
                    petOwner:
                      ownerId: dolores
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetOwner
      tags:
        - Pets
      summary: Modify pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetOwnerRequest'
            examples:
              petOwner1:
                value:
                  ownerId: rerum
              petOwner2:
                value:
                  ownerId: rerum
              petOwner3:
                value:
                  ownerId: ducimus
              petOwner4:
                value:
                  ownerId: commodi
              petOwner5:
                value:
                  ownerId: vel
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petOwner:
                    $ref: '#/components/schemas/PetOwnerResponse'
              examples:
                petOwner1:
                  value:
                    petOwner:
                      ownerId: reprehenderit
                petOwner2:
                  value:
                    petOwner:
                      ownerId: pariatur
                petOwner3:
                  value:
                    petOwner:
                      ownerId: dolorum
                petOwner4:
                  value:
                    petOwner:
                      ownerId: quae
                petOwner5:
                  value:
                    petOwner:
                      ownerId: quis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetOwner
      tags:
        - Pets
      summary: Delete pet owner
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: ownerId
          schema:
            type: string
          description: Owner id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors':
    get:
      operationId: listPetDoctors
      tags:
        - Pets
      summary: List pet doctors
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      petDoctors:
                        type: array
                        items:
                          $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    nextPageToken: cb9d2d9d-56d8-4184-83fa-a87b9f353c61
                    petDoctors:
                      - doctorId: assumenda
                      - doctorId: ut
                      - doctorId: porro
                      - doctorId: consectetur
                      - doctorId: cupiditate
                      - doctorId: ut
                      - doctorId: autem
                      - doctorId: molestias
                      - doctorId: rerum
                      - doctorId: ipsum
                      - doctorId: fuga
                      - doctorId: quibusdam
                      - doctorId: et
                      - doctorId: maiores
                      - doctorId: corporis
                      - doctorId: repudiandae
                      - doctorId: ut
                      - doctorId: totam
                      - doctorId: iusto
                      - doctorId: illum
                petDoctor2:
                  value:
                    nextPageToken: a834a115-0f33-4acc-97ea-420b64f5bf95
                    petDoctors:
                      - doctorId: amet
                      - doctorId: nulla
                      - doctorId: ab
                      - doctorId: commodi
                      - doctorId: pariatur
                      - doctorId: consequatur
                      - doctorId: deserunt
                      - doctorId: officia
                      - doctorId: dolor
                      - doctorId: incidunt
                      - doctorId: aut
                      - doctorId: sint
                      - doctorId: enim
                      - doctorId: id
                      - doctorId: et
                      - doctorId: voluptate
                      - doctorId: explicabo
                      - doctorId: quam
                      - doctorId: excepturi
                      - doctorId: qui
                petDoctor3:
                  value:
                    nextPageToken: 18916415-62e3-4379-878c-63ea7e5012c1
                    petDoctors:
                      - doctorId: asperiores
                      - doctorId: ratione
                      - doctorId: et
                      - doctorId: impedit
                      - doctorId: quo
                      - doctorId: rerum
                      - doctorId: amet
                      - doctorId: quidem
                      - doctorId: quod
                      - doctorId: molestiae
                      - doctorId: adipisci
                      - doctorId: sint
                      - doctorId: vel
                      - doctorId: labore
                      - doctorId: eveniet
                      - doctorId: et
                      - doctorId: dolorem
                      - doctorId: molestiae
                      - doctorId: quis
                      - doctorId: nesciunt
                petDoctor4:
                  value:
                    nextPageToken: 5c3a8c85-99f8-4b06-8f3a-c749b22bb304
                    petDoctors:
                      - doctorId: quia
                      - doctorId: fugit
                      - doctorId: et
                      - doctorId: dolor
                      - doctorId: reiciendis
                      - doctorId: officiis
                      - doctorId: doloribus
                      - doctorId: quod
                      - doctorId: nulla
                      - doctorId: quia
                      - doctorId: sint
                      - doctorId: nihil
                      - doctorId: id
                      - doctorId: expedita
                      - doctorId: autem
                      - doctorId: voluptatem
                      - doctorId: laborum
                      - doctorId: nulla
                      - doctorId: illum
                      - doctorId: autem
                petDoctor5:
                  value:
                    nextPageToken: 804795a3-e732-4bb8-a91d-4f973b63edec
                    petDoctors:
                      - doctorId: doloremque
                      - doctorId: quas
                      - doctorId: magnam
                      - doctorId: modi
                      - doctorId: nesciunt
                      - doctorId: dicta
                      - doctorId: vel
                      - doctorId: adipisci
                      - doctorId: qui
                      - doctorId: quam
                      - doctorId: consequuntur
                      - doctorId: omnis
                      - doctorId: corporis
                      - doctorId: fugiat
                      - doctorId: sunt
                      - doctorId: dolorem
                      - doctorId: modi
                      - doctorId: rerum
                      - doctorId: dignissimos
                      - doctorId: quas
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createPetDoctor
      tags:
        - Pets
      summary: Create pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: iusto
              petDoctor2:
                value:
                  doctorId: quam
              petDoctor3:
                value:
                  doctorId: omnis
              petDoctor4:
                value:
                  doctorId: aliquid
              petDoctor5:
                value:
                  doctorId: sint
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: eum
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: et
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: natus
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: rerum
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: ut
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/pets/{petId}/doctors/{doctorId}':
    head:
      operationId: checkPetDoctor
      tags:
        - Pets
      summary: Check pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getPetDoctor
      tags:
        - Pets
      summary: Get pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: earum
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: eveniet
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: eaque
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: qui
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: harum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replacePetDoctor
      tags:
        - Pets
      summary: Replace pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: dolorem
              petDoctor2:
                value:
                  doctorId: et
              petDoctor3:
                value:
                  doctorId: aliquam
              petDoctor4:
                value:
                  doctorId: unde
              petDoctor5:
                value:
                  doctorId: ducimus
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: aliquam
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: soluta
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: eos
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: dolore
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: eum
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyPetDoctor
      tags:
        - Pets
      summary: Modify pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetDoctorRequest'
            examples:
              petDoctor1:
                value:
                  doctorId: adipisci
              petDoctor2:
                value:
                  doctorId: autem
              petDoctor3:
                value:
                  doctorId: similique
              petDoctor4:
                value:
                  doctorId: illum
              petDoctor5:
                value:
                  doctorId: ut
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  petDoctor:
                    $ref: '#/components/schemas/PetDoctorResponse'
              examples:
                petDoctor1:
                  value:
                    petDoctor:
                      doctorId: laborum
                petDoctor2:
                  value:
                    petDoctor:
                      doctorId: mollitia
                petDoctor3:
                  value:
                    petDoctor:
                      doctorId: est
                petDoctor4:
                  value:
                    petDoctor:
                      doctorId: aperiam
                petDoctor5:
                  value:
                    petDoctor:
                      doctorId: facere
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deletePetDoctor
      tags:
        - Pets
      summary: Delete pet doctor
      parameters:
        - in: path
          required: true
          name: petId
          schema:
            type: string
          description: Pet id
        - in: path
          required: true
          name: doctorId
          schema:
            type: string
          description: Doctor id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    PersonResponse:
      properties:
        name:
          type: string
    PersonRequest:
      properties:
        name:
          type: string
    PetResponse:
      properties:
        name:
          type: string
    PetRequest:
      properties:
        name:
          type: string
    PetOwnerResponse:
      properties:
        ownerId:
          type: string
    PetOwnerRequest:
      properties:
        ownerId:
          type: string
    PetDoctorResponse:
      properties:
        doctorId:
          type: string
    PetDoctorRequest:
      properties:
        doctorId:
          type: string
