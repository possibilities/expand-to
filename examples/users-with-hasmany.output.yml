openapi: 3.0.0
info:
  version: 0.0.0
  title: 'Example: users with hasMany'
paths:
  /courses:
    get:
      operationId: listCourses
      tags:
        - Courses
      summary: List courses
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 24a52557-7544-44b0-817e-3a0a08d12460
                    courses:
                      - name: ea
                      - name: vero
                      - name: id
                      - name: dolorem
                      - name: nemo
                      - name: et
                      - name: voluptate
                      - name: doloremque
                      - name: tenetur
                      - name: voluptatibus
                      - name: dolor
                      - name: dolore
                      - name: rerum
                      - name: minima
                      - name: sapiente
                      - name: voluptas
                      - name: doloribus
                      - name: dolor
                      - name: totam
                      - name: quis
                course2:
                  value:
                    nextPageToken: 561f182a-17cb-4eeb-b4ea-7b254cc283bd
                    courses:
                      - name: aut
                      - name: pariatur
                      - name: totam
                      - name: quasi
                      - name: blanditiis
                      - name: atque
                      - name: quod
                      - name: fuga
                      - name: nobis
                      - name: cupiditate
                      - name: numquam
                      - name: ea
                      - name: praesentium
                      - name: qui
                      - name: libero
                      - name: vel
                      - name: dolores
                      - name: vel
                      - name: qui
                      - name: consequuntur
                course3:
                  value:
                    nextPageToken: 9ac427c3-3bc9-421b-9893-3173a295397d
                    courses:
                      - name: a
                      - name: repellendus
                      - name: natus
                      - name: commodi
                      - name: nisi
                      - name: eaque
                      - name: eum
                      - name: laboriosam
                      - name: sapiente
                      - name: quia
                      - name: rerum
                      - name: illum
                      - name: eos
                      - name: amet
                      - name: voluptas
                      - name: vero
                      - name: maxime
                      - name: tempore
                      - name: ut
                      - name: sunt
                course4:
                  value:
                    nextPageToken: 91045efe-69d2-42b3-8d60-af40b38134c4
                    courses:
                      - name: id
                      - name: enim
                      - name: est
                      - name: iste
                      - name: ut
                      - name: voluptas
                      - name: sequi
                      - name: architecto
                      - name: et
                      - name: iusto
                      - name: magnam
                      - name: rerum
                      - name: et
                      - name: rerum
                      - name: eligendi
                      - name: rerum
                      - name: illum
                      - name: aut
                      - name: qui
                      - name: expedita
                course5:
                  value:
                    nextPageToken: 818022aa-f3de-465f-8a1c-4edeaa9b3d23
                    courses:
                      - name: quasi
                      - name: sit
                      - name: vel
                      - name: beatae
                      - name: totam
                      - name: fuga
                      - name: blanditiis
                      - name: ducimus
                      - name: odit
                      - name: debitis
                      - name: officiis
                      - name: mollitia
                      - name: rerum
                      - name: quaerat
                      - name: dolor
                      - name: sed
                      - name: tempore
                      - name: tenetur
                      - name: voluptatem
                      - name: quae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourse
      tags:
        - Courses
      summary: Create course
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: ad
              course2:
                value:
                  name: dolor
              course3:
                value:
                  name: soluta
              course4:
                value:
                  name: exercitationem
              course5:
                value:
                  name: reprehenderit
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: rerum
                course2:
                  value:
                    course:
                      name: nihil
                course3:
                  value:
                    course:
                      name: ipsam
                course4:
                  value:
                    course:
                      name: temporibus
                course5:
                  value:
                    course:
                      name: possimus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/courses/{courseId}':
    head:
      operationId: checkCourse
      tags:
        - Courses
      summary: Check course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourse
      tags:
        - Courses
      summary: Get course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: placeat
                course2:
                  value:
                    course:
                      name: odit
                course3:
                  value:
                    course:
                      name: non
                course4:
                  value:
                    course:
                      name: dolor
                course5:
                  value:
                    course:
                      name: atque
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourse
      tags:
        - Courses
      summary: Replace course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: rerum
              course2:
                value:
                  name: qui
              course3:
                value:
                  name: reiciendis
              course4:
                value:
                  name: libero
              course5:
                value:
                  name: nihil
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: dolor
                course2:
                  value:
                    course:
                      name: sequi
                course3:
                  value:
                    course:
                      name: sed
                course4:
                  value:
                    course:
                      name: labore
                course5:
                  value:
                    course:
                      name: nobis
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourse
      tags:
        - Courses
      summary: Modify course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: libero
              course2:
                value:
                  name: magnam
              course3:
                value:
                  name: qui
              course4:
                value:
                  name: harum
              course5:
                value:
                  name: eos
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: tenetur
                course2:
                  value:
                    course:
                      name: debitis
                course3:
                  value:
                    course:
                      name: voluptatibus
                course4:
                  value:
                    course:
                      name: cupiditate
                course5:
                  value:
                    course:
                      name: aliquam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourse
      tags:
        - Courses
      summary: Delete course
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      operationId: listUsers
      tags:
        - Users
      summary: List users
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    nextPageToken: 7eb533a1-ecd7-47cf-9ceb-d5905170b018
                    users:
                      - name: autem
                      - name: dolorem
                      - name: placeat
                      - name: sed
                      - name: saepe
                      - name: eaque
                      - name: rerum
                      - name: molestiae
                      - name: ab
                      - name: sit
                      - name: impedit
                      - name: ea
                      - name: rerum
                      - name: et
                      - name: ullam
                      - name: soluta
                      - name: enim
                      - name: labore
                      - name: labore
                      - name: accusamus
                user2:
                  value:
                    nextPageToken: 45ee3ec6-af91-4363-b8fd-d09b02db88f5
                    users:
                      - name: dolorem
                      - name: libero
                      - name: doloribus
                      - name: explicabo
                      - name: asperiores
                      - name: esse
                      - name: veniam
                      - name: possimus
                      - name: libero
                      - name: corrupti
                      - name: quaerat
                      - name: aspernatur
                      - name: magnam
                      - name: eaque
                      - name: et
                      - name: at
                      - name: eos
                      - name: quaerat
                      - name: fugit
                      - name: voluptatum
                user3:
                  value:
                    nextPageToken: 26c7728f-9e1e-4526-b40a-f96d797395fc
                    users:
                      - name: ullam
                      - name: dolorem
                      - name: voluptates
                      - name: dolor
                      - name: suscipit
                      - name: distinctio
                      - name: occaecati
                      - name: officiis
                      - name: vel
                      - name: labore
                      - name: doloremque
                      - name: eius
                      - name: iure
                      - name: optio
                      - name: nobis
                      - name: fugiat
                      - name: id
                      - name: hic
                      - name: voluptate
                      - name: sint
                user4:
                  value:
                    nextPageToken: 63971c0a-da81-41d3-b88c-5906476aca4e
                    users:
                      - name: error
                      - name: et
                      - name: nihil
                      - name: odio
                      - name: rerum
                      - name: atque
                      - name: quo
                      - name: eveniet
                      - name: beatae
                      - name: sed
                      - name: odio
                      - name: eligendi
                      - name: ex
                      - name: commodi
                      - name: quos
                      - name: debitis
                      - name: neque
                      - name: cum
                      - name: exercitationem
                      - name: impedit
                user5:
                  value:
                    nextPageToken: ccb9a14f-e5f4-4845-9b2c-8773d7ff65bb
                    users:
                      - name: qui
                      - name: dicta
                      - name: dolores
                      - name: maxime
                      - name: et
                      - name: hic
                      - name: esse
                      - name: assumenda
                      - name: labore
                      - name: quia
                      - name: ullam
                      - name: dolorem
                      - name: iure
                      - name: sed
                      - name: adipisci
                      - name: atque
                      - name: vel
                      - name: animi
                      - name: dolor
                      - name: libero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUser
      tags:
        - Users
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: explicabo
              user2:
                value:
                  name: et
              user3:
                value:
                  name: beatae
              user4:
                value:
                  name: unde
              user5:
                value:
                  name: nesciunt
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: eaque
                user2:
                  value:
                    user:
                      name: asperiores
                user3:
                  value:
                    user:
                      name: voluptatem
                user4:
                  value:
                    user:
                      name: mollitia
                user5:
                  value:
                    user:
                      name: nam
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}':
    head:
      operationId: checkUser
      tags:
        - Users
      summary: Check user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUser
      tags:
        - Users
      summary: Get user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: sint
                user2:
                  value:
                    user:
                      name: error
                user3:
                  value:
                    user:
                      name: quia
                user4:
                  value:
                    user:
                      name: ut
                user5:
                  value:
                    user:
                      name: repellendus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUser
      tags:
        - Users
      summary: Replace user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: consequuntur
              user2:
                value:
                  name: distinctio
              user3:
                value:
                  name: beatae
              user4:
                value:
                  name: quaerat
              user5:
                value:
                  name: saepe
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: perspiciatis
                user2:
                  value:
                    user:
                      name: facere
                user3:
                  value:
                    user:
                      name: aperiam
                user4:
                  value:
                    user:
                      name: distinctio
                user5:
                  value:
                    user:
                      name: repudiandae
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUser
      tags:
        - Users
      summary: Modify user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
            examples:
              user1:
                value:
                  name: impedit
              user2:
                value:
                  name: officiis
              user3:
                value:
                  name: nulla
              user4:
                value:
                  name: commodi
              user5:
                value:
                  name: molestias
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: veniam
                user2:
                  value:
                    user:
                      name: sed
                user3:
                  value:
                    user:
                      name: tenetur
                user4:
                  value:
                    user:
                      name: labore
                user5:
                  value:
                    user:
                      name: assumenda
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUser
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: getUserAsUser
      tags:
        - User
      summary: Get user for user
      parameters: []
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'
              examples:
                user1:
                  value:
                    user:
                      name: eius
                user2:
                  value:
                    user:
                      name: dolor
                user3:
                  value:
                    user:
                      name: ut
                user4:
                  value:
                    user:
                      name: illo
                user5:
                  value:
                    user:
                      name: ratione
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses':
    get:
      operationId: listUserCourses
      tags:
        - Users
      summary: List user courses
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      userCourses:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    nextPageToken: 0f175b5c-9523-4d99-b6ed-10e0a84c5136
                    userCourses:
                      - courseId: qui
                      - courseId: voluptas
                      - courseId: quia
                      - courseId: aut
                      - courseId: consequatur
                      - courseId: quia
                      - courseId: quia
                      - courseId: reiciendis
                      - courseId: voluptatem
                      - courseId: nostrum
                      - courseId: consequuntur
                      - courseId: eaque
                      - courseId: illo
                      - courseId: ipsam
                      - courseId: voluptas
                      - courseId: et
                      - courseId: quia
                      - courseId: qui
                      - courseId: autem
                      - courseId: blanditiis
                userCourse2:
                  value:
                    nextPageToken: b61aecbf-3db4-4e45-9e73-f2f4bd4020fb
                    userCourses:
                      - courseId: repellendus
                      - courseId: nesciunt
                      - courseId: aut
                      - courseId: maiores
                      - courseId: et
                      - courseId: omnis
                      - courseId: ab
                      - courseId: necessitatibus
                      - courseId: consequatur
                      - courseId: eum
                      - courseId: temporibus
                      - courseId: nobis
                      - courseId: placeat
                      - courseId: perferendis
                      - courseId: cumque
                      - courseId: nisi
                      - courseId: accusamus
                      - courseId: placeat
                      - courseId: voluptas
                      - courseId: adipisci
                userCourse3:
                  value:
                    nextPageToken: 7726ece2-67c5-4905-ad1f-43f5f4e44796
                    userCourses:
                      - courseId: facere
                      - courseId: atque
                      - courseId: vero
                      - courseId: unde
                      - courseId: et
                      - courseId: maxime
                      - courseId: quo
                      - courseId: impedit
                      - courseId: culpa
                      - courseId: esse
                      - courseId: ad
                      - courseId: vero
                      - courseId: in
                      - courseId: eligendi
                      - courseId: reprehenderit
                      - courseId: hic
                      - courseId: est
                      - courseId: incidunt
                      - courseId: dolores
                      - courseId: qui
                userCourse4:
                  value:
                    nextPageToken: 28744819-1931-4945-b55d-3a7a3945dc6b
                    userCourses:
                      - courseId: eius
                      - courseId: quis
                      - courseId: nostrum
                      - courseId: aut
                      - courseId: quia
                      - courseId: est
                      - courseId: veritatis
                      - courseId: ducimus
                      - courseId: quam
                      - courseId: est
                      - courseId: ab
                      - courseId: unde
                      - courseId: optio
                      - courseId: voluptatem
                      - courseId: quod
                      - courseId: voluptatem
                      - courseId: aspernatur
                      - courseId: quia
                      - courseId: suscipit
                      - courseId: fugiat
                userCourse5:
                  value:
                    nextPageToken: e2dd3ad0-4f4f-49ba-97ea-6965cbae1c04
                    userCourses:
                      - courseId: earum
                      - courseId: dolorum
                      - courseId: sequi
                      - courseId: id
                      - courseId: est
                      - courseId: et
                      - courseId: et
                      - courseId: fugiat
                      - courseId: voluptatem
                      - courseId: nobis
                      - courseId: error
                      - courseId: odit
                      - courseId: est
                      - courseId: ut
                      - courseId: aliquam
                      - courseId: voluptatum
                      - courseId: libero
                      - courseId: est
                      - courseId: magni
                      - courseId: vero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createUserCourse
      tags:
        - Users
      summary: Create user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCourseRequest'
            examples:
              userCourse1:
                value:
                  courseId: nostrum
              userCourse2:
                value:
                  courseId: asperiores
              userCourse3:
                value:
                  courseId: cumque
              userCourse4:
                value:
                  courseId: modi
              userCourse5:
                value:
                  courseId: amet
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: repellat
                userCourse2:
                  value:
                    userCourse:
                      courseId: recusandae
                userCourse3:
                  value:
                    userCourse:
                      courseId: voluptatum
                userCourse4:
                  value:
                    userCourse:
                      courseId: ea
                userCourse5:
                  value:
                    userCourse:
                      courseId: non
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/users/{userId}/courses/{courseId}':
    head:
      operationId: checkUserCourse
      tags:
        - Users
      summary: Check user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getUserCourse
      tags:
        - Users
      summary: Get user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: est
                userCourse2:
                  value:
                    userCourse:
                      courseId: omnis
                userCourse3:
                  value:
                    userCourse:
                      courseId: provident
                userCourse4:
                  value:
                    userCourse:
                      courseId: qui
                userCourse5:
                  value:
                    userCourse:
                      courseId: occaecati
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceUserCourse
      tags:
        - Users
      summary: Replace user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCourseRequest'
            examples:
              userCourse1:
                value:
                  courseId: unde
              userCourse2:
                value:
                  courseId: sint
              userCourse3:
                value:
                  courseId: ipsa
              userCourse4:
                value:
                  courseId: ut
              userCourse5:
                value:
                  courseId: voluptatibus
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: qui
                userCourse2:
                  value:
                    userCourse:
                      courseId: dolor
                userCourse3:
                  value:
                    userCourse:
                      courseId: qui
                userCourse4:
                  value:
                    userCourse:
                      courseId: excepturi
                userCourse5:
                  value:
                    userCourse:
                      courseId: fuga
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyUserCourse
      tags:
        - Users
      summary: Modify user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCourseRequest'
            examples:
              userCourse1:
                value:
                  courseId: non
              userCourse2:
                value:
                  courseId: molestiae
              userCourse3:
                value:
                  courseId: consequatur
              userCourse4:
                value:
                  courseId: et
              userCourse5:
                value:
                  courseId: ex
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCourse:
                    $ref: '#/components/schemas/UserCourseResponse'
              examples:
                userCourse1:
                  value:
                    userCourse:
                      courseId: quisquam
                userCourse2:
                  value:
                    userCourse:
                      courseId: ut
                userCourse3:
                  value:
                    userCourse:
                      courseId: earum
                userCourse4:
                  value:
                    userCourse:
                      courseId: vel
                userCourse5:
                  value:
                    userCourse:
                      courseId: ab
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteUserCourse
      tags:
        - Users
      summary: Delete user course
      parameters:
        - in: path
          required: true
          name: userId
          schema:
            type: string
          description: User id
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/courses:
    get:
      operationId: listCoursesAsUser
      tags:
        - User
      summary: List courses for user
      parameters:
        - name: pageSize
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
          in: query
          required: false
        - name: pageToken
          description: Page token
          schema:
            type: string
          in: query
          required: false
        - name: orderBy
          description: Order by
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          description: List succeeded
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginationResponse'
                  - type: object
                    properties:
                      courses:
                        type: array
                        items:
                          $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    nextPageToken: 61e516ad-9611-44c7-8857-c07753946ab9
                    courses:
                      - name: id
                      - name: soluta
                      - name: rerum
                      - name: quia
                      - name: quidem
                      - name: blanditiis
                      - name: omnis
                      - name: sapiente
                      - name: facilis
                      - name: fugiat
                      - name: voluptas
                      - name: quia
                      - name: vel
                      - name: sint
                      - name: veniam
                      - name: autem
                      - name: dolorem
                      - name: accusantium
                      - name: officia
                      - name: dolor
                course2:
                  value:
                    nextPageToken: ff6a6fc0-8d16-4e03-812e-f2cec9200d2c
                    courses:
                      - name: voluptate
                      - name: sequi
                      - name: eos
                      - name: enim
                      - name: et
                      - name: quia
                      - name: iste
                      - name: quasi
                      - name: aut
                      - name: veritatis
                      - name: tenetur
                      - name: provident
                      - name: sequi
                      - name: consequatur
                      - name: animi
                      - name: numquam
                      - name: possimus
                      - name: laborum
                      - name: aut
                      - name: consequatur
                course3:
                  value:
                    nextPageToken: 640de76e-54ed-415b-9192-0abd8823ab39
                    courses:
                      - name: voluptatem
                      - name: voluptatem
                      - name: voluptas
                      - name: qui
                      - name: autem
                      - name: sequi
                      - name: delectus
                      - name: possimus
                      - name: et
                      - name: quidem
                      - name: perferendis
                      - name: aut
                      - name: libero
                      - name: laboriosam
                      - name: accusantium
                      - name: minima
                      - name: impedit
                      - name: aut
                      - name: et
                      - name: repudiandae
                course4:
                  value:
                    nextPageToken: 7d8d8148-7be2-4458-8459-a3a8b8ba05e5
                    courses:
                      - name: aspernatur
                      - name: delectus
                      - name: eligendi
                      - name: accusamus
                      - name: enim
                      - name: ut
                      - name: consequatur
                      - name: libero
                      - name: atque
                      - name: id
                      - name: et
                      - name: sunt
                      - name: necessitatibus
                      - name: optio
                      - name: enim
                      - name: molestiae
                      - name: ut
                      - name: ipsum
                      - name: laboriosam
                      - name: culpa
                course5:
                  value:
                    nextPageToken: dfa9e85a-efe0-42a6-b2e8-9b43aa2b0d5f
                    courses:
                      - name: magni
                      - name: necessitatibus
                      - name: ut
                      - name: magni
                      - name: molestias
                      - name: saepe
                      - name: assumenda
                      - name: omnis
                      - name: eligendi
                      - name: fugit
                      - name: et
                      - name: placeat
                      - name: eius
                      - name: praesentium
                      - name: ducimus
                      - name: aut
                      - name: nobis
                      - name: repellat
                      - name: est
                      - name: vel
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: createCourseAsUser
      tags:
        - User
      summary: Create course for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: est
              course2:
                value:
                  name: error
              course3:
                value:
                  name: occaecati
              course4:
                value:
                  name: sunt
              course5:
                value:
                  name: consequatur
      responses:
        '201':
          description: Create succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: quibusdam
                course2:
                  value:
                    course:
                      name: occaecati
                course3:
                  value:
                    course:
                      name: ut
                course4:
                  value:
                    course:
                      name: excepturi
                course5:
                  value:
                    course:
                      name: qui
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/user/courses/{courseId}':
    head:
      operationId: checkCourseAsUser
      tags:
        - User
      summary: Check course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Check succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      operationId: getCourseAsUser
      tags:
        - User
      summary: Get course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '200':
          description: Get succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: facilis
                course2:
                  value:
                    course:
                      name: nihil
                course3:
                  value:
                    course:
                      name: nemo
                course4:
                  value:
                    course:
                      name: qui
                course5:
                  value:
                    course:
                      name: temporibus
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: replaceCourseAsUser
      tags:
        - User
      summary: Replace course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: iste
              course2:
                value:
                  name: aliquid
              course3:
                value:
                  name: at
              course4:
                value:
                  name: a
              course5:
                value:
                  name: rerum
      responses:
        '200':
          description: Replace succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: eaque
                course2:
                  value:
                    course:
                      name: provident
                course3:
                  value:
                    course:
                      name: a
                course4:
                  value:
                    course:
                      name: quo
                course5:
                  value:
                    course:
                      name: voluptatem
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: modifyCourseAsUser
      tags:
        - User
      summary: Modify course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseRequest'
            examples:
              course1:
                value:
                  name: et
              course2:
                value:
                  name: laborum
              course3:
                value:
                  name: dolores
              course4:
                value:
                  name: labore
              course5:
                value:
                  name: enim
      responses:
        '200':
          description: Modify succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  course:
                    $ref: '#/components/schemas/CourseResponse'
              examples:
                course1:
                  value:
                    course:
                      name: dolor
                course2:
                  value:
                    course:
                      name: libero
                course3:
                  value:
                    course:
                      name: accusamus
                course4:
                  value:
                    course:
                      name: quia
                course5:
                  value:
                    course:
                      name: libero
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteCourseAsUser
      tags:
        - User
      summary: Delete course for user
      parameters:
        - in: path
          required: true
          name: courseId
          schema:
            type: string
          description: Course id
      responses:
        '204':
          description: Delete succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EmptyResponse:
      type: object
    ErrorResponse:
      type: object
      properties:
        code:
          type: number
          readOnly: true
        message:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        details:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - statusCode
        - message
    PaginationResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          format: uuid
      required:
        - nextPageToken
    CourseResponse:
      properties:
        name:
          type: string
    CourseRequest:
      properties:
        name:
          type: string
    UserResponse:
      properties:
        name:
          type: string
    UserRequest:
      properties:
        name:
          type: string
    UserCourseResponse:
      properties:
        courseId:
          type: string
    UserCourseRequest:
      properties:
        courseId:
          type: string
